/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICrossChainTransfers,
  ICrossChainTransfersInterface,
} from "../../../contracts/NotReallyACrossChainToken.sol/ICrossChainTransfers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "paraId",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "beneficiary",
        type: "bytes32",
      },
    ],
    name: "teleport",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICrossChainTransfers__factory {
  static readonly abi = _abi;
  static createInterface(): ICrossChainTransfersInterface {
    return new Interface(_abi) as ICrossChainTransfersInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): ICrossChainTransfers {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as ICrossChainTransfers;
  }
}
