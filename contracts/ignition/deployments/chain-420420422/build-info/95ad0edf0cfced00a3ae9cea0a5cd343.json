{
  "id": "95ad0edf0cfced00a3ae9cea0a5cd343",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/NotReallyACrossChainToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\naddress constant XCM_PRECOMPILE_ADDRESS = address(0xA0000);\naddress constant CROSS_CHAIN_TRANSFERS_ADDRESS = 0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64;\n\ninterface IXcm {\n    struct Weight {\n        uint64 refTime;\n        uint64 proofSize;\n    }\n\n    function execute(bytes calldata message, Weight calldata weight) external;\n    function send(bytes calldata destination, bytes calldata message) external;\n    function weighMessage(bytes calldata message) external returns (Weight memory weight);\n}\n\ninterface ICrossChainTransfers {\n    function teleport(uint128 amount, uint32 paraId, bytes32 beneficiary) external returns (bytes memory);\n}\n\ncontract NotReallyACrossChainToken is ERC20 {\n    error NoValueSent();\n    error InsufficientFunds();\n    error RedeemFailed(bytes reason);\n\n    event RedeemSuccess(address indexed account, uint128 amount);\n    \n    constructor() ERC20(\"NotReallyACrossChainToken\", \"NRXT\") {}\n\n    function mint() external payable {\n        if (msg.value == 0) revert NoValueSent();\n        _mint(msg.sender, msg.value);\n    }\n\n    function redeem(uint128 amount, uint32 paraId, bytes32 beneficiary) external {\n        if (balanceOf(msg.sender) < amount) revert InsufficientFunds();\n        _burn(msg.sender, amount);\n\n        bytes memory message = ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary);\n\n        IXcm.Weight memory weight = IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message);\n\n        try IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight) {\n            emit RedeemSuccess(msg.sender, amount);\n        } catch (bytes memory reason) {\n            revert RedeemFailed(reason);\n        }\n    }\n}"
      }
    },
    "settings": {
      "evmVersion": "paris",
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi"
          ]
        }
      },
      "resolc": {
        "version": "latest",
        "compilerSource": "npm",
        "settings": {
          "optimizer": {}
        }
      }
    }
  },
  "output": {
    "errors": [],
    "version": "0.8.28",
    "long_version": "0.8.28+commit.7893614a.Emscripten.clang",
    "revive_version": "0.2.0+commit.e94432e.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              136
            ],
            "IERC20Errors": [
              41
            ],
            "IERC721Errors": [
              89
            ]
          },
          "id": 137,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:0",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 41,
              "linearizedBaseContracts": [
                41
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 11,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "654:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "670:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "687:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:0"
                  },
                  "src": "623:80:0"
                },
                {
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 16,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "891:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:0"
                  },
                  "src": "866:41:0"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 21,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "1104:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:0"
                  },
                  "src": "1077:45:0"
                },
                {
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:0",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 30,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1511:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1528:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1547:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:0"
                  },
                  "src": "1478:85:0"
                },
                {
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 35,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "1775:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:0"
                  },
                  "src": "1748:45:0"
                },
                {
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:0",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 40,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2025:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:0"
                  },
                  "src": "1999:43:0"
                }
              ],
              "scope": 137,
              "src": "280:1764:0",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 42,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:0",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 89,
              "linearizedBaseContracts": [
                89
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:0",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 47,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2469:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:0"
                  },
                  "src": "2444:40:0"
                },
                {
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:0",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 52,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "2656:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:0"
                  },
                  "src": "2627:46:0"
                },
                {
                  "documentation": {
                    "id": 53,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:0",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 61,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3000:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3016:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3033:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:0"
                  },
                  "src": "2973:75:0"
                },
                {
                  "documentation": {
                    "id": 62,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 66,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "3237:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:0"
                  },
                  "src": "3211:42:0"
                },
                {
                  "documentation": {
                    "id": 67,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 71,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "3451:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:0"
                  },
                  "src": "3423:46:0"
                },
                {
                  "documentation": {
                    "id": 72,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 78,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3760:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3778:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:0"
                  },
                  "src": "3727:68:0"
                },
                {
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 83,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "4008:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:0"
                  },
                  "src": "3980:46:0"
                },
                {
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 88,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "4262:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:0"
                  },
                  "src": "4234:46:0"
                }
              ],
              "scope": 137,
              "src": "2190:2092:0",
              "usedErrors": [
                47,
                52,
                61,
                66,
                71,
                78,
                83,
                88
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 90,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:0",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 136,
              "linearizedBaseContracts": [
                136
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 101,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4860:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4876:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4893:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4909:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:0"
                  },
                  "src": "4827:99:0"
                },
                {
                  "documentation": {
                    "id": 102,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 106,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5116:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:0"
                  },
                  "src": "5089:43:0"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 111,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "5331:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:0"
                  },
                  "src": "5302:47:0"
                },
                {
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 118,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5651:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5669:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:0"
                  },
                  "src": "5616:68:0"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 123,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "5898:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:0"
                  },
                  "src": "5869:47:0"
                },
                {
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 128,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "6153:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:0"
                  },
                  "src": "6124:47:0"
                },
                {
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:0",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 135,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6494:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6513:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:0"
                  },
                  "src": "6462:73:0"
                }
              ],
              "scope": 137,
              "src": "4430:2107:0",
              "usedErrors": [
                101,
                106,
                111,
                118,
                123,
                128,
                135
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:0"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              785
            ],
            "ERC20": [
              651
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 652,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 138,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 140,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 730,
              "src": "131:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 139,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "139:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 142,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 756,
              "src": "168:63:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 141,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 755,
                    "src": "176:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 144,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 786,
              "src": "232:48:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 143,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 785,
                    "src": "240:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 146,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 137,
              "src": "281:65:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 145,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "289:12:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 148,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 785,
                    "src": "1133:7:1"
                  },
                  "id": 149,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:1"
                },
                {
                  "baseName": {
                    "id": 150,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "1142:6:1"
                  },
                  "id": 151,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:1"
                },
                {
                  "baseName": {
                    "id": 152,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 755,
                    "src": "1150:14:1"
                  },
                  "id": 153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:1"
                },
                {
                  "baseName": {
                    "id": 154,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "1166:12:1"
                  },
                  "id": 155,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:1"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 147,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:1",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 651,
              "linearizedBaseContracts": [
                651,
                41,
                755,
                729,
                785
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1185:53:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 158,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:1",
                    "keyType": {
                      "id": 156,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1245:83:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 164,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:1",
                    "keyType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 163,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:1",
                      "keyType": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1335:28:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1370:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1396:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1638:57:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 179,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1648:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 180,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "1656:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:1"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 183,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1671:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1681:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 172,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:1",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 188,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1594:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1615:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:1"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:1"
                  },
                  "scope": 651,
                  "src": "1582:113:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    742
                  ],
                  "body": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "1820:29:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 194,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1837:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 195,
                        "nodeType": "Return",
                        "src": "1830:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:1",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 197,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:1"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "1805:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:1"
                  },
                  "scope": 651,
                  "src": "1760:89:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    748
                  ],
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2024:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2041:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 204,
                        "nodeType": "Return",
                        "src": "2034:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:1",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:1"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2009:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:1"
                  },
                  "scope": 651,
                  "src": "1962:93:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    754
                  ],
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2744:26:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 211,
                        "id": 213,
                        "nodeType": "Return",
                        "src": "2754:9:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:1",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "2737:5:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:1"
                  },
                  "scope": 651,
                  "src": "2688:82:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    678
                  ],
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "2891:36:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 221,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2908:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 220,
                        "id": 222,
                        "nodeType": "Return",
                        "src": "2901:19:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:1",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 224,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:1"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2882:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:1"
                  },
                  "scope": 651,
                  "src": "2830:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    686
                  ],
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "3059:42:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 232,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3076:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3086:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 231,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "3069:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:1",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3004:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:1"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3050:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:1"
                  },
                  "scope": 651,
                  "src": "2985:116:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    696
                  ],
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "3371:103:1",
                    "statements": [
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3381:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 251,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 249,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "3397:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 253,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "3429:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 254,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "3436:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 255,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3440:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 252,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "3419:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 246,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "3456:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:1",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3314:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3326:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:1"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3365:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:1"
                  },
                  "scope": 651,
                  "src": "3296:178:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    706
                  ],
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "3621:51:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 271,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3638:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 273,
                            "indexExpression": {
                              "id": 272,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "3650:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3657:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 270,
                        "id": 276,
                        "nodeType": "Return",
                        "src": "3631:34:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:1",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3551:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3566:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:1"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3612:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:1"
                  },
                  "scope": 651,
                  "src": "3532:140:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    716
                  ],
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "4058:107:1",
                    "statements": [
                      {
                        "assignments": [
                          289
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 289,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4068:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 292,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 290,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4084:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 294,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "4115:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 295,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4122:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 296,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "4131:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 293,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 542,
                            "src": "4106:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 287,
                        "id": 300,
                        "nodeType": "Return",
                        "src": "4147:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 279,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:1",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "3996:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4013:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:1"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4052:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:1"
                  },
                  "scope": 651,
                  "src": "3979:186:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    728
                  ],
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "4850:151:1",
                    "statements": [
                      {
                        "assignments": [
                          315
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 315,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 333,
                            "src": "4860:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 316,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4878:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 320,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4916:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 321,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "4922:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 322,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4931:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 319,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "4900:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 324,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 326,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4957:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 327,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "4963:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 328,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4967:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 325,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4947:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 313,
                        "id": 332,
                        "nodeType": "Return",
                        "src": "4983:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:1",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4779:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4793:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4805:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:1"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4844:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:1"
                  },
                  "scope": 651,
                  "src": "4757:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "5443:231:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 344,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "5457:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 345,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 358,
                        "nodeType": "IfStatement",
                        "src": "5453:86:1",
                        "trueBody": {
                          "id": 357,
                          "nodeType": "Block",
                          "src": "5477:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 353,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 352,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 351,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 350,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "5498:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 356,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 359,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "5552:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 373,
                        "nodeType": "IfStatement",
                        "src": "5548:86:1",
                        "trueBody": {
                          "id": 372,
                          "nodeType": "Block",
                          "src": "5570:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 366,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 365,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5591:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 371,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 375,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5651:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 376,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "5657:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 377,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "5661:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 374,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "5643:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5393:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5407:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5419:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:1"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:1"
                  },
                  "scope": 651,
                  "src": "5374:300:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 457,
                    "nodeType": "Block",
                    "src": "6064:1032:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6078:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 392,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 428,
                          "nodeType": "Block",
                          "src": "6252:362:1",
                          "statements": [
                            {
                              "assignments": [
                                403
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 403,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 428,
                                  "src": "6266:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 402,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 407,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 404,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159,
                                  "src": "6288:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 406,
                                "indexExpression": {
                                  "id": 405,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "6298:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 408,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "6321:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 409,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6335:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 418,
                              "nodeType": "IfStatement",
                              "src": "6317:115:1",
                              "trueBody": {
                                "id": 417,
                                "nodeType": "Block",
                                "src": "6342:90:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 412,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 384,
                                          "src": "6392:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 413,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "6398:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 414,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 388,
                                          "src": "6411:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 411,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11,
                                        "src": "6367:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 416,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 427,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 419,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6552:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 421,
                                      "indexExpression": {
                                        "id": 420,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 384,
                                        "src": "6562:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 422,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 403,
                                        "src": "6570:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 423,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 388,
                                        "src": "6584:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 426,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "6074:540:1",
                        "trueBody": {
                          "id": 401,
                          "nodeType": "Block",
                          "src": "6098:148:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 397,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "6214:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 398,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6230:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 400,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 430,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "6628:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 449,
                          "nodeType": "Block",
                          "src": "6843:206:1",
                          "statements": [
                            {
                              "id": 448,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 442,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "7002:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 444,
                                      "indexExpression": {
                                        "id": 443,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "7012:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 445,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "7019:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 447,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 450,
                        "nodeType": "IfStatement",
                        "src": "6624:425:1",
                        "trueBody": {
                          "id": 441,
                          "nodeType": "Block",
                          "src": "6646:191:1",
                          "statements": [
                            {
                              "id": 440,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 436,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 167,
                                      "src": "6791:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 437,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "6807:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 439,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:1"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "7073:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 453,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 386,
                              "src": "7079:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 454,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "7083:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 451,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "7064:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:1",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6006:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6020:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6032:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:1"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:1"
                  },
                  "scope": 651,
                  "src": "5989:1107:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "7495:152:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 466,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7509:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 467,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "IfStatement",
                        "src": "7505:91:1",
                        "trueBody": {
                          "id": 479,
                          "nodeType": "Block",
                          "src": "7532:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 474,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 473,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 472,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "7553:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 478,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 482,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 486,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "7625:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 487,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "7634:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 481,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "7605:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 459,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:1",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7454:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7471:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:1"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:1"
                  },
                  "scope": 651,
                  "src": "7439:208:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "8021:150:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 499,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "8035:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 513,
                        "nodeType": "IfStatement",
                        "src": "8031:89:1",
                        "trueBody": {
                          "id": 512,
                          "nodeType": "Block",
                          "src": "8058:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 506,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 505,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "8079:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 511,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "8137:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 520,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "8158:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 514,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "8129:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 492,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:1",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7980:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7997:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:1"
                  },
                  "returnParameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:1"
                  },
                  "scope": 651,
                  "src": "7965:206:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "8781:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 535,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "8800:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 536,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8807:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 537,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8816:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 534,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 602,
                            "src": "8791:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:1",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8725:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8740:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8757:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:1"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:1"
                  },
                  "scope": 651,
                  "src": "8707:128:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "9780:334:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 554,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "9794:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 555,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 568,
                        "nodeType": "IfStatement",
                        "src": "9790:89:1",
                        "trueBody": {
                          "id": 567,
                          "nodeType": "Block",
                          "src": "9815:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 561,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 560,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9836:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 566,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 569,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 547,
                            "src": "9892:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 570,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "9888:90:1",
                        "trueBody": {
                          "id": 582,
                          "nodeType": "Block",
                          "src": "9915:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 578,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 576,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 575,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "9936:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 581,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 584,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "9987:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 587,
                              "indexExpression": {
                                "id": 585,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "9999:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 588,
                            "indexExpression": {
                              "id": 586,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "10006:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 589,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "10017:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:1"
                      },
                      {
                        "condition": {
                          "id": 592,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "10036:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 600,
                        "nodeType": "IfStatement",
                        "src": "10032:76:1",
                        "trueBody": {
                          "id": 599,
                          "nodeType": "Block",
                          "src": "10047:61:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 545,
                                    "src": "10075:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 595,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "10082:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 596,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 549,
                                    "src": "10091:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 593,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "10066:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 598,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 543,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:1",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 602,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9700:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9715:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9732:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9747:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:1"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:1"
                  },
                  "scope": 651,
                  "src": "9682:432:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "10485:387:1",
                    "statements": [
                      {
                        "assignments": [
                          613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 613,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "10495:24:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 612,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 618,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "10532:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 616,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "10539:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 614,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "10522:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 619,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "10561:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 621,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 620,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 648,
                        "nodeType": "IfStatement",
                        "src": "10557:309:1",
                        "trueBody": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "10599:267:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 626,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "10617:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 627,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "10636:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 636,
                              "nodeType": "IfStatement",
                              "src": "10613:130:1",
                              "trueBody": {
                                "id": 635,
                                "nodeType": "Block",
                                "src": "10643:100:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 630,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 607,
                                          "src": "10695:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 631,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10704:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 632,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10722:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 629,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "10668:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 634,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 646,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 638,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "10793:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 639,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 607,
                                        "src": "10800:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 642,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 640,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10809:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 641,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10828:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 643,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 637,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        542,
                                        602
                                      ],
                                      "referencedDeclaration": 602,
                                      "src": "10784:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 645,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:1"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:1",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10421:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10436:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10453:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:1"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:1"
                  },
                  "scope": 651,
                  "src": "10396:476:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 652,
              "src": "1106:9768:1",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "105:10770:1"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ]
          },
          "id": 730,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 653,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 654,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:2",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 729,
              "linearizedBaseContracts": [
                729
              ],
              "name": "IERC20",
              "nameLocation": "214:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 655,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 663,
                  "name": "Transfer",
                  "nameLocation": "396:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "405:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "427:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "447:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:2"
                  },
                  "src": "390:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 664,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 672,
                  "name": "Approval",
                  "nameLocation": "627:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "636:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "659:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "684:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:2"
                  },
                  "src": "621:78:2"
                },
                {
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:2",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 678,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:2"
                  },
                  "returnParameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "821:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:2"
                  },
                  "scope": 729,
                  "src": "775:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 679,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:2",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 686,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "931:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:2"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "971:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:2"
                  },
                  "scope": 729,
                  "src": "912:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 687,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:2",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 696,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1222:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1234:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:2"
                  },
                  "returnParameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1267:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:2"
                  },
                  "scope": 729,
                  "src": "1204:69:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 706,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1567:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1582:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:2"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1622:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:2"
                  },
                  "scope": 729,
                  "src": "1548:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:2",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 716,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2326:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2343:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:2"
                  },
                  "returnParameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2376:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:2"
                  },
                  "scope": 729,
                  "src": "2309:73:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 717,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 728,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2712:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2726:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2738:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:2"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2771:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:2"
                  },
                  "scope": 729,
                  "src": "2690:87:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 730,
              "src": "204:2575:2",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "106:2674:2"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 756,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 731,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 733,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 756,
              "sourceUnit": 730,
              "src": "151:37:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 732,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "159:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 735,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "306:6:3"
                  },
                  "id": 736,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:3"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 734,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:3",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 755,
              "linearizedBaseContracts": [
                755,
                729
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 737,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 742,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:3"
                  },
                  "returnParameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "417:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:3"
                  },
                  "scope": 755,
                  "src": "378:54:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 743,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:3",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 748,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:3"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "540:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:3"
                  },
                  "scope": 755,
                  "src": "499:56:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 749,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:3",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 754,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 750,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:3"
                  },
                  "returnParameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "674:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:3"
                  },
                  "scope": 755,
                  "src": "631:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 756,
              "src": "278:405:3",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "125:559:3"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              785
            ]
          },
          "id": 786,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 757,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 758,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:4",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 785,
              "linearizedBaseContracts": [
                785
              ],
              "name": "Context",
              "nameLocation": "642:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 766,
                    "nodeType": "Block",
                    "src": "718:34:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 763,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 762,
                        "id": 765,
                        "nodeType": "Return",
                        "src": "728:17:4"
                      }
                    ]
                  },
                  "id": 767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:4"
                  },
                  "returnParameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "709:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:4"
                  },
                  "scope": 785,
                  "src": "656:96:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 775,
                    "nodeType": "Block",
                    "src": "825:32:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:4",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 771,
                        "id": 774,
                        "nodeType": "Return",
                        "src": "835:15:4"
                      }
                    ]
                  },
                  "id": 776,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:4"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 776,
                        "src": "809:14:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:4"
                  },
                  "scope": 785,
                  "src": "758:99:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 783,
                    "nodeType": "Block",
                    "src": "935:25:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 780,
                        "id": 782,
                        "nodeType": "Return",
                        "src": "945:8:4"
                      }
                    ]
                  },
                  "id": 784,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:4"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 784,
                        "src": "926:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:4"
                  },
                  "scope": 785,
                  "src": "863:97:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 786,
              "src": "624:338:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:4"
        }
      },
      "contracts/NotReallyACrossChainToken.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "contracts/NotReallyACrossChainToken.sol",
          "exportedSymbols": {
            "CROSS_CHAIN_TRANSFERS_ADDRESS": [
              797
            ],
            "Context": [
              785
            ],
            "ERC20": [
              651
            ],
            "ICrossChainTransfers": [
              838
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              755
            ],
            "IXcm": [
              826
            ],
            "NotReallyACrossChainToken": [
              958
            ],
            "XCM_PRECOMPILE_ADDRESS": [
              794
            ]
          },
          "id": 959,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 787,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 788,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 959,
              "sourceUnit": 652,
              "src": "58:55:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "constant": true,
              "id": 794,
              "mutability": "constant",
              "name": "XCM_PRECOMPILE_ADDRESS",
              "nameLocation": "132:22:5",
              "nodeType": "VariableDeclaration",
              "scope": 959,
              "src": "115:58:5",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 789,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "115:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "value": {
                "arguments": [
                  {
                    "hexValue": "30784130303030",
                    "id": 792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "165:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_655360_by_1",
                      "typeString": "int_const 655360"
                    },
                    "value": "0xA0000"
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_rational_655360_by_1",
                      "typeString": "int_const 655360"
                    }
                  ],
                  "id": 791,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "157:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_address_$",
                    "typeString": "type(address)"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "157:7:5",
                    "typeDescriptions": {}
                  }
                },
                "id": 793,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "157:16:5",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": true,
              "id": 797,
              "mutability": "constant",
              "name": "CROSS_CHAIN_TRANSFERS_ADDRESS",
              "nameLocation": "192:29:5",
              "nodeType": "VariableDeclaration",
              "scope": 959,
              "src": "175:91:5",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 795,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "175:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "value": {
                "hexValue": "307836323464374535443946364530324532623637613662453944423136316435653866313236433634",
                "id": 796,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "224:42:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "value": "0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64"
              },
              "visibility": "internal"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IXcm",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 826,
              "linearizedBaseContracts": [
                826
              ],
              "name": "IXcm",
              "nameLocation": "279:4:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "IXcm.Weight",
                  "id": 802,
                  "members": [
                    {
                      "constant": false,
                      "id": 799,
                      "mutability": "mutable",
                      "name": "refTime",
                      "nameLocation": "321:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 802,
                      "src": "314:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 798,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "314:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 801,
                      "mutability": "mutable",
                      "name": "proofSize",
                      "nameLocation": "345:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 802,
                      "src": "338:16:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 800,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "338:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Weight",
                  "nameLocation": "297:6:5",
                  "nodeType": "StructDefinition",
                  "scope": 826,
                  "src": "290:71:5",
                  "visibility": "public"
                },
                {
                  "functionSelector": "d3b7e04d",
                  "id": 810,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "execute",
                  "nameLocation": "376:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 808,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 804,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "399:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "384:22:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 803,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "384:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "mutability": "mutable",
                        "name": "weight",
                        "nameLocation": "424:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 810,
                        "src": "408:22:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Weight_$802_calldata_ptr",
                          "typeString": "struct IXcm.Weight"
                        },
                        "typeName": {
                          "id": 806,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 805,
                            "name": "Weight",
                            "nameLocations": [
                              "408:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 802,
                            "src": "408:6:5"
                          },
                          "referencedDeclaration": 802,
                          "src": "408:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Weight_$802_storage_ptr",
                            "typeString": "struct IXcm.Weight"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "383:48:5"
                  },
                  "returnParameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "440:0:5"
                  },
                  "scope": 826,
                  "src": "367:74:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7f0a3bf9",
                  "id": 817,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nameLocation": "455:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 812,
                        "mutability": "mutable",
                        "name": "destination",
                        "nameLocation": "475:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "460:26:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 811,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 814,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "503:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 817,
                        "src": "488:22:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "488:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:52:5"
                  },
                  "returnParameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "520:0:5"
                  },
                  "scope": 826,
                  "src": "446:75:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "47400c23",
                  "id": 825,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "weighMessage",
                  "nameLocation": "535:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 819,
                        "mutability": "mutable",
                        "name": "message",
                        "nameLocation": "563:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 825,
                        "src": "548:22:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "548:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "547:24:5"
                  },
                  "returnParameters": {
                    "id": 824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 823,
                        "mutability": "mutable",
                        "name": "weight",
                        "nameLocation": "604:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 825,
                        "src": "590:20:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Weight_$802_memory_ptr",
                          "typeString": "struct IXcm.Weight"
                        },
                        "typeName": {
                          "id": 822,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 821,
                            "name": "Weight",
                            "nameLocations": [
                              "590:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 802,
                            "src": "590:6:5"
                          },
                          "referencedDeclaration": 802,
                          "src": "590:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Weight_$802_storage_ptr",
                            "typeString": "struct IXcm.Weight"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "589:22:5"
                  },
                  "scope": 826,
                  "src": "526:86:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 959,
              "src": "269:345:5",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ICrossChainTransfers",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 838,
              "linearizedBaseContracts": [
                838
              ],
              "name": "ICrossChainTransfers",
              "nameLocation": "626:20:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "14051b2e",
                  "id": 837,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "teleport",
                  "nameLocation": "662:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 828,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "679:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "671:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 827,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "671:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "paraId",
                        "nameLocation": "694:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "687:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nameLocation": "710:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "702:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "702:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "670:52:5"
                  },
                  "returnParameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "741:12:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "740:14:5"
                  },
                  "scope": 838,
                  "src": "653:102:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 959,
              "src": "616:141:5",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 839,
                    "name": "ERC20",
                    "nameLocations": [
                      "797:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 651,
                    "src": "797:5:5"
                  },
                  "id": 840,
                  "nodeType": "InheritanceSpecifier",
                  "src": "797:5:5"
                }
              ],
              "canonicalName": "NotReallyACrossChainToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 958,
              "linearizedBaseContracts": [
                958,
                651,
                41,
                755,
                729,
                785
              ],
              "name": "NotReallyACrossChainToken",
              "nameLocation": "768:25:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "errorSelector": "9dce2b3c",
                  "id": 842,
                  "name": "NoValueSent",
                  "nameLocation": "815:11:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 841,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "826:2:5"
                  },
                  "src": "809:20:5"
                },
                {
                  "errorSelector": "356680b7",
                  "id": 844,
                  "name": "InsufficientFunds",
                  "nameLocation": "840:17:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "857:2:5"
                  },
                  "src": "834:26:5"
                },
                {
                  "errorSelector": "7d9137fe",
                  "id": 848,
                  "name": "RedeemFailed",
                  "nameLocation": "871:12:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "reason",
                        "nameLocation": "890:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "884:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "883:14:5"
                  },
                  "src": "865:33:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "872717deb9fe44de9e827e6810e66a226c9deb394feffa4652f6d1ed5f6ad800",
                  "id": 854,
                  "name": "RedeemSuccess",
                  "nameLocation": "910:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "924:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 852,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "957:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "949:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "923:41:5"
                  },
                  "src": "904:61:5"
                },
                {
                  "body": {
                    "id": 861,
                    "nodeType": "Block",
                    "src": "1032:2:5",
                    "statements": []
                  },
                  "id": 862,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4e6f745265616c6c794143726f7373436861696e546f6b656e",
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "995:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d0e55dffd70dccd648c5483ff1cc5b134a06d0eb233c88a2d5532a408d3fb3a6",
                            "typeString": "literal_string \"NotReallyACrossChainToken\""
                          },
                          "value": "NotReallyACrossChainToken"
                        },
                        {
                          "hexValue": "4e525854",
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1024:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e02d5001446dced566f421e9b8860ef818493306e0227c3a0a5c69c700a95c17",
                            "typeString": "literal_string \"NRXT\""
                          },
                          "value": "NRXT"
                        }
                      ],
                      "id": 859,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 856,
                        "name": "ERC20",
                        "nameLocations": [
                          "989:5:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 651,
                        "src": "989:5:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "989:42:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 855,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:2:5"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1032:0:5"
                  },
                  "scope": 958,
                  "src": "975:59:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 880,
                    "nodeType": "Block",
                    "src": "1073:95:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 865,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1087:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1091:5:5",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1087:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1100:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1087:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 872,
                        "nodeType": "IfStatement",
                        "src": "1083:40:5",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 869,
                              "name": "NoValueSent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "1110:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1110:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 871,
                          "nodeType": "RevertStatement",
                          "src": "1103:20:5"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 874,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1139:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1143:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1139:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 876,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1151:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1155:5:5",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1151:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 873,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "1133:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1133:28:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 879,
                        "nodeType": "ExpressionStatement",
                        "src": "1133:28:5"
                      }
                    ]
                  },
                  "functionSelector": "1249c58b",
                  "id": 881,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "1049:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1053:2:5"
                  },
                  "returnParameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1073:0:5"
                  },
                  "scope": 958,
                  "src": "1040:128:5",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 956,
                    "nodeType": "Block",
                    "src": "1251:544:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 891,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "1275:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 892,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1279:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1275:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 890,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "1265:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1265:21:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 894,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 883,
                            "src": "1289:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "1265:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 899,
                        "nodeType": "IfStatement",
                        "src": "1261:62:5",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 896,
                              "name": "InsufficientFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 844,
                              "src": "1304:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1304:19:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 898,
                          "nodeType": "RevertStatement",
                          "src": "1297:26:5"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 901,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1339:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1343:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1339:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 903,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 883,
                              "src": "1351:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 900,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "1333:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1333:25:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 905,
                        "nodeType": "ExpressionStatement",
                        "src": "1333:25:5"
                      },
                      {
                        "assignments": [
                          907
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 907,
                            "mutability": "mutable",
                            "name": "message",
                            "nameLocation": "1382:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 956,
                            "src": "1369:20:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 906,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1369:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 918,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 912,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 883,
                                "src": "1453:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "316538",
                                "id": 913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1462:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "value": "1e8"
                              },
                              "src": "1453:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 915,
                              "name": "paraId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 885,
                              "src": "1467:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 916,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "1475:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 909,
                                  "name": "CROSS_CHAIN_TRANSFERS_ADDRESS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 797,
                                  "src": "1413:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 908,
                                "name": "ICrossChainTransfers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 838,
                                "src": "1392:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ICrossChainTransfers_$838_$",
                                  "typeString": "type(contract ICrossChainTransfers)"
                                }
                              },
                              "id": 910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1392:51:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ICrossChainTransfers_$838",
                                "typeString": "contract ICrossChainTransfers"
                              }
                            },
                            "id": 911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1444:8:5",
                            "memberName": "teleport",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "1392:60:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint128_$_t_uint32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint128,uint32,bytes32) external returns (bytes memory)"
                            }
                          },
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1392:95:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1369:118:5"
                      },
                      {
                        "assignments": [
                          923
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 923,
                            "mutability": "mutable",
                            "name": "weight",
                            "nameLocation": "1517:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 956,
                            "src": "1498:25:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Weight_$802_memory_ptr",
                              "typeString": "struct IXcm.Weight"
                            },
                            "typeName": {
                              "id": 922,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 921,
                                "name": "IXcm.Weight",
                                "nameLocations": [
                                  "1498:4:5",
                                  "1503:6:5"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 802,
                                "src": "1498:11:5"
                              },
                              "referencedDeclaration": 802,
                              "src": "1498:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Weight_$802_storage_ptr",
                                "typeString": "struct IXcm.Weight"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 930,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 928,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "1568:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 925,
                                  "name": "XCM_PRECOMPILE_ADDRESS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 794,
                                  "src": "1531:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 924,
                                "name": "IXcm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 826,
                                "src": "1526:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IXcm_$826_$",
                                  "typeString": "type(contract IXcm)"
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1526:28:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IXcm_$826",
                                "typeString": "contract IXcm"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1555:12:5",
                            "memberName": "weighMessage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 825,
                            "src": "1526:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_struct$_Weight_$802_memory_ptr_$",
                              "typeString": "function (bytes memory) external returns (struct IXcm.Weight memory)"
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1526:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Weight_$802_memory_ptr",
                            "typeString": "struct IXcm.Weight memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1498:78:5"
                      },
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 944,
                              "nodeType": "Block",
                              "src": "1645:63:5",
                              "statements": [
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 939,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "1678:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 940,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1682:6:5",
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1678:10:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 941,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 883,
                                        "src": "1690:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      ],
                                      "id": 938,
                                      "name": "RedeemSuccess",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 854,
                                      "src": "1664:13:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint128_$returns$__$",
                                        "typeString": "function (address,uint128)"
                                      }
                                    },
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1664:33:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 943,
                                  "nodeType": "EmitStatement",
                                  "src": "1659:38:5"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 945,
                            "nodeType": "TryCatchClause",
                            "src": "1645:63:5"
                          },
                          {
                            "block": {
                              "id": 953,
                              "nodeType": "Block",
                              "src": "1737:52:5",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "id": 950,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 947,
                                        "src": "1771:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 949,
                                      "name": "RedeemFailed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 848,
                                      "src": "1758:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$_t_error_$",
                                        "typeString": "function (bytes memory) pure returns (error)"
                                      }
                                    },
                                    "id": 951,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1758:20:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 952,
                                  "nodeType": "RevertStatement",
                                  "src": "1751:27:5"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 954,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 948,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 947,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "1729:6:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 954,
                                  "src": "1716:19:5",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 946,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1716:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "1715:21:5"
                            },
                            "src": "1709:80:5"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 935,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 907,
                              "src": "1628:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 936,
                              "name": "weight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 923,
                              "src": "1637:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Weight_$802_memory_ptr",
                                "typeString": "struct IXcm.Weight memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_Weight_$802_memory_ptr",
                                "typeString": "struct IXcm.Weight memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 932,
                                  "name": "XCM_PRECOMPILE_ADDRESS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 794,
                                  "src": "1596:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 931,
                                "name": "IXcm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 826,
                                "src": "1591:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IXcm_$826_$",
                                  "typeString": "type(contract IXcm)"
                                }
                              },
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1591:28:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IXcm_$826",
                                "typeString": "contract IXcm"
                              }
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1620:7:5",
                            "memberName": "execute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 810,
                            "src": "1591:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_struct$_Weight_$802_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,struct IXcm.Weight memory) external"
                            }
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1591:53:5",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 955,
                        "nodeType": "TryStatement",
                        "src": "1587:202:5"
                      }
                    ]
                  },
                  "functionSelector": "7b135643",
                  "id": 957,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "redeem",
                  "nameLocation": "1183:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 888,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1198:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "1190:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1190:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 885,
                        "mutability": "mutable",
                        "name": "paraId",
                        "nameLocation": "1213:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "1206:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 884,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1206:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 887,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nameLocation": "1229:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 957,
                        "src": "1221:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 886,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1189:52:5"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1251:0:5"
                  },
                  "scope": 958,
                  "src": "1174:621:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 959,
              "src": "759:1038:5",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40,
                842,
                844,
                848
              ],
              "usedEvents": [
                663,
                672,
                854
              ]
            }
          ],
          "src": "32:1765:5"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "contracts/NotReallyACrossChainToken.sol": {
        "ICrossChainTransfers": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "paraId",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "beneficiary",
                  "type": "bytes32"
                }
              ],
              "name": "teleport",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"paraId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"beneficiary\",\"type\":\"bytes32\"}],\"name\":\"teleport\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NotReallyACrossChainToken.sol\":\"ICrossChainTransfers\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/NotReallyACrossChainToken.sol\":{\"keccak256\":\"0x654a5627028ef322ba8de329c7d993392b69edf1d7a604ed1f922b6bc58558a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2f77771a3c0554f7d3d197bed8bbe4e2667ae3d50d5ac3bae78615dd47ab5c\",\"dweb:/ipfs/QmZJG9ReM2VZPgRBjTF9rnAjK7enfdWdXvRDqkxqn4r4hM\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "teleport(uint128,uint32,bytes32)": "14051b2e"
            }
          },
          "irOptimized": ""
        },
        "IXcm": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                },
                {
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "refTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "proofSize",
                      "type": "uint64"
                    }
                  ],
                  "internalType": "struct IXcm.Weight",
                  "name": "weight",
                  "type": "tuple"
                }
              ],
              "name": "execute",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "destination",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "name": "send",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                }
              ],
              "name": "weighMessage",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint64",
                      "name": "refTime",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint64",
                      "name": "proofSize",
                      "type": "uint64"
                    }
                  ],
                  "internalType": "struct IXcm.Weight",
                  "name": "weight",
                  "type": "tuple"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"refTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proofSize\",\"type\":\"uint64\"}],\"internalType\":\"struct IXcm.Weight\",\"name\":\"weight\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"destination\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"weighMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"refTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"proofSize\",\"type\":\"uint64\"}],\"internalType\":\"struct IXcm.Weight\",\"name\":\"weight\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NotReallyACrossChainToken.sol\":\"IXcm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/NotReallyACrossChainToken.sol\":{\"keccak256\":\"0x654a5627028ef322ba8de329c7d993392b69edf1d7a604ed1f922b6bc58558a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2f77771a3c0554f7d3d197bed8bbe4e2667ae3d50d5ac3bae78615dd47ab5c\",\"dweb:/ipfs/QmZJG9ReM2VZPgRBjTF9rnAjK7enfdWdXvRDqkxqn4r4hM\"]}},\"version\":1}",
          "evm": {
            "methodIdentifiers": {
              "execute(bytes,(uint64,uint64))": "d3b7e04d",
              "send(bytes,bytes)": "7f0a3bf9",
              "weighMessage(bytes)": "47400c23"
            }
          },
          "irOptimized": ""
        },
        "NotReallyACrossChainToken": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientFunds",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NoValueSent",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "reason",
                  "type": "bytes"
                }
              ],
              "name": "RedeemFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                }
              ],
              "name": "RedeemSuccess",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mint",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "amount",
                  "type": "uint128"
                },
                {
                  "internalType": "uint32",
                  "name": "paraId",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "beneficiary",
                  "type": "bytes32"
                }
              ],
              "name": "redeem",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.2.0+commit.e94432e.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoValueSent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"RedeemFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"RedeemSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"paraId\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"beneficiary\",\"type\":\"bytes32\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NotReallyACrossChainToken.sol\":\"NotReallyACrossChainToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/NotReallyACrossChainToken.sol\":{\"keccak256\":\"0x654a5627028ef322ba8de329c7d993392b69edf1d7a604ed1f922b6bc58558a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e2f77771a3c0554f7d3d197bed8bbe4e2667ae3d50d5ac3bae78615dd47ab5c\",\"dweb:/ipfs/QmZJG9ReM2VZPgRBjTF9rnAjK7enfdWdXvRDqkxqn4r4hM\"]}},\"version\":1}",
            "solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 232/65824 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 8188\n// Code size = 28502 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x200f0]\n   117: jump @213 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30120\n   126: i32 a0 = a0 + 0\n   128: ecalli 13 // 'set_immutable_data'\n   130: jump @213\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @27\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @27\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 7 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 14 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 [@dyn 3] (gas: 35)\n   923: a1 = u64 [sp]\n   925: a1 = reverse a1\n   927: a2 = u64 [sp + 0x8]\n   930: a2 = reverse a2\n   932: a3 = u64 [sp + 0x10]\n   935: a3 = reverse a3\n   937: a4 = u64 [sp + 0x18]\n   940: a4 = reverse a4\n   942: u64 [sp + 0x58] = a4\n   945: u64 [sp + 0x50] = a3\n   948: u64 [sp + 0x48] = a2\n   951: u64 [sp + 0x40] = a1\n   954: a1 = u64 [sp + 0x20]\n   957: a1 = reverse a1\n   959: a2 = u64 [sp + 0x28]\n   962: a2 = reverse a2\n   964: a3 = u64 [sp + 0x30]\n   967: a3 = reverse a3\n   969: a4 = u64 [sp + 0x38]\n   972: a4 = reverse a4\n   974: u64 [sp + 0x78] = a4\n   977: u64 [sp + 0x70] = a3\n   980: u64 [sp + 0x68] = a2\n   983: u64 [sp + 0x60] = a1\n   986: i32 a2 = a0 + 0\n   988: i32 a3 = s1 + 0\n   990: i32 a0 = sp + 0x40\n   993: a1 = 0x2\n   996: ecalli 6 // 'deposit_event'\n   998: sp = s0 + 0xffffffffffffff60\n  1002: ra = u64 [sp + 0x98]\n  1006: s0 = u64 [sp + 0x90]\n  1010: s1 = u64 [sp + 0x88]\n  1014: sp = sp + 0xa0\n  1018: ret\n      : @24 (gas: 33)\n  1020: sp = sp + 0xffffffffffffff20\n  1024: u64 [sp + 0xd8] = ra\n  1028: u64 [sp + 0xd0] = s0\n  1032: u64 [sp + 0xc8] = s1\n  1036: s0 = sp + 0xe0\n  1040: sp = sp & 0xffffffffffffffe0\n  1043: a5 = u64 [a4]\n  1045: u64 [sp + 0x40] = a5\n  1048: a5 = u64 [a4 + 0x8]\n  1051: u64 [sp + 0x48] = a5\n  1054: a5 = u64 [a4 + 0x10]\n  1057: u64 [sp + 0x50] = a5\n  1060: a4 = u64 [a4 + 0x18]\n  1063: u64 [sp + 0x58] = a4\n  1066: t0 = 0x8\n  1069: a4 = u64 [a3]\n  1071: u64 [sp + 0x18] = a4\n  1074: a4 = u64 [a3 + 0x8]\n  1077: u64 [sp + 0x20] = a4\n  1080: a4 = u64 [a3 + 0x10]\n  1083: u64 [sp + 0x28] = a4\n  1086: a3 = u64 [a3 + 0x18]\n  1089: u64 [sp + 0x30] = a3\n  1092: s1 = u64 [a2]\n  1094: a3 = u64 [a2 + 0x8]\n  1097: u64 [sp] = a3\n  1099: a3 = u64 [a2 + 0x10]\n  1102: u64 [sp + 0x8] = a3\n  1105: a2 = u64 [a2 + 0x18]\n  1108: u64 [sp + 0x10] = a2\n  1111: u64 [sp + 56] = 0x20\n  1115: ra = 0xa\n  1118: jump @27\n      : @25 [@dyn 4] (gas: 2)\n  1121: u64 [sp + 0x38] = a1\n  1124: ra = 10, jump @27\n      : @26 [@dyn 5] (gas: 46)\n  1129: a1 = reverse s1\n  1131: u64 [sp + 0x78] = a1\n  1134: a1 = u64 [sp]\n  1136: a1 = reverse a1\n  1138: u64 [sp + 0x70] = a1\n  1141: a1 = u64 [sp + 0x8]\n  1144: a1 = reverse a1\n  1146: u64 [sp + 0x68] = a1\n  1149: a1 = u64 [sp + 0x10]\n  1152: a1 = reverse a1\n  1154: u64 [sp + 0x60] = a1\n  1157: a1 = u64 [sp + 0x18]\n  1160: a1 = reverse a1\n  1162: u64 [sp + 0x98] = a1\n  1166: a1 = u64 [sp + 0x20]\n  1169: a1 = reverse a1\n  1171: u64 [sp + 0x90] = a1\n  1175: a1 = u64 [sp + 0x28]\n  1178: a1 = reverse a1\n  1180: u64 [sp + 0x88] = a1\n  1184: a1 = u64 [sp + 0x30]\n  1187: a1 = reverse a1\n  1189: u64 [sp + 0x80] = a1\n  1193: a1 = u64 [sp + 0x40]\n  1196: a1 = reverse a1\n  1198: u64 [sp + 0xb8] = a1\n  1202: a1 = u64 [sp + 0x48]\n  1205: a1 = reverse a1\n  1207: u64 [sp + 0xb0] = a1\n  1211: a1 = u64 [sp + 0x50]\n  1214: a1 = reverse a1\n  1216: u64 [sp + 0xa8] = a1\n  1220: a1 = u64 [sp + 0x58]\n  1223: a1 = reverse a1\n  1225: u64 [sp + 0xa0] = a1\n  1229: i32 a2 = a0 + 0\n  1231: a3 = i32 [sp + 0x38]\n  1234: i32 a0 = sp + 0x60\n  1237: a1 = 0x3\n  1240: ecalli 6 // 'deposit_event'\n  1242: sp = s0 + 0xffffffffffffff20\n  1246: ra = u64 [sp + 0xd8]\n  1250: s0 = u64 [sp + 0xd0]\n  1254: s1 = u64 [sp + 0xc8]\n  1258: sp = sp + 0xe0\n  1262: ret\n      : @27 (gas: 2)\n  1264: i32 a2 = a0 >> 0x10\n  1267: jump @32 if a2 != 0\n      : @28 (gas: 4)\n  1270: a1 = a1 + a0\n  1273: i32 a1 = a1 + 0x1f\n  1276: a1 = a1 & 0xffffffffffffffe0\n  1279: jump @32 if a1 >u 65536\n      : @29 (gas: 3)\n  1285: a2 = 0x200ec\n  1290: a3 = i32 [0x200ec]\n  1295: jump @31 if a3 >=u a1\n      : @30 (gas: 2)\n  1298: u32 [0x200ec] = a1\n  1303: fallthrough\n      : @31 (gas: 4)\n  1304: a1 = 0x20100\n  1309: i32 a0 = a0 + 0\n  1311: a0 = a0 + a1\n  1314: ret\n      : @32 (gas: 1)\n  1316: trap\n      : @33 (gas: 6)\n  1317: sp = sp + 0xfffffffffffffff0\n  1320: u64 [sp + 0x8] = ra\n  1323: u64 [sp] = s0\n  1325: s0 = a0 & 0x1\n  1328: ecalli 3 // 'call_data_size'\n  1330: fallthrough\n      : @34 (gas: 2)\n  1331: u32 [0x200e8] = a0\n  1336: jump @36 if s0 == 0\n      : @35 (gas: 1)\n  1339: ra = 12, jump @37\n      : @36 [@dyn 6] (gas: 18)\n  1343: ra = 0xe\n  1346: sp = sp + 0xfffffffffffffe10\n  1350: u64 [sp + 0x1e8] = ra\n  1354: u64 [sp + 0x1e0] = s0\n  1358: u64 [sp + 0x1d8] = s1\n  1362: s0 = sp + 0x1f0\n  1366: sp = sp + 0xffffffffffffe210\n  1370: sp = sp & 0xffffffffffffffe0\n  1373: s1 = sp\n  1375: a2 = s1 + 0x1878\n  1379: u64 [a2 + 288] = 0\n  1383: u64 [a2 + 280] = 0\n  1387: u64 [a2 + 264] = 0x80\n  1393: a0 = 0x40\n  1396: a1 = s1 + 0x1980\n  1400: u64 [a2 + 272] = 0\n  1404: ra = 0xd2\n  1408: jump @19\n      : @37 [@dyn 7] (gas: 15)\n  1411: sp = sp + 0xfffffffffffff820\n  1415: a0 = sp + 0x700\n  1419: u64 [a0 + 0xd8] = ra\n  1423: u64 [a0 + 0xd0] = s0\n  1427: u64 [a0 + 0xc8] = s1\n  1431: s0 = sp + 0x7e0\n  1435: sp = sp & 0xffffffffffffffe0\n  1438: s1 = sp\n  1440: u64 [s1 + 1432] = 0\n  1444: u64 [s1 + 1424] = 0\n  1448: u64 [s1 + 1408] = 0x80\n  1454: a0 = 0x40\n  1457: a1 = s1 + 0x580\n  1461: u64 [s1 + 1416] = 0\n  1465: ra = 16, jump @19\n      : @38 [@dyn 8] (gas: 7)\n  1470: u64 [s1 + 1464] = 0\n  1474: u64 [s1 + 1456] = 0\n  1478: u64 [s1 + 1448] = 0\n  1482: u64 [s1 + 1440] = 0\n  1486: i32 a0 = s1 + 0x5a0\n  1490: ecalli 15 // 'value_transferred'\n  1492: fallthrough\n      : @39 (gas: 9)\n  1493: a4 = s1 + 0x500\n  1497: a0 = u64 [a4 + 0xb0]\n  1501: a1 = u64 [a4 + 0xb8]\n  1505: a2 = u64 [a4 + 0xa8]\n  1509: a3 = u64 [a4 + 0xa0]\n  1513: a1 = a1 | a2\n  1516: a0 = a0 | a3\n  1519: a0 = a0 | a1\n  1522: jump @41 if a0 == 0\n      : @40 (gas: 1)\n  1525: jump @173\n      : @41 (gas: 3)\n  1528: a0 = s1 + 0x560\n  1532: a1 = 0x40\n  1535: ra = 18, jump @17\n      : @42 [@dyn 9] (gas: 15)\n  1540: t1 = u64 [s1 + 0x578]\n  1544: a4 = u64 [s1 + 0x570]\n  1548: a5 = u64 [s1 + 0x568]\n  1552: t2 = u64 [s1 + 0x560]\n  1556: a0 = t1 >u 0\n  1558: a1 = a4 >u 0\n  1560: a1 = a0 if t1 != 0\n  1563: a0 = a5 >u 0\n  1565: a2 = t2 <u 0xffffffffffffffc0\n  1568: a2 = a2 ^ 0x1\n  1571: a2 = a0 if a5 != 0\n  1574: a0 = a4 | t1\n  1577: u64 [s1 + 0x118] = a0\n  1581: a2 = a1 if a0 != 0\n  1584: jump @44 if a2 == 0\n      : @43 (gas: 1)\n  1587: jump @174\n      : @44 (gas: 20)\n  1590: a0 = t2 + 0x40\n  1593: a1 = a0 <u t2\n  1596: a2 = a5 + a1\n  1599: a3 = a2 <u a5\n  1602: a3 = a1 if a1 == 0\n  1605: a3 = a3 + a4\n  1608: a1 = a3 <u a4\n  1611: t0 = t1 + a1\n  1614: a1 = s1 + 0x500\n  1618: u64 [a1 + 0x40] = a0\n  1621: u64 [a1 + 0x48] = a2\n  1624: u64 [a1 + 0x50] = a3\n  1627: a0 = 0x40\n  1630: a1 = s1 + 0x540\n  1634: u64 [s1 + 0x558] = t0\n  1638: u64 [s1 + 0xa0] = t1\n  1642: u64 [s1 + 0x98] = a4\n  1646: u64 [s1 + 0xa8] = a5\n  1650: u64 [s1 + 0xb0] = t2\n  1654: ra = 20, jump @19\n      : @45 [@dyn 10] (gas: 12)\n  1659: a0 = u64 [s1 + 0xb0]\n  1663: a2 = u64 [s1 + 0x98]\n  1667: a4 = a0 | a2\n  1670: a1 = u64 [s1 + 0xa0]\n  1674: a3 = u64 [s1 + 0xa8]\n  1678: a1 = a1 | a3\n  1681: a4 = a4 | a1\n  1684: a4 = a4 >> 0x20\n  1687: a1 = a1 | a2\n  1690: a1 = a1 << 0x20\n  1693: a1 = a1 | a4\n  1696: jump @47 if a1 == 0\n      : @46 (gas: 1)\n  1699: jump @172\n      : @47 (gas: 6)\n  1702: u64 [s1 + 1336] = 0\n  1706: u64 [s1 + 1328] = 0\n  1710: u64 [s1 + 1320] = 0\n  1714: a1 = s1 + 0x520\n  1718: u64 [s1 + 1312] = 0x19\n  1723: ra = 22, jump @19\n      : @48 [@dyn 11] (gas: 8)\n  1728: a2 = u64 [s1 + 0xb0]\n  1732: a0 = 0xffffffe0\n  1742: a0 = a2 <u a0\n  1745: a1 = u64 [s1 + 0xa8]\n  1749: a0 = 0 if a1 != 0\n  1751: a1 = u64 [s1 + 0x118]\n  1755: a0 = 0 if a1 != 0\n  1757: jump @50 if a0 != 0\n      : @49 (gas: 1)\n  1760: jump @172\n      : @50 (gas: 13)\n  1763: i32 a0 = a2 + 0x20\n  1766: a3 = u64 [0x20000]\n  1771: a1 = u64 [0x20008]\n  1776: a2 = u64 [0x20010]\n  1781: a4 = s1 + 0x500\n  1785: u64 [a4 + 0x18] = a3\n  1788: u64 [a4 + 0x10] = a1\n  1791: u64 [a4 + 0x8] = a2\n  1794: a2 = 0x6e00000000000000\n  1804: a1 = s1 + 0x500\n  1808: u64 [a4] = a2\n  1810: u64 [s1 + 0xd0] = a0\n  1814: ra = 24, jump @19\n      : @51 [@dyn 12] (gas: 3)\n  1819: a0 = s1 + 0x4e0\n  1823: a1 = 0x40\n  1826: ra = 26, jump @17\n      : @52 [@dyn 13] (gas: 16)\n  1831: t2 = u64 [s1 + 0x4f8]\n  1835: a1 = s1 + 0x400\n  1839: a5 = u64 [a1 + 0xf0]\n  1843: a4 = u64 [a1 + 0xe8]\n  1847: a0 = u64 [a1 + 0xe0]\n  1851: a2 = t2 >u 0\n  1853: a1 = a5 >u 0\n  1855: a1 = a2 if t2 != 0\n  1858: a3 = a4 >u 0\n  1860: a2 = a0 <u 0xffffffffffffffc0\n  1863: a2 = a2 ^ 0x1\n  1866: a2 = a3 if a4 != 0\n  1869: a3 = a5 | t2\n  1872: u64 [s1 + 0x118] = a3\n  1876: a2 = a1 if a3 != 0\n  1879: jump @54 if a2 == 0\n      : @53 (gas: 1)\n  1882: jump @180\n      : @54 (gas: 19)\n  1885: t1 = a0 + 0x40\n  1888: a1 = t1 <u a0\n  1891: a2 = a4 + a1\n  1894: a3 = a2 <u a4\n  1897: a3 = a1 if a1 == 0\n  1900: a3 = a3 + a5\n  1903: a1 = a3 <u a5\n  1906: u64 [s1 + 0x80] = a0\n  1910: t0 = t2 + a1\n  1913: u64 [s1 + 0x4c0] = t1\n  1917: u64 [s1 + 0x4c8] = a2\n  1921: u64 [s1 + 0x4d0] = a3\n  1925: a0 = 0x40\n  1928: a1 = s1 + 0x4c0\n  1932: u64 [s1 + 0x4d8] = t0\n  1936: u64 [s1 + 0x70] = a5\n  1939: u64 [s1 + 0x78] = a4\n  1942: u64 [s1 + 0x68] = t2\n  1945: ra = 28, jump @19\n      : @55 [@dyn 14] (gas: 12)\n  1950: a0 = u64 [s1 + 0x80]\n  1954: a2 = u64 [s1 + 0x70]\n  1957: a3 = a0 | a2\n  1960: a1 = u64 [s1 + 0x78]\n  1963: a4 = u64 [s1 + 0x68]\n  1966: a1 = a1 | a4\n  1969: a3 = a3 | a1\n  1972: a3 = a3 >> 0x20\n  1975: a1 = a1 | a2\n  1978: a1 = a1 << 0x20\n  1981: a1 = a1 | a3\n  1984: jump @57 if a1 == 0\n      : @56 (gas: 1)\n  1987: jump @172\n      : @57 (gas: 6)\n  1990: u64 [s1 + 1208] = 0\n  1994: u64 [s1 + 1200] = 0\n  1998: u64 [s1 + 1192] = 0\n  2002: a1 = s1 + 0x4a0\n  2006: u64 [s1 + 1184] = 0x4\n  2011: ra = 30, jump @19\n      : @58 [@dyn 15] (gas: 8)\n  2016: a2 = u64 [s1 + 0x80]\n  2020: a0 = 0xffffffe0\n  2030: a0 = a2 <u a0\n  2033: a1 = u64 [s1 + 0x78]\n  2036: a0 = 0 if a1 != 0\n  2038: a1 = u64 [s1 + 0x118]\n  2042: a0 = 0 if a1 != 0\n  2044: jump @60 if a0 != 0\n      : @59 (gas: 1)\n  2047: jump @172\n      : @60 (gas: 9)\n  2050: i32 a0 = a2 + 0x20\n  2053: u64 [s1 + 1168] = 0\n  2057: u64 [s1 + 1160] = 0\n  2061: u64 [s1 + 1152] = 0\n  2065: a2 = 0x4e52585400000000\n  2075: a1 = s1 + 0x480\n  2079: u64 [s1 + 0x498] = a2\n  2083: u64 [s1 + 0x18] = a0\n  2086: ra = 32, jump @19\n      : @61 [@dyn 16] (gas: 3)\n  2091: a0 = s1 + 0x460\n  2095: a1 = u64 [s1 + 0xb0]\n  2099: ra = 34, jump @17\n      : @62 [@dyn 17] (gas: 17)\n  2104: a0 = s1 + 0x400\n  2108: a3 = u64 [a0 + 0x78]\n  2111: a1 = u64 [a0 + 0x70]\n  2114: a2 = u64 [a0 + 0x68]\n  2117: a0 = a3 >u 0\n  2119: a4 = a1 >u 0\n  2121: a4 = a0 if a3 != 0\n  2124: u64 [s1 + 0xc8] = a2\n  2128: a0 = a2 >u 0\n  2130: u64 [s1 + 0x58] = a1\n  2133: u64 [s1 + 0xc0] = a3\n  2137: a1 = a1 | a3\n  2140: u64 [s1 + 0x50] = a0\n  2143: u64 [s1 + 0x88] = a4\n  2147: u64 [s1 + 0xb8] = a1\n  2151: a0 = a4 if a1 != 0\n  2154: jump @64 if a0 == 0\n      : @63 (gas: 1)\n  2157: jump @186\n      : @64 (gas: 9)\n  2160: a0 = u64 [s1 + 0x460]\n  2164: u64 [s1 + 0x60] = a0\n  2167: u64 [s1 + 1496] = 0\n  2171: u64 [s1 + 1488] = 0\n  2175: u64 [s1 + 1480] = 0\n  2179: u64 [s1 + 1472] = 0x3\n  2184: a0 = s1 + 0x440\n  2188: a1 = s1 + 0x5c0\n  2192: ra = 36, jump @21\n      : @65 [@dyn 18] (gas: 6)\n  2197: a4 = s1 + 0x400\n  2201: a0 = u64 [a4 + 0x50]\n  2204: a1 = u64 [a4 + 0x48]\n  2207: a2 = u64 [a4 + 0x40]\n  2210: a3 = u64 [a4 + 0x58]\n  2213: t0 = 38, jump @938\n      : @66 [@dyn 19] (gas: 12)\n  2218: t0 = a2 <u 0x1\n  2221: ra = a1 & 0x7f\n  2224: t2 = a5 & a0\n  2227: a4 = a5 & t1\n  2230: ra = a1 if a2 != 0\n  2233: a1 = ra <u 0x20\n  2236: a5 = a5 & a3\n  2239: a2 = a1\n  2241: a2 = 0 if a4 != 0\n  2243: a0 = t2 | a5\n  2246: a2 = 0 if a0 != 0\n  2248: jump @68 if t0 == a2\n      : @67 (gas: 1)\n  2251: jump @192\n      : @68 (gas: 1)\n  2254: t0 = 40, jump @943\n      : @69 [@dyn 20] (gas: 4)\n  2259: a0 = u64 [s1 + 0x60]\n  2262: a0 = a0 <u 0x20\n  2265: u64 [s1 + 0x90] = a0\n  2269: jump @81 if a3 == 0\n      : @70 (gas: 11)\n  2273: u64 [s1 + 0xf0] = a4\n  2277: u64 [s1 + 0xf8] = ra\n  2281: u64 [s1 + 0x100] = a5\n  2285: u64 [s1 + 0x110] = t2\n  2289: u64 [s1 + 1080] = 0\n  2293: u64 [s1 + 1072] = 0\n  2297: u64 [s1 + 1064] = 0\n  2301: a1 = s1 + 0x420\n  2305: u64 [s1 + 1056] = 0x3\n  2310: a0 = 0\n  2312: ra = 42, jump @19\n      : @71 [@dyn 21] (gas: 2)\n  2317: a1 = i32 [0x200ec]\n  2322: jump @73 if a1 >u 31\n      : @72 (gas: 2)\n  2326: u32 [0x200ec] = 0x20\n  2332: fallthrough\n      : @73 (gas: 11)\n  2333: a0 = sp + 0xffffffffffffffe0\n  2336: a2 = a0 & 0xffffffffffffffe0\n  2339: u64 [s1 + 0x108] = a2\n  2343: sp = a2\n  2345: a0 = 0x20100\n  2350: i32 a0 = a0 + 0\n  2352: i32 a2 = a2 + 0\n  2354: a1 = 0x20\n  2357: ra = 0x2c\n  2360: ecalli 8 // 'hash_keccak_256'\n  2362: fallthrough\n      : @74 [@dyn 22] (gas: 9)\n  2363: a0 = u64 [s1 + 0x60]\n  2366: a1 = a0 + 0x1f\n  2369: a0 = a1 <u a0\n  2372: a5 = u64 [s1 + 0xc8]\n  2376: a2 = a5 + a0\n  2379: a3 = a2 <u a5\n  2382: a3 = a0 if a0 == 0\n  2385: a4 = u64 [s1 + 0x58]\n  2388: t0 = 46, jump @936\n      : @75 [@dyn 23] (gas: 35)\n  2393: a1 = u64 [s1 + 0x90]\n  2397: a1 = 0 if a5 != 0\n  2399: a3 = u64 [s1 + 0xb8]\n  2403: a1 = 0 if a3 != 0\n  2405: a4 = 0 if a1 != 0\n  2407: a0 = 0 if a1 != 0\n  2409: t0 = t2 + a0\n  2412: a0 = t0 <u t2\n  2415: a5 = a2 + a0\n  2418: a4 = a4 + a5\n  2421: u64 [s1 + 0x118] = a4\n  2425: a5 = a4 ^ a2\n  2428: a3 = a4 <u a2\n  2431: a3 = a0 if a5 == 0\n  2434: u64 [s1 + 0xe0] = a3\n  2438: a0 = u64 [s1 + 0xf8]\n  2442: ra = a0 + 0x1f\n  2445: a4 = ra <u a0\n  2448: a3 = u64 [s1 + 0xf0]\n  2452: a0 = a3 + a4\n  2455: a5 = a0 <u a3\n  2458: a5 = a4 if a4 == 0\n  2461: t1 = u64 [s1 + 0x110]\n  2465: t1 = t1 + a5\n  2468: a4 = t1 << 0x3b\n  2471: a3 = a0 >> 0x5\n  2474: a3 = a3 | a4\n  2477: a0 = a0 << 0x3b\n  2480: a4 = ra >> 0x5\n  2483: a0 = a0 | a4\n  2486: a0 = a0 + t2\n  2489: u64 [s1 + 0xf8] = a0\n  2493: a0 = a0 <u t2\n  2496: t2 = t0\n  2498: t0 = 48, jump @951\n      : @76 [@dyn 24] (gas: 16)\n  2503: a0 = u64 [s1 + 0x58]\n  2506: a0 = a4 <u a0\n  2509: a3 = u64 [s1 + 0xc0]\n  2513: a0 = a0 + a3\n  2516: a3 = a4 >> 0x5\n  2519: a4 = a0 << 0x3b\n  2522: a3 = a3 | a4\n  2525: a4 = u64 [s1 + 0x108]\n  2529: t0 = u64 [a4]\n  2531: a4 = u64 [a4 + 0x8]\n  2534: a0 = a0 >> 0x5\n  2537: a3 = 0 if a1 != 0\n  2539: a0 = 0 if a1 != 0\n  2541: a1 = reverse a4\n  2543: a4 = reverse t0\n  2545: t0 = 50, jump @956\n      : @77 [@dyn 25] (gas: 24)\n  2550: t0 = a0 + a3\n  2553: a0 = u64 [s1 + 0x110]\n  2557: a0 = t1 <u a0\n  2560: a3 = u64 [s1 + 0x100]\n  2564: a0 = a0 + a3\n  2567: a3 = t1 >> 0x5\n  2570: a5 = a0 << 0x3b\n  2573: a3 = a3 | a5\n  2576: a0 = a0 >> 0x5\n  2579: a0 = a0 + a4\n  2582: a4 = u64 [s1 + 0x118]\n  2586: a3 = a3 + a1\n  2589: a1 = a3 <u a1\n  2592: a0 = a0 + a1\n  2595: a2 = a2 + a3\n  2598: u64 [s1 + 0xe8] = a2\n  2602: a1 = a2 <u a3\n  2605: a0 = a0 + a1\n  2608: u64 [s1 + 0xe0] = a0\n  2612: a0 = sp + 0xffffffffffffffe0\n  2615: t1 = a0 & 0xffffffffffffffe0\n  2618: sp = t1\n  2620: u64 [s1 + 0xd8] = t1\n  2624: fallthrough\n      : @78 (gas: 20)\n  2625: a0 = u64 [s1 + 0xf8]\n  2629: a0 = t2 <u a0\n  2632: a2 = u64 [s1 + 0xf0]\n  2636: a1 = a4 ^ a2\n  2639: a2 = a4 <u a2\n  2642: a2 = a0 if a1 == 0\n  2645: a5 = u64 [s1 + 0xe8]\n  2649: a0 = ra <u a5\n  2652: a3 = u64 [s1 + 0xe0]\n  2656: a1 = t0 ^ a3\n  2659: a3 = t0 <u a3\n  2662: a3 = a0 if a1 == 0\n  2665: a0 = ra ^ a5\n  2668: a0 = a0 | a1\n  2671: a3 = a2 if a0 == 0\n  2674: u64 [t1] = t2\n  2676: u64 [t1 + 0x8] = a4\n  2679: u64 [t1 + 0x10] = ra\n  2682: u64 [t1 + 0x18] = t0\n  2685: jump @81 if a3 == 0\n      : @79 (gas: 11)\n  2688: u64 [s1 + 1528] = 0\n  2692: u64 [s1 + 1520] = 0\n  2696: u64 [s1 + 1512] = 0\n  2700: u64 [s1 + 1504] = 0\n  2704: a1 = s1 + 0x5e0\n  2708: a0 = t1\n  2710: u64 [s1 + 0x110] = t2\n  2714: u64 [s1 + 0x118] = a4\n  2718: u64 [s1 + 0x108] = t0\n  2722: u64 [s1 + 0x100] = ra\n  2726: ra = 52, jump @22\n      : @80 [@dyn 26] (gas: 15)\n  2731: t1 = u64 [s1 + 0xd8]\n  2735: t0 = u64 [s1 + 0x108]\n  2739: a4 = u64 [s1 + 0x118]\n  2743: t2 = u64 [s1 + 0x110]\n  2747: t2 = t2 + 0x1\n  2750: a0 = t2 <u 0x1\n  2753: a4 = a4 + a0\n  2756: a0 = t2 | a4\n  2759: a0 = a0 <u 0x1\n  2762: a1 = u64 [s1 + 0x100]\n  2766: a0 = a0 + a1\n  2769: a1 = a0 <u a1\n  2772: t0 = t0 + a1\n  2775: ra = a0\n  2777: jump @78\n      : @81 (gas: 26)\n  2780: a0 = u64 [s1 + 0x90]\n  2784: a0 = a0 ^ 0x1\n  2787: a4 = u64 [s1 + 0xc8]\n  2791: a1 = u64 [s1 + 0x50]\n  2794: a0 = a1 if a4 != 0\n  2797: a1 = u64 [s1 + 0x88]\n  2801: a2 = u64 [s1 + 0xb8]\n  2805: a0 = a1 if a2 != 0\n  2808: t1 = u64 [s1 + 0xc0]\n  2812: t0 = a4 | t1\n  2815: a1 = u64 [s1 + 0x58]\n  2818: a2 = a1 >> 0x3f\n  2821: u64 [s1 + 0x50] = a2\n  2824: t1 = t1 << 0x1\n  2827: a5 = a4 >> 0x3f\n  2830: t2 = a1 << 0x1\n  2833: a3 = u64 [s1 + 0x60]\n  2836: ra = a3 >> 0x3f\n  2839: a4 = a4 << 0x1\n  2842: a2 = a3 << 0x1\n  2845: u64 [s1 + 0x40] = a2\n  2848: u64 [s1 + 0x38] = t1\n  2851: u64 [s1 + 0x30] = ra\n  2854: u64 [s1 + 0x28] = a5\n  2857: u64 [s1 + 0x48] = t2\n  2860: jump @91 if a0 == 0\n      : @82 (gas: 11)\n  2864: u64 [s1 + 0x88] = t0\n  2868: u64 [s1 + 0x20] = a4\n  2871: a3 = a3 & 0xffffffffffffffe0\n  2874: u64 [s1 + 0x90] = a3\n  2878: u64 [s1 + 1016] = 0\n  2882: u64 [s1 + 1008] = 0\n  2886: u64 [s1 + 1000] = 0\n  2890: a1 = s1 + 0x3e0\n  2894: u64 [s1 + 992] = 0x3\n  2899: a0 = 0\n  2901: ra = 54, jump @19\n      : @83 [@dyn 27] (gas: 7)\n  2906: a0 = sp + 0xffffffffffffffe0\n  2909: a0 = a0 & 0xffffffffffffffe0\n  2912: u64 [s1 + 0xf8] = a0\n  2916: sp = a0\n  2918: a1 = 0x20\n  2921: a0 = 0\n  2923: ra = 56, jump @27\n      : @84 [@dyn 28] (gas: 35)\n  2928: a1 = sp + 0xffffffffffffffe0\n  2931: a1 = a1 & 0xffffffffffffffe0\n  2934: u64 [s1 + 0xf0] = a1\n  2938: sp = a1\n  2940: i32 a0 = a0 + 0\n  2942: i32 a2 = a1 + 0\n  2944: a1 = 0x20\n  2947: ecalli 8 // 'hash_keccak_256'\n  2949: u64 [s1 + 280] = 0x20\n  2954: t0 = 0\n  2956: u64 [s1 + 272] = 0\n  2960: u64 [s1 + 264] = 0\n  2964: a4 = 0\n  2966: a5 = 0\n  2968: ra = 0\n  2970: u64 [s1 + 256] = 0\n  2974: a3 = u64 [s1 + 0xf0]\n  2978: a0 = u64 [a3 + 0x18]\n  2981: a1 = u64 [a3 + 0x10]\n  2984: a2 = u64 [a3 + 0x8]\n  2987: t1 = u64 [a3]\n  2989: a0 = reverse a0\n  2991: a1 = reverse a1\n  2993: a3 = reverse a2\n  2995: t1 = reverse t1\n  2997: t2 = t1\n  2999: a2 = u64 [s1 + 0xf8]\n  3003: u64 [a2 + 0x18] = t1\n  3006: u64 [s1 + 0xd0] = a3\n  3010: u64 [a2 + 0x10] = a3\n  3013: u64 [s1 + 0xf0] = a1\n  3017: u64 [a2 + 0x8] = a1\n  3020: a3 = a0\n  3022: u64 [a2] = a0\n  3024: fallthrough\n      : @85 (gas: 25)\n  3025: u64 [s1 + 0xe8] = t2\n  3029: t1 = a3\n  3031: a0 = u64 [s1 + 0x90]\n  3035: u64 [s1 + 0xe0] = a4\n  3039: a0 = a4 <u a0\n  3042: a4 = a0 ^ 0x1\n  3045: u64 [s1 + 0xd8] = a5\n  3049: a4 = 0x1 if a5 != 0\n  3052: a5 = s1 + 0x100\n  3056: a0 = u64 [a5]\n  3058: a0 = ra | a0\n  3061: a4 = 0x1 if a0 != 0\n  3064: a1 = u64 [s1 + 0xb0]\n  3068: a0 = u64 [a5 + 0x18]\n  3071: a1 = a1 + a0\n  3074: a3 = u64 [s1 + 0xa8]\n  3078: a3 = a3 + t0\n  3081: a2 = u64 [s1 + 0x98]\n  3085: a0 = u64 [a5 + 0x10]\n  3088: a2 = a2 + a0\n  3091: a0 = u64 [s1 + 0xa0]\n  3095: t2 = u64 [s1 + 0x108]\n  3099: t2 = t2 + a0\n  3102: a0 = u64 [s1 + 0x88]\n  3106: jump @93 if a4 != 0\n      : @86 (gas: 9)\n  3110: a0 = u64 [s1 + 0x118]\n  3114: a4 = a1 <u a0\n  3117: a3 = a3 + a4\n  3120: a0 = t0\n  3122: t0 = a3 ^ t0\n  3125: u64 [s1 + 0xc0] = a0\n  3129: a5 = a3 <u a0\n  3132: a5 = a4 if t0 == 0\n  3135: t0 = 58, jump @937\n      : @87 [@dyn 29] (gas: 2)\n  3140: u64 [s1 + 0xc8] = t1\n  3144: jump @172 if a0 != 0\n      : @88 (gas: 3)\n  3148: a0 = s1 + 0x220\n  3152: u64 [s1 + 0xb8] = ra\n  3156: ra = 60, jump @17\n      : @89 [@dyn 30] (gas: 13)\n  3161: a4 = s1 + 0x200\n  3165: a0 = u64 [a4 + 0x38]\n  3168: a1 = u64 [a4 + 0x30]\n  3171: a2 = u64 [a4 + 0x28]\n  3174: a3 = u64 [a4 + 0x20]\n  3177: a4 = s1 + 0x600\n  3181: u64 [a4 + 0x18] = a0\n  3184: u64 [a4 + 0x10] = a1\n  3187: u64 [a4 + 0x8] = a2\n  3190: u64 [a4] = a3\n  3192: a1 = s1 + 0x600\n  3196: a0 = u64 [s1 + 0xf8]\n  3200: ra = 62, jump @22\n      : @90 [@dyn 31] (gas: 57)\n  3205: t2 = u64 [s1 + 0xc8]\n  3209: t2 = t2 + 0x1\n  3212: a0 = t2 <u 0x1\n  3215: t0 = u64 [s1 + 0xf0]\n  3219: t0 = t0 + a0\n  3222: a0 = t2 | t0\n  3225: a0 = a0 <u 0x1\n  3228: a1 = u64 [s1 + 0xd0]\n  3232: t1 = a1 + a0\n  3235: a1 = t1 <u a1\n  3238: a0 = u64 [s1 + 0xe8]\n  3242: a0 = a0 + a1\n  3245: a1 = u64 [s1 + 0x118]\n  3249: a2 = a1 + 0x20\n  3252: u64 [s1 + 0xe8] = a2\n  3256: a3 = a2 <u a1\n  3259: a1 = u64 [s1 + 0xc0]\n  3263: a2 = a1 + a3\n  3266: u64 [s1 + 0xc8] = a2\n  3270: a4 = a2 <u a1\n  3273: a4 = a3 if a3 == 0\n  3276: a1 = u64 [s1 + 0x110]\n  3280: ra = a1 + a4\n  3283: a4 = ra <u a1\n  3286: a1 = u64 [s1 + 0x108]\n  3290: a1 = a1 + a4\n  3293: u64 [s1 + 0x108] = a1\n  3297: a1 = u64 [s1 + 0xe0]\n  3301: a4 = a1 + 0x20\n  3304: a5 = a4 <u a1\n  3307: a2 = u64 [s1 + 0xd8]\n  3311: a1 = a2 + a5\n  3314: a2 = a1 <u a2\n  3317: a2 = a5 if a5 == 0\n  3320: a3 = u64 [s1 + 0xb8]\n  3324: a2 = a2 + a3\n  3327: a5 = a2 <u a3\n  3330: a3 = u64 [s1 + 0x100]\n  3334: a3 = a3 + a5\n  3337: u64 [s1 + 0x100] = a3\n  3341: a3 = t0\n  3343: u64 [s1 + 0xf0] = a3\n  3347: a5 = u64 [s1 + 0xf8]\n  3351: u64 [a5 + 0x8] = a3\n  3354: a3 = t2\n  3356: u64 [a5] = t2\n  3358: u64 [a5 + 0x10] = t1\n  3361: t2 = a0\n  3363: u64 [a5 + 0x18] = a0\n  3366: u64 [s1 + 0xd0] = t1\n  3370: a0 = u64 [s1 + 0xe8]\n  3374: u64 [s1 + 0x118] = a0\n  3378: t0 = u64 [s1 + 0xc8]\n  3382: u64 [s1 + 0x110] = ra\n  3386: a5 = a1\n  3388: ra = a2\n  3390: jump @85\n      : @91 (gas: 4)\n  3393: a2 = u64 [s1 + 0x50]\n  3396: a0 = a3 | a1\n  3399: a0 = a0 | t0\n  3402: jump @107 if a0 != 0\n      : @92 (gas: 9)\n  3406: u64 [s1 + 256] = 0\n  3410: u64 [s1 + 248] = 0\n  3414: u64 [s1 + 264] = 0\n  3418: u64 [s1 + 272] = 0\n  3422: t1 = u64 [s1 + 0x38]\n  3425: t0 = u64 [s1 + 0x30]\n  3428: a1 = u64 [s1 + 0x28]\n  3431: a5 = u64 [s1 + 0x48]\n  3434: jump @109\n      : @93 (gas: 10)\n  3437: ra = t0\n  3439: t1 = u64 [s1 + 0x60]\n  3442: a4 = u64 [s1 + 0x90]\n  3446: a4 = a4 ^ t1\n  3449: a5 = u64 [s1 + 0x58]\n  3452: a4 = a4 | a5\n  3455: a4 = a4 | a0\n  3458: t0 = u64 [s1 + 0x20]\n  3461: a5 = u64 [s1 + 0x48]\n  3464: jump @106 if a4 == 0\n      : @94 (gas: 7)\n  3468: a0 = u64 [s1 + 0x118]\n  3472: a4 = a1 <u a0\n  3475: a3 = a3 + a4\n  3478: t0 = a3 ^ ra\n  3481: a5 = a3 <u ra\n  3484: a5 = a4 if t0 == 0\n  3487: t0 = 64, jump @937\n      : @95 [@dyn 32] (gas: 1)\n  3492: jump @172 if a0 != 0\n      : @96 (gas: 2)\n  3496: a0 = s1 + 0x3c0\n  3500: ra = 66, jump @17\n      : @97 [@dyn 33] (gas: 11)\n  3505: a1 = s1 + 0x300\n  3509: a0 = u64 [a1 + 0xd8]\n  3513: u64 [s1 + 0x110] = a0\n  3517: a0 = u64 [a1 + 0xd0]\n  3521: u64 [s1 + 0x108] = a0\n  3525: a0 = u64 [a1 + 0xc8]\n  3529: u64 [s1 + 0x100] = a0\n  3533: a0 = u64 [a1 + 0xc0]\n  3537: u64 [s1 + 0xf0] = a0\n  3541: a0 = u64 [s1 + 0x60]\n  3544: t0 = 68, jump @952\n      : @98 [@dyn 34] (gas: 1)\n  3549: ra = 70, jump @969\n      : @99 [@dyn 35] (gas: 6)\n  3554: u64 [s1 + 0xe8] = a0\n  3558: u64 [s1 + 0xd0] = a1\n  3562: a0 = 0xffffffffffffffff\n  3565: a1 = 0xffffffffffffffff\n  3568: a2 = u64 [s1 + 0x118]\n  3572: ra = 72, jump @964\n      : @100 [@dyn 36] (gas: 1)\n  3577: t0 = 74, jump @953\n      : @101 [@dyn 37] (gas: 1)\n  3582: ra = 76, jump @964\n      : @102 [@dyn 38] (gas: 1)\n  3587: t0 = 78, jump @932\n      : @103 [@dyn 39] (gas: 2)\n  3592: a2 = u64 [s1 + 0x100]\n  3596: t0 = 80, jump @959\n      : @104 [@dyn 40] (gas: 8)\n  3601: a4 = s1 + 0x600\n  3605: u64 [a4 + 0x38] = a3\n  3608: u64 [a4 + 0x30] = a2\n  3611: u64 [a4 + 0x28] = a1\n  3614: u64 [a4 + 0x20] = a0\n  3617: a1 = s1 + 0x620\n  3621: a0 = u64 [s1 + 0xf8]\n  3625: ra = 82, jump @22\n      : @105 [@dyn 41] (gas: 3)\n  3630: a5 = u64 [s1 + 0x48]\n  3633: t0 = u64 [s1 + 0x20]\n  3636: fallthrough\n      : @106 (gas: 22)\n  3637: a0 = u64 [s1 + 0x50]\n  3640: a1 = u64 [s1 + 0x38]\n  3643: a0 = a0 | a1\n  3646: a1 = u64 [s1 + 0x28]\n  3649: a1 = a1 | a5\n  3652: a2 = u64 [s1 + 0x30]\n  3655: a2 = t0 | a2\n  3658: a3 = u64 [s1 + 0x40]\n  3661: a3 = a3 + 0x1\n  3664: u64 [s1 + 1624] = 0\n  3668: u64 [s1 + 1616] = 0\n  3672: u64 [s1 + 1608] = 0\n  3676: a5 = s1 + 0x600\n  3680: u64 [a5 + 64] = 0x3\n  3684: u64 [a5 + 0x60] = a3\n  3687: u64 [a5 + 0x68] = a2\n  3690: u64 [a5 + 0x70] = a1\n  3693: u64 [a5 + 0x78] = a0\n  3696: a0 = s1 + 0x640\n  3700: a1 = s1 + 0x660\n  3704: ra = 0x62\n  3707: jump @22\n      : @107 (gas: 4)\n  3710: a0 = s1 + 0x400\n  3714: a1 = u64 [s1 + 0xd0]\n  3718: u64 [s1 + 0x20] = a4\n  3721: ra = 84, jump @17\n      : @108 [@dyn 42] (gas: 16)\n  3726: a5 = u64 [s1 + 0x48]\n  3729: a4 = u64 [s1 + 0x20]\n  3732: a1 = u64 [s1 + 0x28]\n  3735: t0 = u64 [s1 + 0x30]\n  3738: t1 = u64 [s1 + 0x38]\n  3741: a2 = u64 [s1 + 0x50]\n  3744: a3 = u64 [s1 + 0x60]\n  3747: a0 = u64 [s1 + 0x418]\n  3751: u64 [s1 + 0x110] = a0\n  3755: a0 = u64 [s1 + 0x410]\n  3759: u64 [s1 + 0x108] = a0\n  3763: a0 = u64 [s1 + 0x408]\n  3767: u64 [s1 + 0xf8] = a0\n  3771: a0 = u64 [s1 + 0x400]\n  3775: u64 [s1 + 0x100] = a0\n  3779: fallthrough\n      : @109 (gas: 7)\n  3780: a0 = a5 | a1\n  3783: u64 [s1 + 0xf0] = a0\n  3787: a0 = t1 | a2\n  3790: u64 [s1 + 0xe8] = a0\n  3794: a0 = a4 | t0\n  3797: u64 [s1 + 0xe0] = a0\n  3801: t0 = 86, jump @957\n      : @110 [@dyn 43] (gas: 1)\n  3806: ra = 88, jump @969\n      : @111 [@dyn 44] (gas: 7)\n  3811: u64 [s1 + 0xc0] = a0\n  3815: u64 [s1 + 0xd8] = a1\n  3819: a0 = u64 [s1 + 0x60]\n  3822: i32 a2 = a0 << 0x3\n  3825: a0 = 0xffffffffffffffff\n  3828: a1 = 0xffffffffffffffff\n  3831: ra = 90, jump @964\n      : @112 [@dyn 45] (gas: 10)\n  3836: u64 [s1 + 0xd0] = a0\n  3840: u64 [s1 + 0xc8] = a1\n  3844: a1 = u64 [s1 + 0xc0]\n  3848: a0 = a0 | a1\n  3851: u64 [s1 + 0xc0] = a0\n  3855: a0 = u64 [s1 + 0x118]\n  3859: i32 a2 = a0 + 0xffffffffffffff80\n  3862: a0 = 0xffffffffffffffff\n  3865: a1 = 0xffffffffffffffff\n  3868: ra = 92, jump @964\n      : @113 [@dyn 46] (gas: 7)\n  3873: a4 = u64 [s1 + 0x118]\n  3877: a2 = a4 <u 0x80\n  3881: a3 = u64 [s1 + 0xc0]\n  3885: a0 = a3 if a2 != 0\n  3888: a5 = u64 [s1 + 0xc8]\n  3892: a3 = u64 [s1 + 0xd8]\n  3896: t0 = 94, jump @958\n      : @114 [@dyn 47] (gas: 2)\n  3901: a4 = u64 [s1 + 0xd0]\n  3905: t0 = 96, jump @939\n      : @115 [@dyn 48] (gas: 20)\n  3910: a4 = u64 [s1 + 0x40]\n  3913: a0 = a0 | a4\n  3916: a4 = u64 [s1 + 0xe0]\n  3920: a1 = a1 | a4\n  3923: a4 = u64 [s1 + 0xe8]\n  3927: a3 = a3 | a4\n  3930: a4 = u64 [s1 + 0xf0]\n  3934: a2 = a2 | a4\n  3937: a5 = s1 + 0x600\n  3941: u64 [a5 + 128] = 0x3\n  3946: u64 [a5 + 0xb0] = a2\n  3950: u64 [a5 + 0xb8] = a3\n  3954: u64 [a5 + 0xa8] = a1\n  3958: u64 [a5 + 0xa0] = a0\n  3962: u64 [s1 + 1688] = 0\n  3966: u64 [s1 + 1680] = 0\n  3970: u64 [s1 + 1672] = 0\n  3974: a0 = s1 + 0x680\n  3978: a1 = s1 + 0x6a0\n  3982: ra = 98, jump @22\n      : @116 [@dyn 49] (gas: 3)\n  3987: a0 = s1 + 0x3a0\n  3991: a1 = u64 [s1 + 0x80]\n  3995: ra = 100, jump @17\n      : @117 [@dyn 50] (gas: 17)\n  4000: a0 = s1 + 0x300\n  4004: a3 = u64 [a0 + 0xb8]\n  4008: a2 = u64 [a0 + 0xb0]\n  4012: a1 = u64 [a0 + 0xa8]\n  4016: a0 = a3 >u 0\n  4018: a4 = a2 >u 0\n  4020: a4 = a0 if a3 != 0\n  4023: u64 [s1 + 0x98] = a1\n  4027: a0 = a1 >u 0\n  4029: u64 [s1 + 0x90] = a2\n  4033: u64 [s1 + 0x88] = a3\n  4037: a2 = a2 | a3\n  4040: u64 [s1 + 0xb8] = a0\n  4044: u64 [s1 + 0xc0] = a4\n  4048: u64 [s1 + 0xd0] = a2\n  4052: a0 = a4 if a2 != 0\n  4055: jump @198 if a0 != 0\n      : @118 (gas: 9)\n  4059: a0 = u64 [s1 + 0x3a0]\n  4063: u64 [s1 + 0xa0] = a0\n  4067: u64 [s1 + 1752] = 0\n  4071: u64 [s1 + 1744] = 0\n  4075: u64 [s1 + 1736] = 0\n  4079: u64 [s1 + 1728] = 0x4\n  4084: a0 = s1 + 0x380\n  4088: a1 = s1 + 0x6c0\n  4092: ra = 102, jump @21\n      : @119 [@dyn 51] (gas: 6)\n  4097: a4 = s1 + 0x300\n  4101: a0 = u64 [a4 + 0x90]\n  4105: a1 = u64 [a4 + 0x88]\n  4109: a2 = u64 [a4 + 0x80]\n  4113: a3 = u64 [a4 + 0x98]\n  4117: t0 = 104, jump @938\n      : @120 [@dyn 52] (gas: 12)\n  4122: t0 = a2 <u 0x1\n  4125: ra = a1 & 0x7f\n  4128: t2 = a5 & a0\n  4131: a4 = a5 & t1\n  4134: ra = a1 if a2 != 0\n  4137: a1 = ra <u 0x20\n  4140: a5 = a5 & a3\n  4143: a2 = a1\n  4145: a2 = 0 if a4 != 0\n  4147: a0 = t2 | a5\n  4150: a2 = 0 if a0 != 0\n  4152: jump @204 if t0 != a2\n      : @121 (gas: 1)\n  4156: t0 = 106, jump @943\n      : @122 [@dyn 53] (gas: 4)\n  4161: a0 = u64 [s1 + 0xa0]\n  4165: a0 = a0 <u 0x20\n  4168: u64 [s1 + 0xc8] = a0\n  4172: jump @134 if a3 == 0\n      : @123 (gas: 11)\n  4176: u64 [s1 + 0xf0] = a4\n  4180: u64 [s1 + 0xf8] = ra\n  4184: u64 [s1 + 0x100] = a5\n  4188: u64 [s1 + 0x110] = t2\n  4192: u64 [s1 + 888] = 0\n  4196: u64 [s1 + 880] = 0\n  4200: u64 [s1 + 872] = 0\n  4204: a1 = s1 + 0x360\n  4208: u64 [s1 + 864] = 0x4\n  4213: a0 = 0\n  4215: ra = 108, jump @19\n      : @124 [@dyn 54] (gas: 2)\n  4220: a1 = i32 [0x200ec]\n  4225: jump @126 if a1 >u 31\n      : @125 (gas: 2)\n  4229: u32 [0x200ec] = 0x20\n  4235: fallthrough\n      : @126 (gas: 11)\n  4236: a0 = sp + 0xffffffffffffffe0\n  4239: a2 = a0 & 0xffffffffffffffe0\n  4242: u64 [s1 + 0x108] = a2\n  4246: sp = a2\n  4248: a0 = 0x20100\n  4253: i32 a0 = a0 + 0\n  4255: i32 a2 = a2 + 0\n  4257: a1 = 0x20\n  4260: ra = 0x6e\n  4263: ecalli 8 // 'hash_keccak_256'\n  4265: fallthrough\n      : @127 [@dyn 55] (gas: 9)\n  4266: a0 = u64 [s1 + 0xa0]\n  4270: a1 = a0 + 0x1f\n  4273: a0 = a1 <u a0\n  4276: a5 = u64 [s1 + 0x98]\n  4280: a2 = a5 + a0\n  4283: a3 = a2 <u a5\n  4286: a3 = a0 if a0 == 0\n  4289: a4 = u64 [s1 + 0x90]\n  4293: t0 = 112, jump @936\n      : @128 [@dyn 56] (gas: 35)\n  4298: a1 = u64 [s1 + 0xc8]\n  4302: a1 = 0 if a5 != 0\n  4304: a3 = u64 [s1 + 0xd0]\n  4308: a1 = 0 if a3 != 0\n  4310: a4 = 0 if a1 != 0\n  4312: a0 = 0 if a1 != 0\n  4314: t0 = t2 + a0\n  4317: a0 = t0 <u t2\n  4320: a5 = a2 + a0\n  4323: a4 = a4 + a5\n  4326: u64 [s1 + 0x118] = a4\n  4330: a5 = a4 ^ a2\n  4333: a3 = a4 <u a2\n  4336: a3 = a0 if a5 == 0\n  4339: u64 [s1 + 0xe0] = a3\n  4343: a0 = u64 [s1 + 0xf8]\n  4347: ra = a0 + 0x1f\n  4350: a4 = ra <u a0\n  4353: a3 = u64 [s1 + 0xf0]\n  4357: a0 = a3 + a4\n  4360: a5 = a0 <u a3\n  4363: a5 = a4 if a4 == 0\n  4366: t1 = u64 [s1 + 0x110]\n  4370: t1 = t1 + a5\n  4373: a4 = t1 << 0x3b\n  4376: a3 = a0 >> 0x5\n  4379: a3 = a3 | a4\n  4382: a0 = a0 << 0x3b\n  4385: a4 = ra >> 0x5\n  4388: a0 = a0 | a4\n  4391: a0 = a0 + t2\n  4394: u64 [s1 + 0xf8] = a0\n  4398: a0 = a0 <u t2\n  4401: t2 = t0\n  4403: t0 = 114, jump @951\n      : @129 [@dyn 57] (gas: 16)\n  4408: a0 = u64 [s1 + 0x90]\n  4412: a0 = a4 <u a0\n  4415: a3 = u64 [s1 + 0x88]\n  4419: a0 = a0 + a3\n  4422: a3 = a4 >> 0x5\n  4425: a4 = a0 << 0x3b\n  4428: a3 = a3 | a4\n  4431: a4 = u64 [s1 + 0x108]\n  4435: t0 = u64 [a4]\n  4437: a4 = u64 [a4 + 0x8]\n  4440: a0 = a0 >> 0x5\n  4443: a3 = 0 if a1 != 0\n  4445: a0 = 0 if a1 != 0\n  4447: a1 = reverse a4\n  4449: a4 = reverse t0\n  4451: t0 = 116, jump @956\n      : @130 [@dyn 58] (gas: 24)\n  4456: t0 = a0 + a3\n  4459: a0 = u64 [s1 + 0x110]\n  4463: a0 = t1 <u a0\n  4466: a3 = u64 [s1 + 0x100]\n  4470: a0 = a0 + a3\n  4473: a3 = t1 >> 0x5\n  4476: a5 = a0 << 0x3b\n  4479: a3 = a3 | a5\n  4482: a0 = a0 >> 0x5\n  4485: a0 = a0 + a4\n  4488: a4 = u64 [s1 + 0x118]\n  4492: a3 = a3 + a1\n  4495: a1 = a3 <u a1\n  4498: a0 = a0 + a1\n  4501: a2 = a2 + a3\n  4504: u64 [s1 + 0xe8] = a2\n  4508: a1 = a2 <u a3\n  4511: a0 = a0 + a1\n  4514: u64 [s1 + 0xe0] = a0\n  4518: a0 = sp + 0xffffffffffffffe0\n  4521: t1 = a0 & 0xffffffffffffffe0\n  4524: sp = t1\n  4526: u64 [s1 + 0xd8] = t1\n  4530: fallthrough\n      : @131 (gas: 20)\n  4531: a0 = u64 [s1 + 0xf8]\n  4535: a0 = t2 <u a0\n  4538: a2 = u64 [s1 + 0xf0]\n  4542: a1 = a4 ^ a2\n  4545: a2 = a4 <u a2\n  4548: a2 = a0 if a1 == 0\n  4551: a5 = u64 [s1 + 0xe8]\n  4555: a0 = ra <u a5\n  4558: a3 = u64 [s1 + 0xe0]\n  4562: a1 = t0 ^ a3\n  4565: a3 = t0 <u a3\n  4568: a3 = a0 if a1 == 0\n  4571: a0 = ra ^ a5\n  4574: a0 = a0 | a1\n  4577: a3 = a2 if a0 == 0\n  4580: u64 [t1] = t2\n  4582: u64 [t1 + 0x8] = a4\n  4585: u64 [t1 + 0x10] = ra\n  4588: u64 [t1 + 0x18] = t0\n  4591: jump @134 if a3 == 0\n      : @132 (gas: 11)\n  4594: u64 [s1 + 1784] = 0\n  4598: u64 [s1 + 1776] = 0\n  4602: u64 [s1 + 1768] = 0\n  4606: u64 [s1 + 1760] = 0\n  4610: a1 = s1 + 0x6e0\n  4614: a0 = t1\n  4616: u64 [s1 + 0x110] = t2\n  4620: u64 [s1 + 0x118] = a4\n  4624: u64 [s1 + 0x108] = t0\n  4628: u64 [s1 + 0x100] = ra\n  4632: ra = 118, jump @22\n      : @133 [@dyn 59] (gas: 15)\n  4637: t1 = u64 [s1 + 0xd8]\n  4641: t0 = u64 [s1 + 0x108]\n  4645: a4 = u64 [s1 + 0x118]\n  4649: t2 = u64 [s1 + 0x110]\n  4653: t2 = t2 + 0x1\n  4656: a0 = t2 <u 0x1\n  4659: a4 = a4 + a0\n  4662: a0 = t2 | a4\n  4665: a0 = a0 <u 0x1\n  4668: a1 = u64 [s1 + 0x100]\n  4672: a0 = a0 + a1\n  4675: a1 = a0 <u a1\n  4678: t0 = t0 + a1\n  4681: ra = a0\n  4683: jump @131\n      : @134 (gas: 9)\n  4686: a0 = u64 [s1 + 0xc8]\n  4690: a0 = a0 ^ 0x1\n  4693: a2 = u64 [s1 + 0x98]\n  4697: a1 = u64 [s1 + 0xb8]\n  4701: a0 = a1 if a2 != 0\n  4704: a1 = u64 [s1 + 0xc0]\n  4708: a3 = u64 [s1 + 0xd0]\n  4712: a0 = a1 if a3 != 0\n  4715: jump @144 if a0 == 0\n      : @135 (gas: 10)\n  4719: a0 = u64 [s1 + 0xa0]\n  4723: a0 = a0 & 0xffffffffffffffe0\n  4726: u64 [s1 + 0xa8] = a0\n  4730: u64 [s1 + 824] = 0\n  4734: u64 [s1 + 816] = 0\n  4738: u64 [s1 + 808] = 0\n  4742: a1 = s1 + 0x320\n  4746: u64 [s1 + 800] = 0x4\n  4751: a0 = 0\n  4753: ra = 120, jump @19\n      : @136 [@dyn 60] (gas: 7)\n  4758: a0 = sp + 0xffffffffffffffe0\n  4761: a0 = a0 & 0xffffffffffffffe0\n  4764: u64 [s1 + 0x100] = a0\n  4768: sp = a0\n  4770: a1 = 0x20\n  4773: a0 = 0\n  4775: ra = 122, jump @27\n      : @137 [@dyn 61] (gas: 40)\n  4780: a1 = sp + 0xffffffffffffffe0\n  4783: a1 = a1 & 0xffffffffffffffe0\n  4786: u64 [s1 + 0xf8] = a1\n  4790: sp = a1\n  4792: i32 a0 = a0 + 0\n  4794: i32 a2 = a1 + 0\n  4796: a1 = 0x20\n  4799: ecalli 8 // 'hash_keccak_256'\n  4801: u64 [s1 + 280] = 0x20\n  4806: a5 = 0\n  4808: u64 [s1 + 264] = 0\n  4812: u64 [s1 + 272] = 0\n  4816: a4 = 0\n  4818: a3 = 0\n  4820: a2 = 0\n  4822: t1 = 0\n  4824: a0 = u64 [s1 + 0xf8]\n  4828: t0 = u64 [a0 + 0x18]\n  4831: a1 = u64 [a0 + 0x10]\n  4834: ra = u64 [a0 + 0x8]\n  4837: a0 = u64 [a0]\n  4839: u64 [s1 + 0xf0] = a0\n  4843: a0 = reverse t0\n  4845: u64 [s1 + 0xf8] = a0\n  4849: t2 = reverse a1\n  4851: t0 = reverse ra\n  4853: a0 = u64 [s1 + 0xf0]\n  4857: a1 = reverse a0\n  4859: ra = a1\n  4861: a0 = u64 [s1 + 0x100]\n  4865: u64 [a0 + 0x18] = a1\n  4868: a1 = t0\n  4870: u64 [s1 + 0xb8] = a1\n  4874: u64 [a0 + 0x10] = a1\n  4877: a1 = t2\n  4879: u64 [s1 + 0xe8] = a1\n  4883: u64 [a0 + 0x8] = a1\n  4886: a1 = u64 [s1 + 0xf8]\n  4890: u64 [a0] = a1\n  4892: fallthrough\n      : @138 (gas: 24)\n  4893: u64 [s1 + 0xe0] = ra\n  4897: a0 = u64 [s1 + 0xa8]\n  4901: u64 [s1 + 0xd0] = a4\n  4905: a0 = a4 <u a0\n  4908: a4 = a0 ^ 0x1\n  4911: u64 [s1 + 0xc8] = a3\n  4915: a4 = 0x1 if a3 != 0\n  4918: u64 [s1 + 0xf0] = t1\n  4922: u64 [s1 + 0xd8] = a2\n  4926: a0 = a2 | t1\n  4929: a4 = 0x1 if a0 != 0\n  4932: a0 = u64 [s1 + 0x80]\n  4936: a1 = u64 [s1 + 0x118]\n  4940: a1 = a1 + a0\n  4943: a3 = u64 [s1 + 0x78]\n  4946: u64 [s1 + 0xc0] = a5\n  4950: t0 = a3 + a5\n  4953: t2 = u64 [s1 + 0x70]\n  4956: a2 = u64 [s1 + 0x108]\n  4960: a2 = a2 + t2\n  4963: t1 = u64 [s1 + 0x68]\n  4966: a5 = u64 [s1 + 0x110]\n  4970: t1 = t1 + a5\n  4973: jump @146 if a4 != 0\n      : @139 (gas: 6)\n  4977: ra = a1 <u a0\n  4980: a4 = t0 + ra\n  4983: t0 = a4 ^ a3\n  4986: a5 = a4 <u a3\n  4989: a5 = ra if t0 == 0\n  4992: t0 = 124, jump @940\n      : @140 [@dyn 62] (gas: 1)\n  4997: jump @172 if a0 != 0\n      : @141 (gas: 2)\n  5001: a0 = s1 + 0x2c0\n  5005: ra = 126, jump @17\n      : @142 [@dyn 63] (gas: 13)\n  5010: a4 = s1 + 0x200\n  5014: a0 = u64 [a4 + 0xd8]\n  5018: a1 = u64 [a4 + 0xd0]\n  5022: a2 = u64 [a4 + 0xc8]\n  5026: a3 = u64 [a4 + 0xc0]\n  5030: a4 = s1 + 0x700\n  5034: u64 [a4 + 0x18] = a0\n  5037: u64 [a4 + 0x10] = a1\n  5040: u64 [a4 + 0x8] = a2\n  5043: u64 [a4] = a3\n  5045: a1 = s1 + 0x700\n  5049: a0 = u64 [s1 + 0x100]\n  5053: ra = 128, jump @22\n      : @143 [@dyn 64] (gas: 55)\n  5059: ra = u64 [s1 + 0xf8]\n  5063: ra = ra + 0x1\n  5066: a0 = ra <u 0x1\n  5069: a3 = u64 [s1 + 0xe8]\n  5073: a3 = a3 + a0\n  5076: a0 = ra | a3\n  5079: a0 = a0 <u 0x1\n  5082: a1 = u64 [s1 + 0xb8]\n  5086: a0 = a0 + a1\n  5089: a1 = a0 <u a1\n  5092: t0 = u64 [s1 + 0xe0]\n  5096: t0 = t0 + a1\n  5099: a1 = u64 [s1 + 0x118]\n  5103: a2 = a1 + 0x20\n  5106: u64 [s1 + 0xe0] = a2\n  5110: a1 = a2 <u a1\n  5113: a2 = u64 [s1 + 0xc0]\n  5117: a4 = a2 + a1\n  5120: u64 [s1 + 0xb0] = a4\n  5124: a4 = a4 <u a2\n  5127: a4 = a1 if a1 == 0\n  5130: a1 = u64 [s1 + 0x108]\n  5134: t2 = a1 + a4\n  5137: a4 = t2 <u a1\n  5140: a1 = u64 [s1 + 0x110]\n  5144: a1 = a1 + a4\n  5147: u64 [s1 + 0x110] = a1\n  5151: a1 = u64 [s1 + 0xd0]\n  5155: a4 = a1 + 0x20\n  5158: a5 = a4 <u a1\n  5161: a2 = u64 [s1 + 0xc8]\n  5165: a1 = a2 + a5\n  5168: a2 = a1 <u a2\n  5171: a2 = a5 if a5 == 0\n  5174: a5 = u64 [s1 + 0xd8]\n  5178: a2 = a2 + a5\n  5181: a5 = a2 <u a5\n  5184: t1 = u64 [s1 + 0xf0]\n  5188: t1 = t1 + a5\n  5191: u64 [s1 + 0xe8] = a3\n  5195: a5 = u64 [s1 + 0x100]\n  5199: u64 [a5 + 0x8] = a3\n  5202: a3 = ra\n  5204: u64 [s1 + 0xf8] = a3\n  5208: u64 [a5] = a3\n  5210: u64 [a5 + 0x10] = a0\n  5213: ra = t0\n  5215: u64 [a5 + 0x18] = t0\n  5218: u64 [s1 + 0xb8] = a0\n  5222: a0 = u64 [s1 + 0xe0]\n  5226: u64 [s1 + 0x118] = a0\n  5230: a5 = u64 [s1 + 0xb0]\n  5234: u64 [s1 + 0x108] = t2\n  5238: a3 = a1\n  5240: jump @138\n      : @144 (gas: 7)\n  5243: a3 = u64 [s1 + 0xa0]\n  5247: a4 = u64 [s1 + 0x90]\n  5251: a0 = a3 | a4\n  5254: a5 = u64 [s1 + 0x88]\n  5258: a1 = a2 | a5\n  5261: a0 = a0 | a1\n  5264: jump @160 if a0 != 0\n      : @145 (gas: 5)\n  5268: u64 [s1 + 256] = 0\n  5272: u64 [s1 + 248] = 0\n  5276: u64 [s1 + 264] = 0\n  5280: u64 [s1 + 272] = 0\n  5284: jump @162\n      : @146 (gas: 12)\n  5287: a4 = u64 [s1 + 0xa8]\n  5291: a5 = u64 [s1 + 0xa0]\n  5295: a4 = a4 ^ a5\n  5298: ra = u64 [s1 + 0x90]\n  5302: a4 = a4 | ra\n  5305: u64 [s1 + 0x118] = a4\n  5309: a5 = u64 [s1 + 0x98]\n  5313: a4 = u64 [s1 + 0x88]\n  5317: a5 = a5 | a4\n  5320: a4 = u64 [s1 + 0x118]\n  5324: a4 = a4 | a5\n  5327: jump @159 if a4 == 0\n      : @147 (gas: 6)\n  5331: ra = a1 <u a0\n  5334: a4 = t0 + ra\n  5337: t0 = a4 ^ a3\n  5340: a5 = a4 <u a3\n  5343: a5 = ra if t0 == 0\n  5346: t0 = 130, jump @940\n      : @148 [@dyn 65] (gas: 1)\n  5352: jump @172 if a0 != 0\n      : @149 (gas: 2)\n  5356: a0 = s1 + 0x300\n  5360: ra = 132, jump @17\n      : @150 [@dyn 66] (gas: 11)\n  5366: a1 = s1 + 0x300\n  5370: a0 = u64 [a1 + 0x18]\n  5373: u64 [s1 + 0x110] = a0\n  5377: a0 = u64 [a1 + 0x10]\n  5380: u64 [s1 + 0x108] = a0\n  5384: a0 = u64 [a1 + 0x8]\n  5387: u64 [s1 + 0xf8] = a0\n  5391: a0 = u64 [a1]\n  5393: u64 [s1 + 0xf0] = a0\n  5397: a0 = u64 [s1 + 0xa0]\n  5401: t0 = 134, jump @952\n      : @151 [@dyn 67] (gas: 1)\n  5407: ra = 136, jump @969\n      : @152 [@dyn 68] (gas: 6)\n  5413: u64 [s1 + 0xe8] = a0\n  5417: u64 [s1 + 0xd0] = a1\n  5421: a0 = 0xffffffffffffffff\n  5424: a1 = 0xffffffffffffffff\n  5427: a2 = u64 [s1 + 0x118]\n  5431: ra = 138, jump @964\n      : @153 [@dyn 69] (gas: 1)\n  5437: t0 = 140, jump @953\n      : @154 [@dyn 70] (gas: 1)\n  5443: ra = 142, jump @964\n      : @155 [@dyn 71] (gas: 1)\n  5449: t0 = 144, jump @932\n      : @156 [@dyn 72] (gas: 2)\n  5455: a2 = u64 [s1 + 0xf8]\n  5459: t0 = 146, jump @959\n      : @157 [@dyn 73] (gas: 8)\n  5465: a4 = s1 + 0x700\n  5469: u64 [a4 + 0x38] = a3\n  5472: u64 [a4 + 0x30] = a2\n  5475: u64 [a4 + 0x28] = a1\n  5478: u64 [a4 + 0x20] = a0\n  5481: a1 = s1 + 0x720\n  5485: a0 = u64 [s1 + 0x100]\n  5489: ra = 148, jump @22\n      : @158 [@dyn 74] (gas: 2)\n  5495: ra = u64 [s1 + 0x90]\n  5499: fallthrough\n      : @159 (gas: 27)\n  5500: a0 = ra >> 0x3f\n  5503: a1 = u64 [s1 + 0x88]\n  5507: a1 = a1 << 0x1\n  5510: a0 = a0 | a1\n  5513: a3 = u64 [s1 + 0x98]\n  5517: a1 = a3 >> 0x3f\n  5520: a2 = ra << 0x1\n  5523: a1 = a1 | a2\n  5526: a4 = u64 [s1 + 0xa0]\n  5530: a2 = a4 >> 0x3f\n  5533: a3 = a3 << 0x1\n  5536: a2 = a2 | a3\n  5539: a3 = a4 << 0x1\n  5542: a3 = a3 + 0x1\n  5545: u64 [s1 + 1880] = 0\n  5549: u64 [s1 + 1872] = 0\n  5553: u64 [s1 + 1864] = 0\n  5557: a5 = s1 + 0x700\n  5561: u64 [a5 + 64] = 0x4\n  5565: u64 [a5 + 0x60] = a3\n  5568: u64 [a5 + 0x68] = a2\n  5571: u64 [a5 + 0x70] = a1\n  5574: u64 [a5 + 0x78] = a0\n  5577: a0 = s1 + 0x740\n  5581: a1 = s1 + 0x760\n  5585: ra = 0xa4\n  5589: jump @22\n      : @160 (gas: 3)\n  5592: a0 = s1 + 0x340\n  5596: a1 = u64 [s1 + 0x18]\n  5599: ra = 150, jump @17\n      : @161 [@dyn 75] (gas: 14)\n  5605: a5 = u64 [s1 + 0x88]\n  5609: a4 = u64 [s1 + 0x90]\n  5613: a2 = u64 [s1 + 0x98]\n  5617: a3 = u64 [s1 + 0xa0]\n  5621: a1 = s1 + 0x300\n  5625: a0 = u64 [a1 + 0x58]\n  5628: u64 [s1 + 0x110] = a0\n  5632: a0 = u64 [a1 + 0x50]\n  5635: u64 [s1 + 0x108] = a0\n  5639: a0 = u64 [a1 + 0x48]\n  5642: u64 [s1 + 0xf8] = a0\n  5646: a0 = u64 [a1 + 0x40]\n  5649: u64 [s1 + 0x100] = a0\n  5653: fallthrough\n      : @162 (gas: 15)\n  5654: a0 = a2 >> 0x3f\n  5657: a1 = a4 << 0x1\n  5660: a0 = a0 | a1\n  5663: u64 [s1 + 0xf0] = a0\n  5667: a0 = a4 >> 0x3f\n  5670: a1 = a5 << 0x1\n  5673: a0 = a0 | a1\n  5676: u64 [s1 + 0xe8] = a0\n  5680: a0 = a3 >> 0x3f\n  5683: a1 = a2 << 0x1\n  5686: a0 = a0 | a1\n  5689: u64 [s1 + 0xe0] = a0\n  5693: a0 = a3 << 0x1\n  5696: u64 [s1 + 0xd8] = a0\n  5700: t0 = 152, jump @957\n      : @163 [@dyn 76] (gas: 1)\n  5706: ra = 154, jump @969\n      : @164 [@dyn 77] (gas: 7)\n  5712: u64 [s1 + 0xb8] = a0\n  5716: u64 [s1 + 0xd0] = a1\n  5720: a0 = u64 [s1 + 0xa0]\n  5724: i32 a2 = a0 << 0x3\n  5727: a0 = 0xffffffffffffffff\n  5730: a1 = 0xffffffffffffffff\n  5733: ra = 156, jump @964\n      : @165 [@dyn 78] (gas: 10)\n  5739: u64 [s1 + 0xc8] = a0\n  5743: u64 [s1 + 0xc0] = a1\n  5747: a1 = u64 [s1 + 0xb8]\n  5751: a0 = a0 | a1\n  5754: u64 [s1 + 0xb8] = a0\n  5758: a0 = u64 [s1 + 0x118]\n  5762: i32 a2 = a0 + 0xffffffffffffff80\n  5765: a0 = 0xffffffffffffffff\n  5768: a1 = 0xffffffffffffffff\n  5771: ra = 158, jump @964\n      : @166 [@dyn 79] (gas: 7)\n  5777: a4 = u64 [s1 + 0x118]\n  5781: a2 = a4 <u 0x80\n  5785: a3 = u64 [s1 + 0xb8]\n  5789: a0 = a3 if a2 != 0\n  5792: a5 = u64 [s1 + 0xc0]\n  5796: a3 = u64 [s1 + 0xd0]\n  5800: t0 = 160, jump @958\n      : @167 [@dyn 80] (gas: 2)\n  5806: a4 = u64 [s1 + 0xc8]\n  5810: t0 = 162, jump @939\n      : @168 [@dyn 81] (gas: 20)\n  5816: a4 = u64 [s1 + 0xd8]\n  5820: a0 = a0 | a4\n  5823: a4 = u64 [s1 + 0xe0]\n  5827: a1 = a1 | a4\n  5830: a4 = u64 [s1 + 0xe8]\n  5834: a3 = a3 | a4\n  5837: a4 = u64 [s1 + 0xf0]\n  5841: a2 = a2 | a4\n  5844: a5 = s1 + 0x700\n  5848: u64 [a5 + 128] = 0x4\n  5853: u64 [a5 + 0xb0] = a2\n  5857: u64 [a5 + 0xb8] = a3\n  5861: u64 [a5 + 0xa8] = a1\n  5865: u64 [a5 + 0xa0] = a0\n  5869: u64 [s1 + 1944] = 0\n  5873: u64 [s1 + 1936] = 0\n  5877: u64 [s1 + 1928] = 0\n  5881: a0 = s1 + 0x780\n  5885: a1 = s1 + 0x7a0\n  5889: ra = 164, jump @22\n      : @169 [@dyn 82] (gas: 3)\n  5895: a0 = s1 + 0x2e0\n  5899: a1 = 0x40\n  5902: ra = 166, jump @17\n      : @170 [@dyn 83] (gas: 6)\n  5908: a4 = s1 + 0x200\n  5912: a3 = u64 [a4 + 0xf8]\n  5916: a1 = u64 [a4 + 0xf0]\n  5920: a2 = u64 [a4 + 0xe8]\n  5924: a0 = u64 [a4 + 0xe0]\n  5928: t0 = 168, jump @941\n      : @171 [@dyn 84] (gas: 1)\n  5934: jump @211 if a1 == 0\n      : @172 (gas: 1)\n  5938: trap\n      : @173 (gas: 6)\n  5939: a1 = 0x20100\n  5944: i32 a1 = a1 + 0\n  5946: a0 = 0x1\n  5949: a2 = 0\n  5951: ecalli 12 // 'seal_return'\n  5953: fallthrough\n      : @174 (gas: 6)\n  5954: u64 [s1 + 336] = 0\n  5958: u64 [s1 + 328] = 0\n  5962: u64 [s1 + 320] = 0\n  5966: t0 = 0xaa\n  5970: a0 = 0x4e487b7100000000\n  5980: fallthrough\n      : @175 [@dyn 85] (gas: 4)\n  5981: a1 = s1 + 0x140\n  5985: u64 [s1 + 0x158] = a0\n  5989: a0 = 0\n  5991: ra = 172, jump @19\n      : @176 [@dyn 86] (gas: 7)\n  5997: u64 [s1 + 312] = 0\n  6001: u64 [s1 + 304] = 0\n  6005: u64 [s1 + 288] = 0x41\n  6010: a0 = 0x4\n  6013: a1 = s1 + 0x120\n  6017: u64 [s1 + 296] = 0\n  6021: ra = 174, jump @19\n      : @177 [@dyn 87] (gas: 2)\n  6027: a1 = i32 [0x200ec]\n  6032: jump @179 if a1 >u 63\n      : @178 (gas: 3)\n  6036: u32 [0x200ec] = 0x40\n  6042: a1 = 0x20100\n  6047: jump @210\n      : @179 (gas: 2)\n  6050: a1 = 0x20100\n  6055: jump @210\n      : @180 (gas: 6)\n  6058: u64 [s1 + 400] = 0\n  6062: u64 [s1 + 392] = 0\n  6066: u64 [s1 + 384] = 0\n  6070: t0 = 0xb0\n  6074: a0 = 0x4e487b7100000000\n  6084: fallthrough\n      : @181 [@dyn 88] (gas: 4)\n  6085: a1 = s1 + 0x180\n  6089: u64 [s1 + 0x198] = a0\n  6093: a0 = 0\n  6095: ra = 178, jump @19\n      : @182 [@dyn 89] (gas: 7)\n  6101: u64 [s1 + 376] = 0\n  6105: u64 [s1 + 368] = 0\n  6109: u64 [s1 + 352] = 0x41\n  6114: a0 = 0x4\n  6117: a1 = s1 + 0x160\n  6121: u64 [s1 + 360] = 0\n  6125: ra = 180, jump @19\n      : @183 [@dyn 90] (gas: 2)\n  6131: a1 = i32 [0x200ec]\n  6136: jump @185 if a1 >u 63\n      : @184 (gas: 3)\n  6140: u32 [0x200ec] = 0x40\n  6146: a1 = 0x20100\n  6151: jump @210\n      : @185 (gas: 2)\n  6154: a1 = 0x20100\n  6159: jump @210\n      : @186 (gas: 6)\n  6162: u64 [s1 + 464] = 0\n  6166: u64 [s1 + 456] = 0\n  6170: u64 [s1 + 448] = 0\n  6174: t0 = 0xb6\n  6178: a0 = 0x4e487b7100000000\n  6188: fallthrough\n      : @187 [@dyn 91] (gas: 4)\n  6189: a1 = s1 + 0x1c0\n  6193: u64 [s1 + 0x1d8] = a0\n  6197: a0 = 0\n  6199: ra = 184, jump @19\n      : @188 [@dyn 92] (gas: 7)\n  6205: u64 [s1 + 440] = 0\n  6209: u64 [s1 + 432] = 0\n  6213: u64 [s1 + 416] = 0x41\n  6218: a0 = 0x4\n  6221: a1 = s1 + 0x1a0\n  6225: u64 [s1 + 424] = 0\n  6229: ra = 186, jump @19\n      : @189 [@dyn 93] (gas: 2)\n  6235: a1 = i32 [0x200ec]\n  6240: jump @191 if a1 >u 63\n      : @190 (gas: 3)\n  6244: u32 [0x200ec] = 0x40\n  6250: a1 = 0x20100\n  6255: jump @210\n      : @191 (gas: 2)\n  6258: a1 = 0x20100\n  6263: jump @210\n      : @192 (gas: 6)\n  6266: u64 [s1 + 528] = 0\n  6270: u64 [s1 + 520] = 0\n  6274: u64 [s1 + 512] = 0\n  6278: t0 = 0xbc\n  6282: a0 = 0x4e487b7100000000\n  6292: fallthrough\n      : @193 [@dyn 94] (gas: 4)\n  6293: a1 = s1 + 0x200\n  6297: u64 [s1 + 0x218] = a0\n  6301: a0 = 0\n  6303: ra = 190, jump @19\n      : @194 [@dyn 95] (gas: 7)\n  6309: u64 [s1 + 504] = 0\n  6313: u64 [s1 + 496] = 0\n  6317: u64 [s1 + 480] = 0x22\n  6322: a0 = 0x4\n  6325: a1 = s1 + 0x1e0\n  6329: u64 [s1 + 488] = 0\n  6333: ra = 192, jump @19\n      : @195 [@dyn 96] (gas: 2)\n  6339: a1 = i32 [0x200ec]\n  6344: jump @197 if a1 >u 63\n      : @196 (gas: 3)\n  6348: u32 [0x200ec] = 0x40\n  6354: a1 = 0x20100\n  6359: jump @210\n      : @197 (gas: 2)\n  6362: a1 = 0x20100\n  6367: jump @210\n      : @198 (gas: 6)\n  6370: u64 [s1 + 624] = 0\n  6374: u64 [s1 + 616] = 0\n  6378: u64 [s1 + 608] = 0\n  6382: t0 = 0xc2\n  6386: a0 = 0x4e487b7100000000\n  6396: fallthrough\n      : @199 [@dyn 97] (gas: 4)\n  6397: a1 = s1 + 0x260\n  6401: u64 [s1 + 0x278] = a0\n  6405: a0 = 0\n  6407: ra = 196, jump @19\n      : @200 [@dyn 98] (gas: 7)\n  6413: u64 [s1 + 600] = 0\n  6417: u64 [s1 + 592] = 0\n  6421: u64 [s1 + 576] = 0x41\n  6426: a0 = 0x4\n  6429: a1 = s1 + 0x240\n  6433: u64 [s1 + 584] = 0\n  6437: ra = 198, jump @19\n      : @201 [@dyn 99] (gas: 2)\n  6443: a1 = i32 [0x200ec]\n  6448: jump @203 if a1 >u 63\n      : @202 (gas: 3)\n  6452: u32 [0x200ec] = 0x40\n  6458: a1 = 0x20100\n  6463: jump @210\n      : @203 (gas: 2)\n  6465: a1 = 0x20100\n  6470: jump @210\n      : @204 (gas: 6)\n  6472: u64 [s1 + 688] = 0\n  6476: u64 [s1 + 680] = 0\n  6480: u64 [s1 + 672] = 0\n  6484: t0 = 0xc8\n  6488: a0 = 0x4e487b7100000000\n  6498: fallthrough\n      : @205 [@dyn 100] (gas: 4)\n  6499: a1 = s1 + 0x2a0\n  6503: u64 [s1 + 0x2b8] = a0\n  6507: a0 = 0\n  6509: ra = 202, jump @19\n      : @206 [@dyn 101] (gas: 7)\n  6515: u64 [s1 + 664] = 0\n  6519: u64 [s1 + 656] = 0\n  6523: u64 [s1 + 640] = 0x22\n  6528: a0 = 0x4\n  6531: a1 = s1 + 0x280\n  6535: u64 [s1 + 648] = 0\n  6539: ra = 204, jump @19\n      : @207 [@dyn 102] (gas: 2)\n  6545: a1 = i32 [0x200ec]\n  6550: jump @209 if a1 >u 63\n      : @208 (gas: 3)\n  6554: u32 [0x200ec] = 0x40\n  6560: a1 = 0x20100\n  6565: jump @210\n      : @209 (gas: 2)\n  6567: a1 = 0x20100\n  6572: fallthrough\n      : @210 (gas: 7)\n  6573: i32 a1 = a1 + 0\n  6575: a0 = 0x1\n  6578: a2 = 0x24\n  6581: ecalli 12 // 'seal_return'\n  6583: u64 [s1 + 0x118] = a0\n  6587: ra = 0xce\n  6591: jump @27\n      : @211 (gas: 2)\n  6594: u64 [s1 + 0x118] = a0\n  6598: ra = 206, jump @27\n      : @212 [@dyn 103] (gas: 5)\n  6604: i32 a0 = a0 + 0\n  6606: a1 = 0\n  6608: a2 = 0\n  6610: ecalli 1 // 'call_data_copy'\n  6612: jump @15\n      : @213 (gas: 3)\n  6615: a0 = u64 [s1 + 0x118]\n  6619: a1 = 0\n  6621: ra = 208, jump @27\n      : @214 [@dyn 104] (gas: 5)\n  6627: i32 a1 = a0 + 0\n  6629: a0 = 0\n  6631: a2 = 0\n  6633: ecalli 12 // 'seal_return'\n  6635: jump @174\n      : @215 [@dyn 105] (gas: 4)\n  6638: a0 = 0x200e8\n  6643: u64 [s1 + 0xf8] = a0\n  6647: a0 = i32 [0x200e8]\n  6652: jump @217 if a0 >=u 4\n      : @216 (gas: 1)\n  6656: jump @725\n      : @217 (gas: 6)\n  6659: a0 = s1 + 0x2000\n  6663: i32 a0 = a0 + 0xfffffffffffff9a0\n  6667: a1 = 0\n  6669: ra = 0xd4\n  6673: ecalli 2 // 'call_data_load'\n  6675: fallthrough\n      : @218 [@dyn 106] (gas: 3)\n  6676: a2 = s1 + 0x1878\n  6680: a0 = i32 [a2 + 0x144]\n  6684: jump @220 if a0 != 2514000705\n      : @219 (gas: 1)\n  6691: jump @610\n      : @220 (gas: 1)\n  6694: jump @260 if a0 == 2835717307\n      : @221 (gas: 1)\n  6702: jump @223 if a0 != 3714247998\n      : @222 (gas: 1)\n  6709: jump @626\n      : @223 (gas: 1)\n  6712: jump @333 if a0 == 117300739\n      : @224 (gas: 1)\n  6720: jump @226 if a0 != 157198259\n      : @225 (gas: 1)\n  6727: jump @574\n      : @226 (gas: 1)\n  6730: jump @228 if a0 != 306824587\n      : @227 (gas: 1)\n  6737: jump @542\n      : @228 (gas: 1)\n  6740: jump @249 if a0 == 404098525\n      : @229 (gas: 1)\n  6748: jump @283 if a0 == 599290589\n      : @230 (gas: 1)\n  6756: jump @272 if a0 == 826074471\n      : @231 (gas: 1)\n  6764: jump @347 if a0 != 1889567281\n      : @232 (gas: 10)\n  6772: u64 [a2 + 896] = 0\n  6776: u64 [a2 + 888] = 0\n  6780: u64 [a2 + 880] = 0\n  6784: u64 [a2 + 872] = 0\n  6788: a0 = s1 + 0x2000\n  6792: i32 a0 = a0 + 0xfffffffffffffbe0\n  6796: ra = 0xd6\n  6800: ecalli 15 // 'value_transferred'\n  6802: t0 = 0xd8\n  6806: jump @947\n      : @233 [@dyn 107] (gas: 1)\n  6809: t0 = 216, jump @947\n      : @234 [@dyn 108] (gas: 8)\n  6815: a0 = u64 [a4 + 0x78]\n  6818: a1 = u64 [a4 + 0x80]\n  6822: a2 = u64 [a4 + 0x70]\n  6825: a3 = u64 [a4 + 0x68]\n  6828: a1 = a1 | a2\n  6831: a0 = a0 | a3\n  6834: a0 = a0 | a1\n  6837: jump @236 if a0 == 0\n      : @235 (gas: 1)\n  6840: jump @729\n      : @236 (gas: 4)\n  6843: a0 = u64 [s1 + 0xf8]\n  6847: a0 = i32 [a0]\n  6849: a1 = 0x23\n  6852: jump @238 if a1 <u a0\n      : @237 (gas: 1)\n  6855: jump @730\n      : @238 (gas: 5)\n  6858: a0 = s1 + 0x7ff\n  6862: a0 = a0 + 0x2e1\n  6866: ra = 0xda\n  6870: t0 = 0x312\n  6874: jump @961\n      : @239 [@dyn 109] (gas: 14)\n  6877: a3 = s1 + 0x7ff\n  6881: a3 = a3 + 0x79\n  6884: a4 = a3 + 0x200\n  6888: a0 = u64 [a4 + 0x68]\n  6891: a1 = u64 [a4 + 0x70]\n  6894: a2 = u32 [a3 + 0x278]\n  6898: u64 [a3 + 608] = 0\n  6902: u64 [a4 + 0x58] = a2\n  6905: u64 [a4 + 0x50] = a1\n  6908: a1 = s1 + 0x7ff\n  6912: a1 = a1 + 0x2c1\n  6916: u64 [a4 + 0x48] = a0\n  6919: a0 = 0\n  6921: ra = 220, jump @19\n      : @240 [@dyn 110] (gas: 11)\n  6927: a0 = s1 + 0x7ff\n  6931: a0 = a0 + 0x79\n  6934: u64 [a0 + 576] = 0\n  6938: u64 [a0 + 568] = 0\n  6942: u64 [a0 + 560] = 0\n  6946: a2 = a0\n  6948: a0 = 0x20\n  6951: a1 = s1 + 0x7ff\n  6955: a1 = a1 + 0x2a1\n  6959: u64 [a2 + 552] = 0\n  6963: ra = 222, jump @19\n      : @241 [@dyn 111] (gas: 2)\n  6969: a1 = i32 [0x200ec]\n  6974: jump @243 if a1 >u 63\n      : @242 (gas: 2)\n  6978: u32 [0x200ec] = 0x40\n  6984: fallthrough\n      : @243 (gas: 28)\n  6985: a0 = sp + 0xffffffffffffffe0\n  6988: a2 = a0 & 0xffffffffffffffe0\n  6991: u64 [s1 + 0xf8] = a2\n  6995: sp = a2\n  6997: a0 = 0x20100\n  7002: i32 a0 = a0 + 0\n  7004: i32 a2 = a2 + 0\n  7006: a1 = 0x40\n  7009: ecalli 8 // 'hash_keccak_256'\n  7011: a3 = u64 [s1 + 0xf8]\n  7015: a0 = u64 [a3 + 0x18]\n  7018: a1 = u64 [a3 + 0x10]\n  7021: a2 = u64 [a3 + 0x8]\n  7024: a3 = u64 [a3]\n  7026: a0 = reverse a0\n  7028: a1 = reverse a1\n  7030: a2 = reverse a2\n  7032: a3 = reverse a3\n  7034: a4 = s1 + 0x1878\n  7038: a5 = a4 + 0x300\n  7042: u64 [a5 + 0xa0] = a3\n  7046: u64 [a5 + 0x98] = a2\n  7050: u64 [a5 + 0x90] = a1\n  7054: u64 [a5 + 0x88] = a0\n  7058: a0 = s1 + 0x7ff\n  7062: a0 = a0 + 0x281\n  7066: a1 = s1 + 0x1c00\n  7070: ra = 224, jump @21\n      : @244 [@dyn 112] (gas: 15)\n  7076: a1 = s1 + 0x7ff\n  7080: a1 = a1 + 0x79\n  7083: a2 = a1 + 0x200\n  7087: a0 = u64 [a2 + 0x20]\n  7090: u64 [s1 + 0xf8] = a0\n  7094: a0 = u64 [a2 + 0x18]\n  7097: u64 [s1 + 0xf0] = a0\n  7101: a0 = u64 [a2 + 0x10]\n  7104: u64 [s1 + 0xe8] = a0\n  7108: a0 = u64 [a2 + 0x8]\n  7111: u64 [s1 + 0xe0] = a0\n  7115: a0 = s1 + 0x7ff\n  7119: a0 = a0 + 0x261\n  7123: a1 = 0x40\n  7126: ra = 226, jump @17\n      : @245 [@dyn 113] (gas: 8)\n  7132: a3 = s1 + 0x7ff\n  7136: a3 = a3 + 0x79\n  7139: a0 = u64 [a3 + 0x200]\n  7143: a5 = a3 + 0x100\n  7147: a1 = u64 [a5 + 0xf8]\n  7151: a2 = u64 [a5 + 0xf0]\n  7155: a4 = u64 [a5 + 0xe8]\n  7159: t0 = 228, jump @950\n      : @246 [@dyn 114] (gas: 1)\n  7165: jump @248 if a0 == 0\n      : @247 (gas: 1)\n  7168: jump @680\n      : @248 (gas: 15)\n  7171: a0 = u64 [s1 + 0xe0]\n  7175: a2 = a3 + 0x100\n  7179: u64 [a2 + 0xc8] = a0\n  7183: a0 = u64 [s1 + 0xe8]\n  7187: u64 [a2 + 0xd0] = a0\n  7191: a0 = u64 [s1 + 0xf0]\n  7195: u64 [a2 + 0xd8] = a0\n  7199: a1 = s1 + 0x7ff\n  7203: a1 = a1 + 0x241\n  7207: a0 = u64 [s1 + 0xf8]\n  7211: u64 [a2 + 0xe0] = a0\n  7215: a0 = a4\n  7217: u64 [s1 + 0xf8] = a4\n  7221: ra = 0x26e\n  7225: jump @19\n      : @249 (gas: 9)\n  7228: u64 [a2 + 704] = 0\n  7232: u64 [a2 + 696] = 0\n  7236: u64 [a2 + 688] = 0\n  7240: u64 [a2 + 680] = 0\n  7244: a0 = s1 + 0x2000\n  7248: i32 a0 = a0 + 0xfffffffffffffb20\n  7252: ra = 0xe6\n  7256: ecalli 15 // 'value_transferred'\n  7258: fallthrough\n      : @250 [@dyn 115] (gas: 3)\n  7259: a3 = s1 + 0x1878\n  7263: a4 = a3 + 0x200\n  7267: t0 = 232, jump @960\n      : @251 [@dyn 116] (gas: 1)\n  7273: jump @253 if a0 == 0\n      : @252 (gas: 1)\n  7276: jump @731\n      : @253 (gas: 3)\n  7279: a0 = u64 [s1 + 0xf8]\n  7283: a0 = i32 [a0]\n  7285: jump @255 if a0 >u 3\n      : @254 (gas: 1)\n  7289: jump @732\n      : @255 (gas: 8)\n  7292: a1 = s1 + 0x1878\n  7296: u64 [a1 + 736] = 0\n  7300: u64 [a1 + 728] = 0\n  7304: u64 [a1 + 720] = 0\n  7308: u64 [a1 + 712] = 0x2\n  7313: a0 = s1 + 0x6e0\n  7317: a1 = s1 + 0x1b40\n  7321: ra = 234, jump @21\n      : @256 [@dyn 117] (gas: 11)\n  7327: a0 = u64 [s1 + 0x6f8]\n  7331: u64 [s1 + 0xf8] = a0\n  7335: a0 = u64 [s1 + 0x6f0]\n  7339: u64 [s1 + 0xf0] = a0\n  7343: a0 = u64 [s1 + 0x6e8]\n  7347: u64 [s1 + 0xe8] = a0\n  7351: a0 = u64 [s1 + 0x6e0]\n  7355: u64 [s1 + 0xe0] = a0\n  7359: a0 = s1 + 0x6c0\n  7363: a1 = 0x40\n  7366: ra = 236, jump @17\n      : @257 [@dyn 118] (gas: 13)\n  7372: a4 = s1 + 0x600\n  7376: a0 = u64 [a4 + 0xd8]\n  7380: a1 = u64 [a4 + 0xd0]\n  7384: a2 = u64 [a4 + 0xc8]\n  7388: a3 = u64 [a4 + 0xc0]\n  7392: a0 = a0 | a2\n  7395: a2 = a3 | a1\n  7398: a2 = a2 | a0\n  7401: a2 = a2 >> 0x20\n  7404: a0 = a0 | a1\n  7407: a0 = a0 << 0x20\n  7410: a0 = a0 | a2\n  7413: jump @259 if a0 == 0\n      : @258 (gas: 1)\n  7416: jump @680\n      : @259 (gas: 14)\n  7419: a0 = u64 [s1 + 0xe0]\n  7423: a2 = s1 + 0x600\n  7427: u64 [a2 + 0xa0] = a0\n  7431: a0 = u64 [s1 + 0xe8]\n  7435: u64 [a2 + 0xa8] = a0\n  7439: a0 = u64 [s1 + 0xf0]\n  7443: u64 [a2 + 0xb0] = a0\n  7447: a1 = s1 + 0x6a0\n  7451: a0 = u64 [s1 + 0xf8]\n  7455: u64 [a2 + 0xb8] = a0\n  7459: a0 = a3\n  7461: u64 [s1 + 0xf8] = a3\n  7465: ra = 0x26e\n  7469: jump @19\n      : @260 (gas: 8)\n  7472: u64 [a2 + 1792] = 0\n  7476: u64 [a2 + 1784] = 0\n  7480: u64 [a2 + 1776] = 0\n  7484: u64 [a2 + 1768] = 0\n  7488: a0 = s1 + 0x2000\n  7492: i32 a0 = a0 + 0xffffffffffffff60\n  7496: ecalli 15 // 'value_transferred'\n  7498: fallthrough\n      : @261 (gas: 10)\n  7499: a3 = s1 + 0x1878\n  7503: a4 = a3 + 0x600\n  7507: a0 = u64 [a4 + 0xf8]\n  7511: a1 = u64 [a3 + 0x700]\n  7515: a2 = u64 [a4 + 0xf0]\n  7519: a3 = u64 [a4 + 0xe8]\n  7523: a1 = a1 | a2\n  7526: a0 = a0 | a3\n  7529: a0 = a0 | a1\n  7532: jump @263 if a0 == 0\n      : @262 (gas: 1)\n  7535: jump @727\n      : @263 (gas: 4)\n  7538: a0 = u64 [s1 + 0xf8]\n  7542: a0 = i32 [a0]\n  7544: a1 = 0x43\n  7547: jump @265 if a1 <u a0\n      : @264 (gas: 1)\n  7550: jump @727\n      : @265 (gas: 4)\n  7553: a0 = s1 + 0x1840\n  7557: ra = 0xee\n  7561: t0 = 0x312\n  7565: jump @961\n      : @266 [@dyn 119] (gas: 68)\n  7568: a1 = s1 + 0x1078\n  7572: a2 = a1 + 0x700\n  7576: a0 = u64 [a2 + 0xc8]\n  7580: u64 [s1 + 0xf8] = a0\n  7584: a0 = u64 [a2 + 0xd0]\n  7588: u64 [s1 + 0xf0] = a0\n  7592: a0 = u64 [a2 + 0xd8]\n  7596: u64 [s1 + 0xe8] = a0\n  7600: a0 = u64 [a2 + 0xe0]\n  7604: u64 [s1 + 0xe0] = a0\n  7608: a0 = s1 + 0x2000\n  7612: i32 a0 = a0 + 0xffffffffffffff80\n  7615: a1 = 0x24\n  7618: ecalli 2 // 'call_data_load'\n  7620: a0 = s1 + 0x1878\n  7624: a2 = a0 + 0x700\n  7628: a1 = u64 [a2 + 0x8]\n  7631: u64 [s1 + 0xd8] = a1\n  7635: a1 = u64 [a2 + 0x10]\n  7638: u64 [s1 + 0xd0] = a1\n  7642: a1 = u64 [a2 + 0x18]\n  7645: u64 [s1 + 0xc8] = a1\n  7649: a0 = u64 [a2 + 0x20]\n  7652: u64 [s1 + 0xc0] = a0\n  7656: a0 = 0x30100\n  7661: u64 [s1 + 0xb8] = a0\n  7665: i32 a0 = a0 + 0\n  7667: ecalli 4 // 'caller'\n  7669: a2 = u64 [s1 + 0xb8]\n  7673: a0 = u64 [a2 + 0x8]\n  7676: a1 = i32 [a2 + 0x10]\n  7679: a2 = u64 [a2]\n  7681: a0 = reverse a0\n  7683: a3 = a0 << 0x20\n  7686: a1 = reverse a1\n  7688: a1 = a1 >> 0x20\n  7691: a1 = a1 | a3\n  7694: a0 = a0 >> 0x20\n  7697: a2 = reverse a2\n  7699: a3 = a2 << 0x20\n  7702: a0 = a0 | a3\n  7705: a2 = a2 >> 0x20\n  7708: a3 = s1 + 0x1078\n  7712: a4 = u64 [s1 + 0xc0]\n  7716: a5 = a3 + 0x700\n  7720: u64 [a5 + 0x80] = a4\n  7724: a4 = u64 [s1 + 0xc8]\n  7728: u64 [a5 + 0x78] = a4\n  7731: a4 = u64 [s1 + 0xd0]\n  7735: u64 [a5 + 0x70] = a4\n  7738: a4 = u64 [s1 + 0xd8]\n  7742: u64 [a5 + 0x68] = a4\n  7745: a4 = u64 [s1 + 0xe0]\n  7749: u64 [a5 + 0xa0] = a4\n  7753: a4 = u64 [s1 + 0xe8]\n  7757: u64 [a5 + 0x98] = a4\n  7761: a4 = u64 [s1 + 0xf0]\n  7765: u64 [a5 + 0x90] = a4\n  7769: a4 = u64 [s1 + 0xf8]\n  7773: u64 [a5 + 0x88] = a4\n  7777: u64 [a5 + 0xb8] = a2\n  7781: u64 [a5 + 0xb0] = a0\n  7785: u64 [a5 + 0xa8] = a1\n  7789: a0 = s1 + 0x1820\n  7793: a1 = s1 + 0x1800\n  7797: a2 = s1 + 0x17e0\n  7801: u64 [a3 + 1984] = 0\n  7805: ra = 240, jump @876\n      : @267 [@dyn 120] (gas: 3)\n  7811: a0 = s1 + 0x17c0\n  7815: a1 = 0x40\n  7818: ra = 242, jump @17\n      : @268 [@dyn 121] (gas: 7)\n  7824: a3 = s1 + 0x1078\n  7828: a5 = a3 + 0x700\n  7832: a4 = u64 [a5 + 0x60]\n  7835: a1 = u64 [a5 + 0x58]\n  7838: a2 = u64 [a5 + 0x50]\n  7841: a0 = u64 [a5 + 0x48]\n  7844: t0 = 244, jump @948\n      : @269 [@dyn 122] (gas: 1)\n  7850: jump @271 if a1 == 0\n      : @270 (gas: 1)\n  7853: jump @680\n      : @271 (gas: 8)\n  7856: u64 [a3 + 1856] = 0\n  7860: u64 [a3 + 1848] = 0\n  7864: u64 [a3 + 1832] = 0x1\n  7869: a1 = s1 + 0x17a0\n  7873: u64 [a3 + 1840] = 0\n  7877: u64 [s1 + 0xf8] = a0\n  7881: ra = 0x26e\n  7885: jump @19\n      : @272 (gas: 10)\n  7888: u64 [a2 + 864] = 0\n  7892: u64 [a2 + 856] = 0\n  7896: u64 [a2 + 848] = 0\n  7900: u64 [a2 + 840] = 0\n  7904: a0 = s1 + 0x2000\n  7908: i32 a0 = a0 + 0xfffffffffffffbc0\n  7912: ra = 0xf6\n  7916: ecalli 15 // 'value_transferred'\n  7918: t0 = 0xf8\n  7922: jump @947\n      : @273 [@dyn 123] (gas: 1)\n  7925: t0 = 248, jump @947\n      : @274 [@dyn 124] (gas: 8)\n  7931: a0 = u64 [a4 + 0x58]\n  7934: a1 = u64 [a4 + 0x60]\n  7937: a2 = u64 [a4 + 0x50]\n  7940: a3 = u64 [a4 + 0x48]\n  7943: a1 = a1 | a2\n  7946: a0 = a0 | a3\n  7949: a0 = a0 | a1\n  7952: jump @276 if a0 == 0\n      : @275 (gas: 1)\n  7955: jump @733\n      : @276 (gas: 3)\n  7958: a0 = u64 [s1 + 0xf8]\n  7962: a0 = i32 [a0]\n  7964: jump @278 if a0 >u 3\n      : @277 (gas: 1)\n  7968: jump @734\n      : @278 (gas: 4)\n  7971: a0 = s1 + 0x7ff\n  7975: a0 = a0 + 0x221\n  7979: a1 = 0x40\n  7982: ra = 250, jump @17\n      : @279 [@dyn 125] (gas: 8)\n  7988: a3 = s1 + 0x7ff\n  7992: a3 = a3 + 0x79\n  7995: a5 = a3 + 0x100\n  7999: a4 = u64 [a5 + 0xc0]\n  8003: a1 = u64 [a5 + 0xb8]\n  8007: a2 = u64 [a5 + 0xb0]\n  8011: a0 = u64 [a5 + 0xa8]\n  8015: t0 = 252, jump @948\n      : @280 [@dyn 126] (gas: 1)\n  8021: jump @282 if a1 == 0\n      : @281 (gas: 1)\n  8024: jump @680\n      : @282 (gas: 9)\n  8027: u64 [a3 + 416] = 0\n  8031: u64 [a3 + 408] = 0\n  8035: u64 [a3 + 392] = 0x12\n  8040: a1 = s1 + 0x7ff\n  8044: a1 = a1 + 0x201\n  8048: u64 [a3 + 400] = 0\n  8052: u64 [s1 + 0xf8] = a0\n  8056: ra = 0x26e\n  8060: jump @19\n      : @283 (gas: 9)\n  8063: u64 [a2 + 768] = 0\n  8067: u64 [a2 + 760] = 0\n  8071: u64 [a2 + 752] = 0\n  8075: u64 [a2 + 744] = 0\n  8079: a0 = s1 + 0x2000\n  8083: i32 a0 = a0 + 0xfffffffffffffb60\n  8087: ra = 0xfe\n  8091: ecalli 15 // 'value_transferred'\n  8093: fallthrough\n      : @284 [@dyn 127] (gas: 10)\n  8094: a3 = s1 + 0x1878\n  8098: a4 = a3 + 0x200\n  8102: a0 = u64 [a4 + 0xf8]\n  8106: a1 = u64 [a3 + 0x300]\n  8110: a2 = u64 [a4 + 0xf0]\n  8114: a3 = u64 [a4 + 0xe8]\n  8118: a1 = a1 | a2\n  8121: a0 = a0 | a3\n  8124: a0 = a0 | a1\n  8127: jump @286 if a0 == 0\n      : @285 (gas: 1)\n  8130: jump @735\n      : @286 (gas: 4)\n  8133: a0 = u64 [s1 + 0xf8]\n  8137: a0 = i32 [a0]\n  8139: a1 = 0x63\n  8142: jump @288 if a1 <u a0\n      : @287 (gas: 1)\n  8145: jump @736\n      : @288 (gas: 5)\n  8148: a0 = s1 + 0x7ff\n  8152: a0 = a0 + 0x1e1\n  8156: ra = 0x100\n  8160: t0 = 0x312\n  8164: jump @961\n      : @289 [@dyn 128] (gas: 16)\n  8167: a1 = s1 + 0x7ff\n  8171: a1 = a1 + 0x79\n  8174: a2 = a1 + 0x100\n  8178: a0 = u64 [a2 + 0x80]\n  8182: u64 [s1 + 0xa8] = a0\n  8186: a0 = u64 [a2 + 0x78]\n  8189: u64 [s1 + 0xb8] = a0\n  8193: a0 = u64 [a2 + 0x70]\n  8196: u64 [s1 + 0xf8] = a0\n  8200: a0 = u64 [a2 + 0x68]\n  8203: u64 [s1 + 0xf0] = a0\n  8207: a0 = s1 + 0x7ff\n  8211: a0 = a0 + 0x1c1\n  8215: ra = 0x102\n  8219: t0 = 0x31c\n  8223: jump @961\n      : @290 [@dyn 129] (gas: 42)\n  8226: a1 = s1 + 0x7ff\n  8230: a1 = a1 + 0x79\n  8233: a2 = a1 + 0x100\n  8237: a0 = u64 [a2 + 0x60]\n  8240: u64 [s1 + 0xa0] = a0\n  8244: a0 = u64 [a2 + 0x58]\n  8247: u64 [s1 + 0x98] = a0\n  8251: a0 = u64 [a2 + 0x50]\n  8254: u64 [s1 + 0x90] = a0\n  8258: a0 = u64 [a2 + 0x48]\n  8261: u64 [s1 + 0x88] = a0\n  8265: a0 = s1 + 0x2000\n  8269: i32 a0 = a0 + 0xfffffffffffffb80\n  8273: a1 = 0x44\n  8276: ecalli 2 // 'call_data_load'\n  8278: a0 = s1 + 0x1878\n  8282: a2 = a0 + 0x300\n  8286: a1 = u64 [a2 + 0x20]\n  8289: u64 [s1 + 0xe8] = a1\n  8293: a1 = u64 [a2 + 0x18]\n  8296: u64 [s1 + 0xd8] = a1\n  8300: a1 = u64 [a2 + 0x10]\n  8303: u64 [s1 + 0xc8] = a1\n  8307: a0 = u64 [a2 + 0x8]\n  8310: u64 [s1 + 0xd0] = a0\n  8314: a0 = u64 [s1 + 0xb8]\n  8318: a0 = a0 << 0x20\n  8321: a0 = a0 >> 0x20\n  8324: a2 = s1 + 0x7ff\n  8328: a2 = a2 + 0x79\n  8331: u64 [a2 + 320] = 0\n  8335: u64 [s1 + 0x78] = a0\n  8338: a3 = a2 + 0x100\n  8342: u64 [a3 + 0x38] = a0\n  8345: a0 = u64 [s1 + 0xf8]\n  8349: u64 [a3 + 0x30] = a0\n  8352: a1 = s1 + 0x7ff\n  8356: a1 = a1 + 0x1a1\n  8360: a0 = u64 [s1 + 0xf0]\n  8364: u64 [a3 + 0x28] = a0\n  8367: a0 = 0\n  8369: ra = 260, jump @19\n      : @291 [@dyn 130] (gas: 11)\n  8375: a1 = s1 + 0x7ff\n  8379: a1 = a1 + 0x79\n  8382: u64 [a1 + 288] = 0\n  8386: u64 [a1 + 280] = 0\n  8390: u64 [a1 + 264] = 0x1\n  8395: a2 = a1\n  8397: a0 = 0x20\n  8400: a1 = s1 + 0x7ff\n  8404: a1 = a1 + 0x181\n  8408: u64 [a2 + 272] = 0\n  8412: ra = 262, jump @19\n      : @292 [@dyn 131] (gas: 3)\n  8418: a1 = 0x200ec\n  8423: a0 = i32 [0x200ec]\n  8428: jump @294 if a0 >u 63\n      : @293 (gas: 2)\n  8432: u32 [0x200ec] = 0x40\n  8438: fallthrough\n      : @294 (gas: 15)\n  8439: a0 = sp + 0xffffffffffffffe0\n  8442: a2 = a0 & 0xffffffffffffffe0\n  8445: u64 [s1 + 0xb0] = a2\n  8449: sp = a2\n  8451: a0 = 0x20100\n  8456: i32 a0 = a0 + 0\n  8458: i32 a2 = a2 + 0\n  8460: u64 [s1 + 0xc0] = a1\n  8464: a1 = 0x40\n  8467: u64 [s1 + 0xe0] = a0\n  8471: ra = 0x108\n  8475: ecalli 8 // 'hash_keccak_256'\n  8477: a3 = u64 [s1 + 0xb0]\n  8481: t0 = 0x10a\n  8485: jump @963\n      : @295 [@dyn 132] (gas: 2)\n  8488: a3 = u64 [s1 + 0xb0]\n  8492: t0 = 266, jump @963\n      : @296 [@dyn 133] (gas: 20)\n  8498: u64 [s1 + 0x68] = a0\n  8501: a0 = reverse a1\n  8503: u64 [s1 + 0x60] = a0\n  8506: a0 = reverse a2\n  8508: u64 [s1 + 0x58] = a0\n  8511: a0 = reverse a3\n  8513: u64 [s1 + 0x50] = a0\n  8516: a0 = sp + 0xffffffffffffffe0\n  8519: a0 = a0 & 0xffffffffffffffe0\n  8522: u64 [s1 + 0x70] = a0\n  8525: sp = a0\n  8527: a0 = 0x30100\n  8532: u64 [s1 + 0xb0] = a0\n  8536: i32 a0 = a0 + 0\n  8538: u64 [s1 + 0x80] = a0\n  8542: ra = 0x10c\n  8546: ecalli 4 // 'caller'\n  8548: a2 = u64 [s1 + 0xb0]\n  8552: t0 = 0x10e\n  8556: jump @929\n      : @297 [@dyn 134] (gas: 2)\n  8559: a2 = u64 [s1 + 0xb0]\n  8563: t0 = 270, jump @929\n      : @298 [@dyn 135] (gas: 8)\n  8569: u64 [a2 + 256] = 0\n  8573: u64 [a2 + 0xf8] = a1\n  8577: u64 [a2 + 0xf0] = a0\n  8581: a1 = s1 + 0x7ff\n  8585: a1 = a1 + 0x161\n  8589: u64 [a2 + 0xe8] = a3\n  8593: a0 = 0\n  8595: ra = 272, jump @19\n      : @299 [@dyn 136] (gas: 15)\n  8601: a0 = u64 [s1 + 0x50]\n  8604: a1 = s1 + 0x7ff\n  8608: a1 = a1 + 0x79\n  8611: u64 [a1 + 0xe0] = a0\n  8615: a0 = u64 [s1 + 0x58]\n  8618: u64 [a1 + 0xd8] = a0\n  8622: a0 = u64 [s1 + 0x60]\n  8625: u64 [a1 + 0xd0] = a0\n  8629: a3 = a1\n  8631: a0 = 0x20\n  8634: a1 = s1 + 0x7ff\n  8638: a1 = a1 + 0x141\n  8642: a2 = u64 [s1 + 0x68]\n  8645: u64 [a3 + 0xc8] = a2\n  8649: ra = 274, jump @19\n      : @300 [@dyn 137] (gas: 3)\n  8655: a1 = u64 [s1 + 0xc0]\n  8659: a0 = i32 [a1]\n  8661: jump @302 if a0 >u 63\n      : @301 (gas: 2)\n  8665: u32 [a1 + 0] = 0x40\n  8668: fallthrough\n      : @302 (gas: 12)\n  8669: a0 = sp + 0xffffffffffffffe0\n  8672: a0 = a0 & 0xffffffffffffffe0\n  8675: u64 [s1 + 0x68] = a0\n  8678: sp = a0\n  8680: i32 a2 = a0 + 0\n  8682: a1 = 0x40\n  8685: a0 = u64 [s1 + 0xe0]\n  8689: ra = 0x114\n  8693: ecalli 8 // 'hash_keccak_256'\n  8695: a3 = u64 [s1 + 0x68]\n  8698: t0 = 0x116\n  8702: jump @934\n      : @303 [@dyn 138] (gas: 2)\n  8705: a3 = u64 [s1 + 0x68]\n  8708: t0 = 278, jump @934\n      : @304 [@dyn 139] (gas: 8)\n  8714: a1 = u64 [s1 + 0x70]\n  8717: u64 [a1 + 0x18] = a3\n  8720: u64 [a1 + 0x10] = a2\n  8723: u64 [a1 + 0x8] = a4\n  8726: u64 [a1] = a0\n  8728: a0 = s1 + 0x7ff\n  8732: a0 = a0 + 0x121\n  8736: ra = 280, jump @21\n      : @305 [@dyn 140] (gas: 10)\n  8742: a0 = s1 + 0x7ff\n  8746: a0 = a0 + 0x79\n  8749: t2 = u64 [a0 + 0xc0]\n  8753: a3 = u64 [a0 + 0xb8]\n  8757: a4 = u64 [a0 + 0xb0]\n  8761: t0 = u64 [a0 + 0xa8]\n  8765: a0 = a4 & t2\n  8768: a1 = t0 & a3\n  8771: a0 = a0 & a1\n  8774: jump @327 if a0 == 4294967295\n      : @306 (gas: 20)\n  8779: a0 = u64 [s1 + 0xd0]\n  8783: t1 = t0 <u a0\n  8786: a1 = u64 [s1 + 0xc8]\n  8790: a0 = a4 ^ a1\n  8793: a5 = a4 <u a1\n  8796: a5 = t1 if a0 == 0\n  8799: a2 = u64 [s1 + 0xd8]\n  8803: ra = a3 <u a2\n  8806: a1 = u64 [s1 + 0xe8]\n  8810: a0 = t2 ^ a1\n  8813: a1 = t2 <u a1\n  8816: a1 = ra if a0 == 0\n  8819: a2 = a2 ^ a3\n  8822: a0 = a0 | a2\n  8825: a1 = a5 if a0 == 0\n  8828: u64 [s1 + 0x70] = t0\n  8831: u64 [s1 + 0x68] = a4\n  8834: u64 [s1 + 0x60] = t2\n  8837: u64 [s1 + 0x58] = a3\n  8840: jump @308 if a1 == 0\n      : @307 (gas: 1)\n  8843: jump @801\n      : @308 (gas: 9)\n  8846: u64 [s1 + 0x40] = ra\n  8849: u64 [s1 + 0x48] = a5\n  8852: u64 [s1 + 0x50] = t1\n  8855: a0 = u64 [s1 + 0xf0]\n  8859: a1 = u64 [s1 + 0x78]\n  8862: a0 = a0 | a1\n  8865: a1 = u64 [s1 + 0xf8]\n  8869: a0 = a0 | a1\n  8872: jump @310 if a0 != 0\n      : @309 (gas: 1)\n  8875: jump @810\n      : @310 (gas: 6)\n  8878: a0 = u64 [s1 + 0x80]\n  8882: ra = 0x11a\n  8886: ecalli 4 // 'caller'\n  8888: a2 = u64 [s1 + 0xb0]\n  8892: t0 = 0x11c\n  8896: jump @955\n      : @311 [@dyn 141] (gas: 2)\n  8899: a2 = u64 [s1 + 0xb0]\n  8903: t0 = 284, jump @955\n      : @312 [@dyn 142] (gas: 1)\n  8909: jump @314 if a0 != 0\n      : @313 (gas: 1)\n  8912: jump @812\n      : @314 (gas: 13)\n  8915: a2 = s1 + 0x7ff\n  8919: a2 = a2 + 0x79\n  8922: u64 [a2 + 160] = 0\n  8926: a0 = u64 [s1 + 0xf0]\n  8930: u64 [a2 + 0x88] = a0\n  8934: a0 = u64 [s1 + 0xf8]\n  8938: u64 [a2 + 0x90] = a0\n  8942: a1 = s1 + 0x7ff\n  8946: a1 = a1 + 0x101\n  8950: a0 = u64 [s1 + 0x78]\n  8953: u64 [a2 + 0x98] = a0\n  8957: a0 = 0\n  8959: ra = 286, jump @19\n      : @315 [@dyn 143] (gas: 11)\n  8965: a1 = s1 + 0x7ff\n  8969: a1 = a1 + 0x79\n  8972: u64 [a1 + 128] = 0\n  8976: u64 [a1 + 120] = 0\n  8979: u64 [a1 + 104] = 0x1\n  8983: a2 = a1\n  8985: a0 = 0x20\n  8988: a1 = s1 + 0x7ff\n  8992: a1 = a1 + 0xe1\n  8996: u64 [a2 + 112] = 0\n  8999: ra = 288, jump @19\n      : @316 [@dyn 144] (gas: 3)\n  9005: a1 = u64 [s1 + 0xc0]\n  9009: a0 = i32 [a1]\n  9011: jump @318 if a0 >u 63\n      : @317 (gas: 2)\n  9015: u32 [a1 + 0] = 0x40\n  9018: fallthrough\n      : @318 (gas: 12)\n  9019: a0 = sp + 0xffffffffffffffe0\n  9022: a0 = a0 & 0xffffffffffffffe0\n  9025: u64 [s1 + 0x78] = a0\n  9028: sp = a0\n  9030: i32 a2 = a0 + 0\n  9032: a1 = 0x40\n  9035: a0 = u64 [s1 + 0xe0]\n  9039: ra = 0x122\n  9043: ecalli 8 // 'hash_keccak_256'\n  9045: a3 = u64 [s1 + 0x78]\n  9048: t0 = 0x124\n  9052: jump @963\n      : @319 [@dyn 145] (gas: 2)\n  9055: a3 = u64 [s1 + 0x78]\n  9058: t0 = 292, jump @963\n      : @320 [@dyn 146] (gas: 17)\n  9064: u64 [s1 + 0x38] = a0\n  9067: a0 = reverse a1\n  9069: u64 [s1 + 0x30] = a0\n  9072: a0 = reverse a2\n  9074: u64 [s1 + 0x28] = a0\n  9077: a0 = reverse a3\n  9079: u64 [s1 + 0x20] = a0\n  9082: a0 = sp + 0xffffffffffffffe0\n  9085: a0 = a0 & 0xffffffffffffffe0\n  9088: u64 [s1 + 0x78] = a0\n  9091: sp = a0\n  9093: a0 = u64 [s1 + 0x80]\n  9097: ra = 0x126\n  9101: ecalli 4 // 'caller'\n  9103: a2 = u64 [s1 + 0xb0]\n  9107: t0 = 0x128\n  9111: jump @929\n      : @321 [@dyn 147] (gas: 2)\n  9114: a2 = u64 [s1 + 0xb0]\n  9118: t0 = 296, jump @929\n      : @322 [@dyn 148] (gas: 8)\n  9124: u64 [a2 + 96] = 0\n  9127: u64 [a2 + 0x58] = a1\n  9130: u64 [a2 + 0x50] = a0\n  9133: a1 = s1 + 0x7ff\n  9137: a1 = a1 + 0xc1\n  9141: u64 [a2 + 0x48] = a3\n  9144: a0 = 0\n  9146: ra = 298, jump @19\n      : @323 [@dyn 149] (gas: 15)\n  9152: a0 = u64 [s1 + 0x20]\n  9155: a1 = s1 + 0x7ff\n  9159: a1 = a1 + 0x79\n  9162: u64 [a1 + 0x40] = a0\n  9165: a0 = u64 [s1 + 0x28]\n  9168: u64 [a1 + 0x38] = a0\n  9171: a0 = u64 [s1 + 0x30]\n  9174: u64 [a1 + 0x30] = a0\n  9177: a3 = a1\n  9179: a0 = 0x20\n  9182: a1 = s1 + 0x7ff\n  9186: a1 = a1 + 0xa1\n  9190: a2 = u64 [s1 + 0x38]\n  9193: u64 [a3 + 0x28] = a2\n  9196: ra = 300, jump @19\n      : @324 [@dyn 150] (gas: 3)\n  9202: a1 = u64 [s1 + 0xc0]\n  9206: a0 = i32 [a1]\n  9208: jump @326 if a0 >u 63\n      : @325 (gas: 2)\n  9212: u32 [a1 + 0] = 0x40\n  9215: fallthrough\n      : @326 (gas: 50)\n  9216: a0 = sp + 0xffffffffffffffe0\n  9219: a0 = a0 & 0xffffffffffffffe0\n  9222: u64 [s1 + 0xc0] = a0\n  9226: sp = a0\n  9228: i32 a2 = a0 + 0\n  9230: a1 = 0x40\n  9233: a0 = u64 [s1 + 0xe0]\n  9237: ecalli 8 // 'hash_keccak_256'\n  9239: a0 = u64 [s1 + 0xd8]\n  9243: a1 = u64 [s1 + 0x58]\n  9246: a0 = a1 - a0\n  9249: a2 = u64 [s1 + 0x48]\n  9252: a1 = a0 - a2\n  9255: a0 = a0 <u a2\n  9258: a2 = u64 [s1 + 0xe8]\n  9262: a3 = u64 [s1 + 0x60]\n  9265: a2 = a3 - a2\n  9268: a3 = u64 [s1 + 0x40]\n  9271: a2 = a2 - a3\n  9274: a2 = a2 - a0\n  9277: a0 = u64 [s1 + 0xc8]\n  9281: a3 = u64 [s1 + 0x68]\n  9284: a0 = a3 - a0\n  9287: a3 = u64 [s1 + 0x50]\n  9290: a0 = a0 - a3\n  9293: a3 = s1 + 0x1878\n  9297: a5 = a3 + 0x300\n  9301: u64 [a5 + 0x40] = a2\n  9304: u64 [a5 + 0x38] = a1\n  9307: u64 [a5 + 0x30] = a0\n  9310: a4 = u64 [s1 + 0xc0]\n  9314: a0 = u64 [a4]\n  9316: a1 = u64 [s1 + 0xd0]\n  9320: a2 = u64 [s1 + 0x70]\n  9323: a1 = a2 - a1\n  9326: u64 [a5 + 0x28] = a1\n  9329: a1 = u64 [a4 + 0x8]\n  9332: a2 = reverse a0\n  9334: a0 = u64 [s1 + 0x78]\n  9337: u64 [a0 + 0x18] = a2\n  9340: a3 = u64 [a4 + 0x10]\n  9343: a2 = u64 [a4 + 0x18]\n  9346: a1 = reverse a1\n  9348: u64 [a0 + 0x10] = a1\n  9351: a1 = reverse a3\n  9353: u64 [a0 + 0x8] = a1\n  9356: a1 = reverse a2\n  9358: u64 [a0] = a1\n  9360: a1 = s1 + 0x1ba0\n  9364: ra = 302, jump @22\n      : @327 [@dyn 151] (gas: 28)\n  9370: a0 = u64 [s1 + 0xd0]\n  9374: u64 [s1 + 0x740] = a0\n  9378: a0 = u64 [s1 + 0x88]\n  9382: u64 [s1 + 0x760] = a0\n  9386: a0 = u64 [s1 + 0xf0]\n  9390: u64 [s1 + 0x780] = a0\n  9394: a0 = u64 [s1 + 0xc8]\n  9398: u64 [s1 + 0x748] = a0\n  9402: a0 = u64 [s1 + 0x90]\n  9406: u64 [s1 + 0x768] = a0\n  9410: a0 = u64 [s1 + 0xf8]\n  9414: u64 [s1 + 0x788] = a0\n  9418: a0 = u64 [s1 + 0xd8]\n  9422: u64 [s1 + 0x750] = a0\n  9426: a0 = u64 [s1 + 0x98]\n  9430: u64 [s1 + 0x770] = a0\n  9434: a0 = u64 [s1 + 0xb8]\n  9438: u64 [s1 + 0x790] = a0\n  9442: a0 = u64 [s1 + 0xe8]\n  9446: u64 [s1 + 0x758] = a0\n  9450: a0 = u64 [s1 + 0xa0]\n  9454: u64 [s1 + 0x778] = a0\n  9458: a0 = s1 + 0x780\n  9462: a1 = s1 + 0x760\n  9466: a2 = s1 + 0x740\n  9470: a3 = u64 [s1 + 0xa8]\n  9474: u64 [s1 + 0x798] = a3\n  9478: ra = 304, jump @876\n      : @328 [@dyn 152] (gas: 3)\n  9484: a0 = s1 + 0x720\n  9488: a1 = 0x40\n  9491: ra = 306, jump @17\n      : @329 [@dyn 153] (gas: 6)\n  9497: a4 = s1 + 0x700\n  9501: a3 = u64 [a4 + 0x38]\n  9504: a1 = u64 [a4 + 0x30]\n  9507: a2 = u64 [a4 + 0x28]\n  9510: a0 = u64 [a4 + 0x20]\n  9513: t0 = 308, jump @941\n      : @330 [@dyn 154] (gas: 1)\n  9519: jump @332 if a1 == 0\n      : @331 (gas: 1)\n  9522: jump @680\n      : @332 (gas: 8)\n  9525: u64 [s1 + 1816] = 0\n  9529: u64 [s1 + 1808] = 0\n  9533: u64 [s1 + 1800] = 0\n  9537: a1 = s1 + 0x700\n  9541: u64 [s1 + 1792] = 0x1\n  9546: u64 [s1 + 0xf8] = a0\n  9550: ra = 0x26e\n  9554: jump @19\n      : @333 (gas: 10)\n  9557: u64 [a2 + 352] = 0\n  9561: u64 [a2 + 344] = 0\n  9565: u64 [a2 + 336] = 0\n  9569: u64 [a2 + 328] = 0\n  9573: a0 = s1 + 0x2000\n  9577: i32 a0 = a0 + 0xfffffffffffff9c0\n  9581: ra = 0x136\n  9585: ecalli 15 // 'value_transferred'\n  9587: t0 = 0x138\n  9591: jump @962\n      : @334 [@dyn 155] (gas: 1)\n  9594: t0 = 312, jump @962\n      : @335 [@dyn 156] (gas: 8)\n  9600: a0 = u64 [a4 + 0x58]\n  9603: a1 = u64 [a4 + 0x60]\n  9606: a2 = u64 [a4 + 0x50]\n  9609: a3 = u64 [a4 + 0x48]\n  9612: a1 = a1 | a2\n  9615: a0 = a0 | a3\n  9618: a0 = a0 | a1\n  9621: jump @337 if a0 == 0\n      : @336 (gas: 1)\n  9624: jump @737\n      : @337 (gas: 3)\n  9627: a0 = u64 [s1 + 0xf8]\n  9631: a1 = i32 [a0]\n  9633: jump @339 if a1 >u 3\n      : @338 (gas: 1)\n  9637: jump @738\n      : @339 (gas: 8)\n  9640: a1 = s1 + 0x1878\n  9644: u64 [a1 + 384] = 0\n  9648: u64 [a1 + 376] = 0\n  9652: u64 [a1 + 368] = 0\n  9656: u64 [a1 + 360] = 0x3\n  9661: a0 = s1 + 0x2c0\n  9665: a1 = s1 + 0x19e0\n  9669: ra = 314, jump @21\n      : @340 [@dyn 157] (gas: 34)\n  9675: a1 = s1 + 0x200\n  9679: a2 = u64 [a1 + 0xd0]\n  9683: a3 = u64 [a1 + 0xc8]\n  9687: a5 = u64 [a1 + 0xd8]\n  9691: a0 = u64 [a1 + 0xc0]\n  9695: a4 = a2 << 0x3f\n  9698: a1 = a3 >> 0x1\n  9701: t0 = a1 | a4\n  9704: a1 = a5 << 0x3f\n  9707: u64 [s1 + 0xf0] = a2\n  9711: a2 = a2 >> 0x1\n  9714: a1 = a1 | a2\n  9717: u64 [s1 + 0xe0] = a3\n  9721: a2 = a3 << 0x3f\n  9724: a3 = a0 >> 0x1\n  9727: a4 = a3 | a2\n  9730: u64 [s1 + 0xe8] = a5\n  9734: t1 = a5 >> 0x1\n  9737: u64 [s1 + 0xd0] = a0\n  9741: a5 = a0 & 0x1\n  9744: a3 = -a5\n  9746: t2 = a3 & a1\n  9749: a2 = a3 & t0\n  9752: a3 = a3 & t1\n  9755: a0 = a4 & 0x7f\n  9758: u64 [s1 + 0xd8] = a0\n  9762: a4 = a0 if a5 == 0\n  9765: a0 = a4 <u 0x20\n  9768: a0 = 0 if a2 != 0\n  9770: a1 = t2 | a3\n  9773: a0 = 0 if a1 != 0\n  9775: u64 [s1 + 0xf8] = a5\n  9779: a1 = a5 <u 0x1\n  9782: jump @342 if a1 == a0\n      : @341 (gas: 1)\n  9785: jump @739\n      : @342 (gas: 12)\n  9788: u64 [s1 + 0xb8] = a4\n  9792: a5 = s1 + 0x200\n  9796: u64 [a5 + 0xa0] = a4\n  9800: u64 [s1 + 0xa8] = a2\n  9804: u64 [a5 + 0xa8] = a2\n  9808: u64 [s1 + 0xb0] = t2\n  9812: u64 [s1 + 0x2b0] = t2\n  9816: a0 = 0x80\n  9820: a1 = s1 + 0x2a0\n  9824: u64 [s1 + 0xa0] = a3\n  9828: u64 [a5 + 0xb8] = a3\n  9832: ra = 316, jump @19\n      : @343 [@dyn 158] (gas: 2)\n  9838: a0 = u64 [s1 + 0xf8]\n  9842: jump @345 if a0 == 0\n      : @344 (gas: 1)\n  9845: jump @649\n      : @345 (gas: 13)\n  9848: a0 = u64 [s1 + 0xd0]\n  9852: a0 = a0 & 0xffffffffffffff00\n  9856: a1 = u64 [s1 + 0xe0]\n  9860: a2 = s1 + 0x200\n  9864: u64 [a2 + 0x28] = a1\n  9867: u64 [a2 + 0x20] = a0\n  9870: a0 = u64 [s1 + 0xf0]\n  9874: u64 [a2 + 0x30] = a0\n  9877: a0 = u64 [s1 + 0xe8]\n  9881: u64 [a2 + 0x38] = a0\n  9884: a0 = 0xa0\n  9888: a1 = s1 + 0x220\n  9892: ra = 318, jump @19\n      : @346 [@dyn 159] (gas: 7)\n  9898: a1 = 0\n  9900: a0 = 0\n  9902: t0 = 0\n  9904: a3 = 0xc0\n  9908: a2 = u64 [s1 + 0xd8]\n  9912: a3 = 0xa0 if a2 == 0\n  9916: jump @657\n      : @347 (gas: 5)\n  9919: u64 [s1 + 0xb0] = t0\n  9923: u64 [s1 + 0xb8] = a5\n  9927: u64 [s1 + 0xc0] = a4\n  9931: u64 [s1 + 0xc8] = a3\n  9935: jump @349 if a0 == 2064864835\n      : @348 (gas: 1)\n  9942: jump @725\n      : @349 (gas: 10)\n  9945: u64 [a2 + 960] = 0\n  9949: u64 [a2 + 952] = 0\n  9953: u64 [a2 + 944] = 0\n  9957: u64 [a2 + 936] = 0\n  9961: a0 = s1 + 0x2000\n  9965: i32 a0 = a0 + 0xfffffffffffffc20\n  9969: ra = 0x140\n  9973: ecalli 15 // 'value_transferred'\n  9975: t0 = 0x142\n  9979: jump @947\n      : @350 [@dyn 160] (gas: 1)\n  9982: t0 = 322, jump @947\n      : @351 [@dyn 161] (gas: 1)\n  9988: t0 = 324, jump @960\n      : @352 [@dyn 162] (gas: 1)\n  9994: jump @354 if a0 == 0\n      : @353 (gas: 1)\n  9997: jump @745\n      : @354 (gas: 3)\n 10000: a0 = u64 [s1 + 0xf8]\n 10004: a0 = i32 [a0]\n 10006: jump @356 if a0 >u 99\n      : @355 (gas: 1)\n 10010: jump @746\n      : @356 (gas: 5)\n 10013: a0 = s1 + 0x2000\n 10017: i32 a0 = a0 + 0xfffffffffffffc40\n 10021: a1 = 0x4\n 10024: ecalli 2 // 'call_data_load'\n 10026: fallthrough\n      : @357 (gas: 9)\n 10027: a3 = s1 + 0x1878\n 10031: a0 = u64 [a3 + 0x3d8]\n 10035: a1 = u64 [a3 + 0x3e0]\n 10039: a2 = a0 ^ 0x1\n 10042: a2 = a2 | a1\n 10045: a0 = a0 <u 0x1\n 10048: a0 = 0 if a1 != 0\n 10050: a0 = 0 if a2 == 0\n 10052: jump @359 if a0 != 0\n      : @358 (gas: 1)\n 10055: jump @747\n      : @359 (gas: 11)\n 10058: a0 = u64 [a3 + 0x3d0]\n 10062: u64 [s1 + 0xf8] = a0\n 10066: a0 = u64 [a3 + 0x3c8]\n 10070: u64 [s1 + 0xf0] = a0\n 10074: a0 = s1 + 0x2000\n 10078: i32 a0 = a0 + 0xfffffffffffffc60\n 10082: a1 = 0x24\n 10085: ra = 0x146\n 10089: ecalli 2 // 'call_data_load'\n 10091: t0 = 0x148\n 10095: jump @947\n      : @360 [@dyn 163] (gas: 1)\n 10098: t0 = 328, jump @947\n      : @361 [@dyn 164] (gas: 13)\n 10104: a0 = u64 [a4 + 0xf8]\n 10108: a1 = u64 [a3 + 0x400]\n 10112: a2 = u64 [a4 + 0xf0]\n 10116: a3 = u64 [a4 + 0xe8]\n 10120: a1 = a1 | a2\n 10123: u64 [s1 + 0x70] = a3\n 10126: a2 = a3 | a0\n 10129: a2 = a2 | a1\n 10132: a2 = a2 >> 0x20\n 10135: a0 = a0 | a1\n 10138: a0 = a0 << 0x20\n 10141: a0 = a0 | a2\n 10144: jump @363 if a0 == 0\n      : @362 (gas: 1)\n 10147: jump @748\n      : @363 (gas: 8)\n 10150: a0 = 0x30100\n 10155: u64 [s1 + 0xe8] = a0\n 10159: i32 a0 = a0 + 0\n 10161: u64 [s1 + 0xe0] = a0\n 10165: ra = 0x14a\n 10169: ecalli 4 // 'caller'\n 10171: t0 = 0x14c\n 10175: jump @928\n      : @364 [@dyn 165] (gas: 1)\n 10178: t0 = 332, jump @928\n      : @365 [@dyn 166] (gas: 8)\n 10184: u64 [a2 + 1312] = 0\n 10188: a4 = a2 + 0x500\n 10192: u64 [a4 + 0x18] = a1\n 10195: u64 [a4 + 0x10] = a0\n 10198: a1 = s1 + 0x1580\n 10202: u64 [a4 + 0x8] = a3\n 10205: a0 = 0\n 10207: ra = 334, jump @19\n      : @366 [@dyn 167] (gas: 9)\n 10213: a0 = s1 + 0x1078\n 10217: u64 [a0 + 1280] = 0\n 10221: u64 [a0 + 1272] = 0\n 10225: u64 [a0 + 1264] = 0\n 10229: a2 = a0\n 10231: a0 = 0x20\n 10234: a1 = s1 + 0x1560\n 10238: u64 [a2 + 1256] = 0\n 10242: ra = 336, jump @19\n      : @367 [@dyn 168] (gas: 4)\n 10248: a0 = 0x200ec\n 10253: u64 [s1 + 0xd8] = a0\n 10257: a0 = i32 [0x200ec]\n 10262: jump @369 if a0 >u 63\n      : @368 (gas: 3)\n 10266: a1 = u64 [s1 + 0xd8]\n 10270: u32 [a1 + 0] = 0x40\n 10273: fallthrough\n      : @369 (gas: 14)\n 10274: a0 = sp + 0xffffffffffffffe0\n 10277: a2 = a0 & 0xffffffffffffffe0\n 10280: u64 [s1 + 0xa8] = a2\n 10284: sp = a2\n 10286: a0 = 0x20100\n 10291: i32 a0 = a0 + 0\n 10293: i32 a2 = a2 + 0\n 10295: a1 = 0x40\n 10298: u64 [s1 + 0xd0] = a0\n 10302: ra = 0x152\n 10306: ecalli 8 // 'hash_keccak_256'\n 10308: a3 = u64 [s1 + 0xa8]\n 10312: t0 = 0x154\n 10316: jump @931\n      : @370 [@dyn 169] (gas: 2)\n 10319: a3 = u64 [s1 + 0xa8]\n 10323: t0 = 340, jump @931\n      : @371 [@dyn 170] (gas: 7)\n 10329: u64 [a5 + 0x20] = a3\n 10332: u64 [a5 + 0x18] = a2\n 10335: u64 [a5 + 0x10] = a1\n 10338: u64 [a5 + 0x8] = a0\n 10341: a0 = s1 + 0x1540\n 10345: a1 = s1 + 0x1c80\n 10349: ra = 342, jump @21\n      : @372 [@dyn 171] (gas: 15)\n 10355: a3 = s1 + 0x1078\n 10359: a4 = a3 + 0x400\n 10363: a0 = u64 [a4 + 0xd0]\n 10367: a1 = u64 [a4 + 0xe0]\n 10371: a2 = u64 [a4 + 0xc8]\n 10375: a3 = u64 [a4 + 0xd8]\n 10379: a5 = u64 [s1 + 0xf8]\n 10383: a4 = a0 ^ a5\n 10386: a0 = a0 <u a5\n 10389: a5 = u64 [s1 + 0xf0]\n 10393: a2 = a2 <u a5\n 10396: a2 = a0 if a4 != 0\n 10399: a1 = a1 | a3\n 10402: a2 = 0 if a1 != 0\n 10404: jump @374 if a2 == 0\n      : @373 (gas: 1)\n 10407: jump @749\n      : @374 (gas: 6)\n 10410: a0 = u64 [s1 + 0xe0]\n 10414: ra = 0x158\n 10418: ecalli 4 // 'caller'\n 10420: a2 = u64 [s1 + 0xe8]\n 10424: t0 = 0x15a\n 10428: jump @955\n      : @375 [@dyn 172] (gas: 2)\n 10431: a2 = u64 [s1 + 0xe8]\n 10435: t0 = 346, jump @955\n      : @376 [@dyn 173] (gas: 1)\n 10441: jump @378 if a0 != 0\n      : @377 (gas: 1)\n 10444: jump @753\n      : @378 (gas: 5)\n 10447: a0 = u64 [s1 + 0xe0]\n 10451: ra = 0x15c\n 10455: ecalli 4 // 'caller'\n 10457: t0 = 0x15e\n 10461: jump @928\n      : @379 [@dyn 174] (gas: 1)\n 10464: t0 = 350, jump @928\n      : @380 [@dyn 175] (gas: 8)\n 10470: u64 [a2 + 1216] = 0\n 10474: a4 = a2 + 0x400\n 10478: u64 [a4 + 0xb8] = a1\n 10482: u64 [a4 + 0xb0] = a0\n 10486: a1 = s1 + 0x1520\n 10490: u64 [a4 + 0xa8] = a3\n 10494: a0 = 0\n 10496: ra = 352, jump @19\n      : @381 [@dyn 176] (gas: 9)\n 10502: a0 = s1 + 0x1078\n 10506: u64 [a0 + 1184] = 0\n 10510: u64 [a0 + 1176] = 0\n 10514: u64 [a0 + 1168] = 0\n 10518: a2 = a0\n 10520: a0 = 0x20\n 10523: a1 = s1 + 0x1500\n 10527: u64 [a2 + 1160] = 0\n 10531: ra = 354, jump @19\n      : @382 [@dyn 177] (gas: 3)\n 10537: a0 = u64 [s1 + 0xd8]\n 10541: a0 = i32 [a0]\n 10543: jump @384 if a0 >u 63\n      : @383 (gas: 3)\n 10547: a1 = u64 [s1 + 0xd8]\n 10551: u32 [a1 + 0] = 0x40\n 10554: fallthrough\n      : @384 (gas: 12)\n 10555: a0 = sp + 0xffffffffffffffe0\n 10558: a0 = a0 & 0xffffffffffffffe0\n 10561: u64 [s1 + 0xa8] = a0\n 10565: sp = a0\n 10567: i32 a2 = a0 + 0\n 10569: a1 = 0x40\n 10572: a0 = u64 [s1 + 0xd0]\n 10576: ra = 0x164\n 10580: ecalli 8 // 'hash_keccak_256'\n 10582: a3 = u64 [s1 + 0xa8]\n 10586: t0 = 0x166\n 10590: jump @931\n      : @385 [@dyn 178] (gas: 2)\n 10593: a3 = u64 [s1 + 0xa8]\n 10597: t0 = 358, jump @931\n      : @386 [@dyn 179] (gas: 7)\n 10603: u64 [a5 + 0x40] = a3\n 10606: u64 [a5 + 0x38] = a2\n 10609: u64 [a5 + 0x30] = a1\n 10612: u64 [a5 + 0x28] = a0\n 10615: a0 = s1 + 0x14e0\n 10619: a1 = s1 + 0x1ca0\n 10623: ra = 360, jump @21\n      : @387 [@dyn 180] (gas: 22)\n 10629: a0 = s1 + 0x1078\n 10633: a1 = a0 + 0x400\n 10637: a3 = u64 [a1 + 0x70]\n 10640: a4 = u64 [a1 + 0x80]\n 10644: a2 = u64 [a1 + 0x68]\n 10647: a5 = u64 [a1 + 0x78]\n 10650: a1 = u64 [s1 + 0xf8]\n 10654: a0 = a3 ^ a1\n 10657: u64 [s1 + 0xa0] = a3\n 10661: a3 = a3 <u a1\n 10664: a1 = u64 [s1 + 0xf0]\n 10668: u64 [s1 + 0xa8] = a2\n 10672: a1 = a2 <u a1\n 10675: u64 [s1 + 0x88] = a1\n 10679: a3 = a1 if a0 == 0\n 10682: u64 [s1 + 0x98] = a4\n 10686: u64 [s1 + 0x90] = a5\n 10690: a0 = a5 | a4\n 10693: u64 [s1 + 0x80] = a3\n 10697: a1 = a3\n 10699: a1 = 0 if a0 != 0\n 10701: jump @389 if a1 == 0\n      : @388 (gas: 1)\n 10704: jump @758\n      : @389 (gas: 5)\n 10707: a0 = u64 [s1 + 0xe0]\n 10711: ra = 0x16a\n 10715: ecalli 4 // 'caller'\n 10717: t0 = 0x16c\n 10721: jump @928\n      : @390 [@dyn 181] (gas: 1)\n 10724: t0 = 364, jump @928\n      : @391 [@dyn 182] (gas: 8)\n 10730: u64 [a2 + 1120] = 0\n 10734: a4 = a2 + 0x400\n 10738: u64 [a4 + 0x58] = a1\n 10741: u64 [a4 + 0x50] = a0\n 10744: a1 = s1 + 0x14c0\n 10748: u64 [a4 + 0x48] = a3\n 10751: a0 = 0\n 10753: ra = 366, jump @19\n      : @392 [@dyn 183] (gas: 9)\n 10759: a0 = s1 + 0x1078\n 10763: u64 [a0 + 1088] = 0\n 10767: u64 [a0 + 1080] = 0\n 10771: u64 [a0 + 1072] = 0\n 10775: a2 = a0\n 10777: a0 = 0x20\n 10780: a1 = s1 + 0x14a0\n 10784: u64 [a2 + 1064] = 0\n 10788: ra = 368, jump @19\n      : @393 [@dyn 184] (gas: 21)\n 10794: a0 = u64 [s1 + 0x90]\n 10798: a1 = u64 [s1 + 0x80]\n 10802: a2 = a0 - a1\n 10805: u64 [s1 + 0x78] = a2\n 10808: a0 = a0 <u a1\n 10811: a1 = u64 [s1 + 0x98]\n 10815: a1 = a1 - a0\n 10818: u64 [s1 + 0x98] = a1\n 10822: a0 = u64 [s1 + 0xd8]\n 10826: a0 = i32 [a0]\n 10828: a1 = u64 [s1 + 0xf8]\n 10832: a2 = u64 [s1 + 0xa0]\n 10836: a1 = a2 - a1\n 10839: a2 = u64 [s1 + 0x88]\n 10843: a1 = a1 - a2\n 10846: u64 [s1 + 0xa0] = a1\n 10850: a2 = u64 [s1 + 0xf0]\n 10854: a3 = u64 [s1 + 0xa8]\n 10858: a3 = a3 - a2\n 10861: u64 [s1 + 0xa8] = a3\n 10865: jump @395 if a0 >u 63\n      : @394 (gas: 3)\n 10869: a1 = u64 [s1 + 0xd8]\n 10873: u32 [a1 + 0] = 0x40\n 10876: fallthrough\n      : @395 (gas: 12)\n 10877: a0 = sp + 0xffffffffffffffe0\n 10880: a0 = a0 & 0xffffffffffffffe0\n 10883: u64 [s1 + 0x90] = a0\n 10887: sp = a0\n 10889: i32 a2 = a0 + 0\n 10891: a1 = 0x40\n 10894: a0 = u64 [s1 + 0xd0]\n 10898: ra = 0x172\n 10902: ecalli 8 // 'hash_keccak_256'\n 10904: a3 = u64 [s1 + 0x90]\n 10908: t0 = 0x174\n 10912: jump @931\n      : @396 [@dyn 185] (gas: 2)\n 10915: a3 = u64 [s1 + 0x90]\n 10919: t0 = 372, jump @931\n      : @397 [@dyn 186] (gas: 15)\n 10925: u64 [a5 + 0x60] = a3\n 10928: u64 [a5 + 0x58] = a2\n 10931: u64 [a5 + 0x50] = a1\n 10934: u64 [a5 + 0x48] = a0\n 10937: a0 = u64 [s1 + 0x98]\n 10941: u64 [a5 + 0x80] = a0\n 10945: a0 = u64 [s1 + 0x78]\n 10948: u64 [a5 + 0x78] = a0\n 10951: a0 = u64 [s1 + 0xa0]\n 10955: u64 [a5 + 0x70] = a0\n 10958: a0 = u64 [s1 + 0xa8]\n 10962: u64 [a5 + 0x68] = a0\n 10965: a0 = s1 + 0x1cc0\n 10969: a1 = s1 + 0x1ce0\n 10973: ra = 374, jump @22\n      : @398 [@dyn 187] (gas: 8)\n 10979: a0 = s1 + 0x1878\n 10983: u64 [a0 + 1184] = 0\n 10987: u64 [a0 + 1176] = 0\n 10991: u64 [a0 + 1168] = 0\n 10995: u64 [a0 + 1160] = 0x2\n 11000: a0 = s1 + 0x1480\n 11004: a1 = s1 + 0x1d00\n 11008: ra = 376, jump @21\n      : @399 [@dyn 188] (gas: 30)\n 11014: a1 = s1 + 0x1078\n 11018: a0 = u64 [a1 + 0x410]\n 11022: t0 = u64 [a1 + 0x420]\n 11026: t1 = u64 [a1 + 0x408]\n 11030: t2 = u64 [a1 + 0x418]\n 11034: a2 = u64 [s1 + 0xf8]\n 11038: a4 = a0 ^ a2\n 11041: a5 = a0 <u a2\n 11044: a3 = u64 [s1 + 0xf0]\n 11048: a1 = t1 <u a3\n 11051: a5 = a1 if a4 == 0\n 11054: a4 = t2 <u a5\n 11057: a4 = t0 - a4\n 11060: a5 = t2 - a5\n 11063: a0 = a0 - a2\n 11066: a0 = a0 - a1\n 11069: a2 = s1 + 0x1878\n 11073: u64 [a2 + 1192] = 0x2\n 11078: a1 = t1 - a3\n 11081: a3 = a2 + 0x400\n 11085: u64 [a3 + 0xc8] = a1\n 11089: u64 [a3 + 0xd0] = a0\n 11093: u64 [a3 + 0xd8] = a5\n 11097: u64 [a3 + 0xe0] = a4\n 11101: u64 [a2 + 1216] = 0\n 11105: u64 [a2 + 1208] = 0\n 11109: u64 [a2 + 1200] = 0\n 11113: a0 = s1 + 0x1d20\n 11117: a1 = s1 + 0x1d40\n 11121: ra = 378, jump @22\n      : @400 [@dyn 189] (gas: 3)\n 11127: a0 = s1 + 0x1460\n 11131: a1 = 0x40\n 11134: ra = 380, jump @17\n      : @401 [@dyn 190] (gas: 7)\n 11140: a3 = s1 + 0x1078\n 11144: a4 = u64 [a3 + 0x400]\n 11148: a5 = a3 + 0x300\n 11152: a1 = u64 [a5 + 0xf8]\n 11156: a2 = u64 [a5 + 0xf0]\n 11160: a0 = u64 [a5 + 0xe8]\n 11164: t0 = 382, jump @948\n      : @402 [@dyn 191] (gas: 1)\n 11170: jump @404 if a1 == 0\n      : @403 (gas: 1)\n 11173: jump @680\n      : @404 (gas: 9)\n 11176: u64 [a3 + 992] = 0\n 11180: u64 [a3 + 984] = 0\n 11184: a1 = u64 [s1 + 0xf0]\n 11188: u64 [a3 + 0x3c8] = a1\n 11192: a1 = s1 + 0x1440\n 11196: a2 = u64 [s1 + 0xf8]\n 11200: u64 [a3 + 0x3d0] = a2\n 11204: u64 [s1 + 0xa8] = a0\n 11208: ra = 384, jump @19\n      : @405 [@dyn 192] (gas: 6)\n 11214: a0 = u64 [s1 + 0xe0]\n 11218: ra = 0x182\n 11222: ecalli 4 // 'caller'\n 11224: a2 = u64 [s1 + 0xe8]\n 11228: t0 = 0x184\n 11232: jump @933\n      : @406 [@dyn 193] (gas: 2)\n 11235: a2 = u64 [s1 + 0xe8]\n 11239: t0 = 388, jump @933\n      : @407 [@dyn 194] (gas: 40)\n 11245: t0 = a1 | a0\n 11248: a3 = a3 >> 0x20\n 11251: a1 = reverse a2\n 11253: a2 = a1 << 0x20\n 11256: t1 = a2 | a3\n 11259: a1 = a1 >> 0x20\n 11262: a0 = s1 + 0x1078\n 11266: u64 [a0 + 896] = 0\n 11270: a0 = s1 + 0x1078\n 11274: u64 [a0 + 888] = 0\n 11278: a0 = s1 + 0x1078\n 11282: u64 [a0 + 880] = 0\n 11286: a0 = s1 + 0x1078\n 11290: u64 [a0 + 872] = 0\n 11294: a0 = s1 + 0x1078\n 11298: u64 [a0 + 928] = 0\n 11302: a3 = u64 [0x20038]\n 11307: a4 = u64 [0x20040]\n 11312: a5 = u64 [0x20048]\n 11317: a0 = u64 [0x20050]\n 11322: a2 = s1 + 0x1078\n 11326: u64 [a2 + 0x3c0] = a3\n 11330: a2 = s1 + 0x1078\n 11334: u64 [a2 + 0x3b8] = a4\n 11338: a2 = s1 + 0x1078\n 11342: u64 [a2 + 0x3b0] = a5\n 11346: a2 = s1 + 0x1078\n 11350: u64 [a2 + 0x3a8] = a0\n 11354: a0 = s1 + 0x1078\n 11358: u64 [a0 + 0x398] = a1\n 11362: a0 = s1 + 0x1078\n 11366: u64 [a0 + 0x390] = t1\n 11370: a1 = 0x20\n 11373: a2 = s1 + 0x1420\n 11377: a3 = s1 + 0x1400\n 11381: a4 = s1 + 0x13e0\n 11385: a0 = s1 + 0x1078\n 11389: u64 [a0 + 0x388] = t0\n 11393: a0 = u64 [s1 + 0xa8]\n 11397: ra = 390, jump @24\n      : @408 [@dyn 195] (gas: 3)\n 11403: a0 = s1 + 0x13c0\n 11407: a1 = 0x40\n 11410: ra = 392, jump @17\n      : @409 [@dyn 196] (gas: 14)\n 11416: a2 = s1 + 0x1078\n 11420: t0 = u64 [a2 + 0x360]\n 11424: a1 = a2 + 0x300\n 11428: a3 = u64 [a1 + 0x58]\n 11431: a5 = u64 [a1 + 0x50]\n 11434: a0 = u64 [a1 + 0x48]\n 11437: a4 = a5 | t0\n 11440: a1 = a0 | a3\n 11443: a1 = a1 | a4\n 11446: a1 = a1 >> 0x20\n 11449: a4 = a4 | a3\n 11452: a4 = a4 << 0x20\n 11455: a1 = a1 | a4\n 11458: jump @411 if a1 == 0\n      : @410 (gas: 1)\n 11461: jump @680\n      : @411 (gas: 11)\n 11464: u64 [a2 + 824] = 0\n 11468: u64 [a2 + 816] = 0\n 11472: u64 [a2 + 808] = 0\n 11476: a4 = 0x14051b2e00000000\n 11486: a1 = s1 + 0x13a0\n 11490: u64 [a2 + 0x340] = a4\n 11494: u64 [s1 + 0xb8] = a3\n 11498: u64 [s1 + 0xb0] = t0\n 11502: u64 [s1 + 0xc0] = a5\n 11506: u64 [s1 + 0xc8] = a0\n 11510: ra = 394, jump @19\n      : @412 [@dyn 197] (gas: 11)\n 11516: a0 = u64 [s1 + 0xb8]\n 11520: a1 = u64 [s1 + 0xb0]\n 11524: a3 = a0 | a1\n 11527: a2 = 0x100000000\n 11537: a0 = 0xfffffffc\n 11547: a1 = u64 [s1 + 0xc8]\n 11551: a0 = a1 <u a0\n 11554: a1 = u64 [s1 + 0xc0]\n 11558: a0 = 0 if a1 != 0\n 11560: a0 = 0 if a3 != 0\n 11562: jump @414 if a0 != 0\n      : @413 (gas: 1)\n 11565: jump @680\n      : @414 (gas: 8)\n 11568: u64 [s1 + 0xa0] = a2\n 11572: a2 = 0x5f5e100\n 11578: a0 = u64 [s1 + 0xf0]\n 11582: a1 = u64 [s1 + 0xf8]\n 11586: u64 [s1 + 0xa8] = a3\n 11590: ra = 0x18c\n 11594: a4 = 0\n 11596: jump @974\n      : @415 [@dyn 198] (gas: 10)\n 11599: a2 = u64 [s1 + 0xc8]\n 11603: i32 a2 = a2 + 0x4\n 11606: a3 = s1 + 0x1078\n 11610: u64 [a3 + 800] = 0\n 11614: u64 [a3 + 792] = 0\n 11618: u64 [a3 + 0x310] = a1\n 11622: a1 = s1 + 0x1380\n 11626: u64 [a3 + 0x308] = a0\n 11630: a0 = a2\n 11632: ra = 398, jump @19\n      : @416 [@dyn 199] (gas: 9)\n 11638: a3 = u64 [s1 + 0xa8]\n 11642: a2 = u64 [s1 + 0xc8]\n 11646: a0 = u64 [s1 + 0xa0]\n 11650: a0 = a0 + 0xffffffffffffffdc\n 11653: a0 = a2 <u a0\n 11656: a1 = u64 [s1 + 0xc0]\n 11660: a0 = 0 if a1 != 0\n 11662: a0 = 0 if a3 != 0\n 11664: jump @418 if a0 != 0\n      : @417 (gas: 1)\n 11667: jump @680\n      : @418 (gas: 11)\n 11670: a0 = u64 [s1 + 0x70]\n 11673: a0 = a0 << 0x20\n 11676: a1 = a0 >> 0x20\n 11679: i32 a0 = a2 + 0x24\n 11682: a2 = s1 + 0x1078\n 11686: u64 [a2 + 768] = 0\n 11690: u64 [a2 + 760] = 0\n 11694: u64 [a2 + 0x2e8] = a1\n 11698: a1 = s1 + 0x1360\n 11702: u64 [a2 + 752] = 0\n 11706: ra = 400, jump @19\n      : @419 [@dyn 200] (gas: 5)\n 11712: a0 = s1 + 0x2000\n 11716: i32 a0 = a0 + 0xfffffffffffffd60\n 11720: a1 = 0x44\n 11723: ecalli 2 // 'call_data_load'\n 11725: fallthrough\n      : @420 (gas: 8)\n 11726: a5 = u64 [s1 + 0xc8]\n 11730: a0 = 0xffffffbc\n 11740: a0 = a5 <u a0\n 11743: a1 = u64 [s1 + 0xc0]\n 11747: a0 = 0 if a1 != 0\n 11749: a1 = u64 [s1 + 0xa8]\n 11753: a0 = 0 if a1 != 0\n 11755: jump @422 if a0 != 0\n      : @421 (gas: 1)\n 11758: jump @680\n      : @422 (gas: 14)\n 11761: a0 = s1 + 0x1878\n 11765: t0 = u64 [a0 + 0x4e8]\n 11769: a1 = u64 [a0 + 0x4f0]\n 11773: a3 = u64 [a0 + 0x4f8]\n 11777: a4 = u64 [a0 + 0x500]\n 11781: i32 a0 = a5 + 0x44\n 11784: a2 = s1 + 0x1078\n 11788: a5 = a2 + 0x200\n 11792: u64 [a5 + 0xe0] = a4\n 11796: u64 [a5 + 0xd8] = a3\n 11800: u64 [a5 + 0xd0] = a1\n 11804: a1 = s1 + 0x1340\n 11808: u64 [a2 + 0x2c8] = t0\n 11812: ra = 402, jump @19\n      : @423 [@dyn 201] (gas: 15)\n 11818: ecalli 9 // 'ref_time_left'\n 11820: a0 = u64 [0x20058]\n 11825: a1 = u64 [0x20060]\n 11830: a2 = u64 [s1 + 0xe8]\n 11834: u64 [a2 + 0x8] = a0\n 11837: u64 [a2] = a1\n 11839: u32 [a2 + 16] = 0x646c128f\n 11846: a0 = s1 + 0x1878\n 11850: u64 [a0 + 1312] = 0\n 11854: u64 [a0 + 1304] = 0\n 11858: u64 [a0 + 1296] = 0\n 11862: u64 [a0 + 1288] = 0\n 11866: a1 = 0x64\n 11869: a0 = u64 [s1 + 0xc8]\n 11873: ra = 404, jump @27\n      : @424 [@dyn 202] (gas: 4)\n 11879: u64 [s1 + 0xa8] = a0\n 11883: a0 = u64 [s1 + 0xc8]\n 11887: a1 = 0\n 11889: ra = 406, jump @27\n      : @425 [@dyn 203] (gas: 35)\n 11895: a2 = s1 + 0x1878\n 11899: u32 [a2 + 1320] = 0\n 11903: a3 = a2 + 0x500\n 11907: u64 [a3 + 96] = 0xffffffffffffffff\n 11911: u64 [a3 + 88] = 0xffffffffffffffff\n 11915: u64 [a3 + 80] = 0xffffffffffffffff\n 11919: u64 [a3 + 72] = 0xffffffffffffffff\n 11923: a1 = u64 [s1 + 0xe8]\n 11927: a1 = a1 << 0x20\n 11930: a2 = a1 >> 0x20\n 11933: a1 = 0x800000000\n 11943: u64 [s1 + 0xa0] = a2\n 11947: t0 = a2 | a1\n 11950: a1 = s1 + 0x1d80\n 11954: a1 = a1 << 0x20\n 11957: a1 = a1 >> 0x20\n 11960: a2 = s1 + 0x1dc0\n 11964: a2 = a2 << 0x20\n 11967: a3 = a2 | a1\n 11970: a1 = u64 [s1 + 0xa8]\n 11974: a1 = a1 << 0x20\n 11977: a1 = a1 >> 0x20\n 11980: a2 = 0x6400000000\n 11990: a4 = a1 | a2\n 11993: a0 = a0 << 0x20\n 11996: a0 = a0 >> 0x20\n 11999: a1 = s1 + 0x1da0\n 12003: a1 = a1 << 0x20\n 12006: a5 = a1 | a0\n 12009: a1 = 0xffffffffffffffff\n 12012: a2 = 0xffffffffffffffff\n 12015: u64 [s1 + 0xa8] = t0\n 12019: a0 = t0\n 12021: ecalli 0 // 'call'\n 12022: fallthrough\n      : @426 (gas: 1)\n 12023: jump @428 if a0 == 0\n      : @427 (gas: 1)\n 12026: jump @681\n      : @428 (gas: 2)\n 12029: ecalli 11 // 'return_data_size'\n 12031: fallthrough\n      : @429 (gas: 3)\n 12032: a1 = a0\n 12034: a0 = a0 >> 0x20\n 12037: jump @431 if a0 == 0\n      : @430 (gas: 1)\n 12040: jump @680\n      : @431 (gas: 5)\n 12043: i32 a0 = a1 + 0\n 12045: u64 [s1 + 0x90] = a0\n 12049: a0 = u64 [s1 + 0xc8]\n 12053: u64 [s1 + 0x98] = a1\n 12057: ra = 408, jump @27\n      : @432 [@dyn 204] (gas: 9)\n 12063: a1 = s1 + 0x1878\n 12067: a2 = u64 [s1 + 0x98]\n 12071: u32 [a1 + 0x588] = a2\n 12075: i32 a0 = a0 + 0\n 12077: a1 = s1 + 0x2000\n 12081: i32 a1 = a1 + 0xfffffffffffffe00\n 12085: a2 = 0\n 12087: ecalli 10 // 'return_data_copy'\n 12089: fallthrough\n      : @433 (gas: 4)\n 12090: a0 = s1 + 0x1878\n 12094: a0 = i32 [a0 + 0x588]\n 12098: a1 = u64 [s1 + 0x90]\n 12102: jump @435 if a0 >=u a1\n      : @434 (gas: 1)\n 12105: jump @680\n      : @435 (gas: 18)\n 12108: a3 = s1 + 0x1078\n 12112: u64 [a3 + 640] = 0\n 12116: u64 [a3 + 632] = 0\n 12120: u64 [a3 + 624] = 0\n 12124: a0 = u64 [s1 + 0x98]\n 12128: a4 = a3 + 0x200\n 12132: u64 [a4 + 0x68] = a0\n 12135: a0 = u64 [s1 + 0xc8]\n 12139: u64 [a4 + 0x88] = a0\n 12143: a0 = u64 [s1 + 0xc0]\n 12147: u64 [a4 + 0x90] = a0\n 12151: a0 = u64 [s1 + 0xb8]\n 12155: u64 [a4 + 0x98] = a0\n 12159: a0 = s1 + 0x1300\n 12163: a1 = s1 + 0x12e0\n 12167: a2 = u64 [s1 + 0xb0]\n 12171: u64 [a4 + 0xa0] = a2\n 12175: ra = 410, jump @852\n      : @436 [@dyn 205] (gas: 2)\n 12181: a1 = u64 [s1 + 0x98]\n 12185: jump @438 if a1 >u 31\n      : @437 (gas: 1)\n 12189: jump @824\n      : @438 (gas: 3)\n 12192: a0 = s1 + 0x12c0\n 12196: a1 = u64 [s1 + 0xc8]\n 12200: ra = 412, jump @17\n      : @439 [@dyn 206] (gas: 9)\n 12206: a1 = s1 + 0x1078\n 12210: t0 = u64 [a1 + 0x260]\n 12214: a0 = u64 [a1 + 0x258]\n 12218: a2 = u64 [a1 + 0x250]\n 12222: u64 [s1 + 0x80] = a0\n 12226: a3 = a0 | t0\n 12229: a4 = a2 <u 0x1\n 12232: a4 = 0 if a3 != 0\n 12234: jump @441 if a4 != 0\n      : @440 (gas: 1)\n 12237: jump @824\n      : @441 (gas: 55)\n 12240: a3 = u64 [a1 + 0x248]\n 12244: a5 = u64 [s1 + 0xc8]\n 12248: a1 = a3 + a5\n 12251: a3 = a1 <u a3\n 12254: ra = u64 [s1 + 0xc0]\n 12258: a4 = a2 + ra\n 12261: t1 = a4 + a3\n 12264: a4 = t1 ^ a2\n 12267: a0 = t1 <u a2\n 12270: a0 = a3 if a4 == 0\n 12273: u64 [s1 + 0x88] = a0\n 12277: a0 = u64 [s1 + 0x98]\n 12281: a0 = a0 + a5\n 12284: a4 = a0 <u a5\n 12287: a5 = a1 + 0x1f\n 12290: u64 [s1 + 0x90] = a1\n 12294: t2 = a5 <u a1\n 12297: u64 [s1 + 0x98] = a0\n 12301: a5 = a5 <u a0\n 12304: a2 = ra + a4\n 12307: a3 = t1 + t2\n 12310: a0 = a3 ^ a2\n 12313: a1 = a3 <u a2\n 12316: a5 = a1 if a0 != 0\n 12319: u64 [s1 + 0x78] = a2\n 12322: a0 = a2 <u ra\n 12325: a0 = a4 if a4 == 0\n 12328: a1 = u64 [s1 + 0xb8]\n 12332: ra = a1 + a0\n 12335: a0 = ra <u a1\n 12338: a4 = u64 [s1 + 0xb0]\n 12342: a2 = a4 + a0\n 12345: t0 = t0 + a4\n 12348: a4 = u64 [s1 + 0x80]\n 12352: a0 = a4 + a1\n 12355: a1 = a0 <u a4\n 12358: a1 = a1 + t0\n 12361: a4 = u64 [s1 + 0x88]\n 12365: a4 = a4 + a0\n 12368: a0 = a4 <u a0\n 12371: t0 = a1 + a0\n 12374: a0 = a3 <u t1\n 12377: a0 = t2 if t2 == 0\n 12380: a0 = a0 + a4\n 12383: a1 = a0 <u a4\n 12386: a1 = a1 + t0\n 12389: t2 = a1 ^ a2\n 12392: u64 [s1 + 0x88] = a2\n 12396: a1 = a1 <u a2\n 12399: a3 = a0 <u ra\n 12402: a1 = a3 if t2 == 0\n 12405: a0 = a0 ^ ra\n 12408: a0 = a0 | t2\n 12411: a5 = a1 if a0 != 0\n 12414: jump @443 if a5 != 0\n      : @442 (gas: 1)\n 12417: jump @824\n      : @443 (gas: 9)\n 12420: a2 = u64 [s1 + 0x90]\n 12424: a0 = a2 | a4\n 12427: a1 = t1 | t0\n 12430: a0 = a0 | a1\n 12433: a0 = a0 >> 0x20\n 12436: a1 = a1 | a4\n 12439: a1 = a1 << 0x20\n 12442: a0 = a0 | a1\n 12445: jump @445 if a0 == 0\n      : @444 (gas: 1)\n 12448: jump @680\n      : @445 (gas: 7)\n 12451: a1 = a2\n 12453: u64 [s1 + 0x20] = ra\n 12456: u64 [s1 + 0x28] = t0\n 12459: u64 [s1 + 0x30] = a4\n 12462: u64 [s1 + 0x38] = t1\n 12465: a0 = s1 + 0x12a0\n 12469: ra = 414, jump @17\n      : @446 [@dyn 207] (gas: 18)\n 12475: a4 = s1 + 0x1078\n 12479: a5 = a4 + 0x200\n 12483: a0 = u64 [a5 + 0x40]\n 12486: a1 = u64 [a5 + 0x38]\n 12489: a2 = u64 [a5 + 0x30]\n 12492: a3 = u64 [a5 + 0x28]\n 12495: u64 [s1 + 0x70] = a0\n 12498: u64 [a5] = a0\n 12500: u64 [s1 + 0x68] = a1\n 12503: a5 = a4 + 0x100\n 12507: u64 [a5 + 0xf8] = a1\n 12511: u64 [s1 + 0x60] = a2\n 12514: u64 [a5 + 0xf0] = a2\n 12518: a0 = s1 + 0x1280\n 12522: a1 = s1 + 0x1260\n 12526: u64 [s1 + 0x80] = a3\n 12530: u64 [a5 + 0xe8] = a3\n 12534: ra = 416, jump @862\n      : @447 [@dyn 208] (gas: 13)\n 12540: a1 = s1 + 0x1078\n 12544: a2 = a1 + 0x200\n 12548: a0 = u64 [a2 + 0x8]\n 12551: u64 [s1 + 0x58] = a0\n 12554: a0 = u64 [a2 + 0x10]\n 12557: u64 [s1 + 0x50] = a0\n 12560: a0 = u64 [a2 + 0x18]\n 12563: u64 [s1 + 0x48] = a0\n 12566: a0 = u64 [a2 + 0x20]\n 12569: u64 [s1 + 0x40] = a0\n 12572: a0 = s1 + 0x1240\n 12576: a1 = 0x40\n 12579: ra = 418, jump @17\n      : @448 [@dyn 209] (gas: 26)\n 12585: a0 = s1 + 0x1078\n 12589: a1 = u64 [a0 + 0x1e0]\n 12593: u64 [s1 + 0xb0] = a1\n 12597: a2 = u64 [a0 + 0x1d8]\n 12601: u64 [s1 + 0xb8] = a2\n 12605: a4 = u64 [a0 + 0x1d0]\n 12609: u64 [s1 + 0xc0] = a4\n 12613: a5 = u64 [a0 + 0x1c8]\n 12617: u64 [s1 + 0xc8] = a5\n 12621: a3 = u64 [s1 + 0x40]\n 12624: u64 [a0 + 0x1a0] = a3\n 12628: a3 = u64 [s1 + 0x48]\n 12631: u64 [a0 + 0x198] = a3\n 12635: a3 = u64 [s1 + 0x50]\n 12638: u64 [a0 + 0x190] = a3\n 12642: a3 = u64 [s1 + 0x58]\n 12645: u64 [a0 + 0x188] = a3\n 12649: a3 = a0 + 0x100\n 12653: u64 [a3 + 0xc0] = a1\n 12657: u64 [a3 + 0xb8] = a2\n 12661: u64 [a3 + 0xb0] = a4\n 12665: a2 = a0\n 12667: a0 = s1 + 0x1220\n 12671: a1 = s1 + 0x1200\n 12675: u64 [a2 + 0x1a8] = a5\n 12679: ra = 420, jump @852\n      : @449 [@dyn 210] (gas: 12)\n 12685: a0 = u64 [s1 + 0xc8]\n 12689: a1 = u64 [s1 + 0xb0]\n 12693: a2 = u64 [s1 + 0xc0]\n 12697: a2 = a2 | a1\n 12700: a3 = u64 [s1 + 0xb8]\n 12704: a1 = a0 | a3\n 12707: a1 = a1 | a2\n 12710: a1 = a1 >> 0x20\n 12713: a2 = a2 | a3\n 12716: a2 = a2 << 0x20\n 12719: a1 = a1 | a2\n 12722: jump @451 if a1 == 0\n      : @450 (gas: 1)\n 12725: jump @680\n      : @451 (gas: 12)\n 12728: a2 = s1 + 0x1078\n 12732: a1 = u64 [s1 + 0x80]\n 12736: a4 = a2 + 0x100\n 12740: u64 [a4 + 0x68] = a1\n 12743: a1 = u64 [s1 + 0x60]\n 12746: u64 [a4 + 0x70] = a1\n 12749: a1 = u64 [s1 + 0x68]\n 12752: u64 [a4 + 0x78] = a1\n 12755: a1 = s1 + 0x11e0\n 12759: a3 = u64 [s1 + 0x70]\n 12762: u64 [a4 + 0x80] = a3\n 12766: ra = 422, jump @19\n      : @452 [@dyn 211] (gas: 47)\n 12772: a0 = u64 [s1 + 0x90]\n 12776: a3 = u64 [s1 + 0x80]\n 12780: a3 = a3 + a0\n 12783: t2 = a0\n 12785: a2 = a3 <u a0\n 12788: a1 = u64 [s1 + 0x38]\n 12791: a0 = u64 [s1 + 0x60]\n 12794: a0 = a0 + a1\n 12797: a0 = a0 + a2\n 12800: a4 = a0 ^ a1\n 12803: t1 = a0 <u a1\n 12806: t1 = a2 if a4 == 0\n 12809: a2 = u64 [s1 + 0x30]\n 12812: ra = u64 [s1 + 0x68]\n 12815: ra = ra + a2\n 12818: a5 = a3 + 0x20\n 12821: t0 = a5 <u a3\n 12824: a4 = a0 + t0\n 12827: a1 = u64 [s1 + 0x98]\n 12831: a5 = a1 <u a5\n 12834: a1 = u64 [s1 + 0x78]\n 12837: a3 = a4 ^ a1\n 12840: a1 = a1 <u a4\n 12843: a5 = a1 if a3 != 0\n 12846: a1 = ra <u a2\n 12849: a3 = u64 [s1 + 0x28]\n 12852: a2 = u64 [s1 + 0x70]\n 12855: a3 = a3 + a2\n 12858: a1 = a1 + a3\n 12861: t1 = t1 + ra\n 12864: a2 = t1 <u ra\n 12867: a1 = a1 + a2\n 12870: a0 = a4 <u a0\n 12873: a0 = t0 if t0 == 0\n 12876: a0 = a0 + t1\n 12879: a2 = a0 <u t1\n 12882: a1 = a1 + a2\n 12885: a3 = u64 [s1 + 0x88]\n 12889: a2 = a1 ^ a3\n 12892: a1 = a3 <u a1\n 12895: a4 = u64 [s1 + 0x20]\n 12898: a3 = a4 <u a0\n 12901: a1 = a3 if a2 == 0\n 12904: a0 = a0 ^ a4\n 12907: a0 = a0 | a2\n 12910: a5 = a1 if a0 != 0\n 12913: jump @454 if a5 == 0\n      : @453 (gas: 1)\n 12916: jump @824\n      : @454 (gas: 10)\n 12919: a0 = u64 [s1 + 0xb8]\n 12923: a1 = u64 [s1 + 0xb0]\n 12927: a1 = a1 | a0\n 12930: a0 = 0xffffffe0\n 12940: a2 = u64 [s1 + 0xc8]\n 12944: a2 = a2 <u a0\n 12947: a3 = u64 [s1 + 0xc0]\n 12951: a2 = 0 if a3 != 0\n 12953: a2 = 0 if a1 != 0\n 12955: jump @456 if a2 != 0\n      : @455 (gas: 1)\n 12958: jump @680\n      : @456 (gas: 8)\n 12961: a1 = u64 [s1 + 0x30]\n 12964: a2 = u64 [s1 + 0x28]\n 12967: a1 = a1 | a2\n 12970: a0 = t2 <u a0\n 12973: a2 = u64 [s1 + 0x38]\n 12976: a0 = 0 if a2 != 0\n 12978: a0 = 0 if a1 != 0\n 12980: jump @458 if a0 != 0\n      : @457 (gas: 1)\n 12983: jump @680\n      : @458 (gas: 12)\n 12986: a2 = u64 [s1 + 0x68]\n 12989: a0 = u64 [s1 + 0x80]\n 12993: a0 = a0 | a2\n 12996: a1 = u64 [s1 + 0x70]\n 12999: a3 = u64 [s1 + 0x60]\n 13002: a1 = a1 | a3\n 13005: a0 = a0 | a1\n 13008: a0 = a0 >> 0x20\n 13011: a1 = a1 | a2\n 13014: a1 = a1 << 0x20\n 13017: a0 = a0 | a1\n 13020: jump @460 if a0 == 0\n      : @459 (gas: 1)\n 13023: jump @680\n      : @460 (gas: 6)\n 13026: a0 = u64 [s1 + 0xc8]\n 13030: i32 a0 = a0 + 0x20\n 13033: i32 a1 = t2 + 0x20\n 13036: u64 [s1 + 0x98] = a1\n 13040: a1 = u64 [s1 + 0x80]\n 13044: ra = 424, jump @27\n      : @461 [@dyn 212] (gas: 4)\n 13050: u64 [s1 + 0x90] = a0\n 13054: a0 = u64 [s1 + 0x98]\n 13058: a1 = u64 [s1 + 0x80]\n 13062: ra = 426, jump @27\n      : @462 [@dyn 213] (gas: 4)\n 13068: a1 = a0\n 13070: a0 = u64 [s1 + 0x90]\n 13074: a2 = u64 [s1 + 0x80]\n 13078: ra = 428, jump @0\n      : @463 [@dyn 214] (gas: 28)\n 13084: a0 = u64 [s1 + 0xc8]\n 13088: t0 = u64 [s1 + 0x80]\n 13092: t0 = t0 + a0\n 13095: a1 = t0 <u a0\n 13098: a4 = u64 [s1 + 0xc0]\n 13102: a2 = u64 [s1 + 0x60]\n 13105: a2 = a2 + a4\n 13108: a2 = a2 + a1\n 13111: a3 = a2 ^ a4\n 13114: a4 = a2 <u a4\n 13117: a4 = a1 if a3 == 0\n 13120: a3 = u64 [s1 + 0xb8]\n 13124: a1 = u64 [s1 + 0x68]\n 13127: a1 = a1 + a3\n 13130: a3 = a1 <u a3\n 13133: a5 = u64 [s1 + 0xb0]\n 13137: a0 = u64 [s1 + 0x70]\n 13140: a5 = a5 + a0\n 13143: a3 = a3 + a5\n 13146: a4 = a4 + a1\n 13149: a1 = a4 <u a1\n 13152: a1 = a1 + a3\n 13155: a1 = a1 | a4\n 13158: a3 = 0xffffffe0\n 13168: a3 = t0 <u a3\n 13171: a3 = 0 if a2 != 0\n 13173: a3 = 0 if a1 != 0\n 13175: jump @465 if a3 != 0\n      : @464 (gas: 1)\n 13178: jump @680\n      : @465 (gas: 8)\n 13181: i32 a0 = t0 + 0x20\n 13184: a2 = s1 + 0x1078\n 13188: u64 [a2 + 352] = 0\n 13192: u64 [a2 + 344] = 0\n 13196: u64 [a2 + 336] = 0\n 13200: a1 = s1 + 0x11c0\n 13204: u64 [a2 + 328] = 0\n 13208: ra = 430, jump @19\n      : @466 [@dyn 215] (gas: 3)\n 13214: a0 = s1 + 0x11a0\n 13218: a1 = 0x40\n 13221: ra = 432, jump @17\n      : @467 [@dyn 216] (gas: 18)\n 13227: a3 = s1 + 0x1078\n 13231: a4 = a3 + 0x100\n 13235: a0 = u64 [a4 + 0x40]\n 13238: a2 = u64 [a4 + 0x38]\n 13241: a1 = u64 [a4 + 0x30]\n 13244: a3 = u64 [a4 + 0x28]\n 13247: u64 [s1 + 0x90] = a0\n 13251: u64 [s1 + 0x80] = a1\n 13255: a0 = a0 | a1\n 13258: u64 [s1 + 0x98] = a3\n 13262: a1 = a3 | a2\n 13265: a1 = a1 | a0\n 13268: a1 = a1 >> 0x20\n 13271: u64 [s1 + 0x88] = a2\n 13275: a0 = a0 | a2\n 13278: a0 = a0 << 0x20\n 13281: a0 = a0 | a1\n 13284: jump @469 if a0 == 0\n      : @468 (gas: 1)\n 13287: jump @680\n      : @469 (gas: 9)\n 13290: a2 = s1 + 0x1078\n 13294: u64 [a2 + 280] = 0\n 13298: u64 [a2 + 272] = 0\n 13302: u64 [a2 + 264] = 0\n 13306: a0 = 0x47400c2300000000\n 13316: a1 = s1 + 0x1180\n 13320: u64 [a2 + 0x120] = a0\n 13324: a0 = u64 [s1 + 0x98]\n 13328: ra = 434, jump @19\n      : @470 [@dyn 217] (gas: 10)\n 13334: a0 = u64 [s1 + 0x90]\n 13338: a1 = u64 [s1 + 0x88]\n 13342: a0 = a0 | a1\n 13345: a1 = 0xfffffffc\n 13355: a2 = u64 [s1 + 0x98]\n 13359: a1 = a2 <u a1\n 13362: a2 = u64 [s1 + 0x80]\n 13366: a1 = 0 if a2 != 0\n 13368: a1 = 0 if a0 != 0\n 13370: jump @472 if a1 != 0\n      : @471 (gas: 1)\n 13373: jump @680\n      : @472 (gas: 9)\n 13376: a0 = u64 [s1 + 0x98]\n 13380: i32 a0 = a0 + 0x4\n 13383: a2 = s1 + 0x1078\n 13387: u64 [a2 + 256] = 0\n 13391: u64 [a2 + 248] = 0\n 13395: u64 [a2 + 232] = 0x20\n 13400: a1 = s1 + 0x1160\n 13404: u64 [a2 + 240] = 0\n 13408: ra = 436, jump @19\n      : @473 [@dyn 218] (gas: 3)\n 13414: a1 = u64 [s1 + 0x98]\n 13418: a0 = a1 + 0x24\n 13421: t0 = 438, jump @942\n      : @474 [@dyn 219] (gas: 18)\n 13427: a1 = s1 + 0x1078\n 13431: u64 [a1 + 0x90] = a2\n 13435: u64 [a1 + 0x88] = a0\n 13439: a0 = u64 [s1 + 0xb0]\n 13443: u64 [a1 + 0xc0] = a0\n 13447: a0 = u64 [s1 + 0xb8]\n 13451: u64 [a1 + 0xb8] = a0\n 13455: a0 = u64 [s1 + 0xc0]\n 13459: u64 [a1 + 0xb0] = a0\n 13463: a0 = u64 [s1 + 0xc8]\n 13467: u64 [a1 + 0xa8] = a0\n 13471: u64 [a1 + 0x98] = a3\n 13475: a3 = a1\n 13477: a0 = s1 + 0x1140\n 13481: a1 = s1 + 0x1120\n 13485: a2 = s1 + 0x1100\n 13489: u64 [a3 + 0xa0] = a4\n 13493: ra = 440, jump @825\n      : @475 [@dyn 220] (gas: 32)\n 13499: a1 = s1 + 0x1078\n 13503: a0 = u64 [a1 + 0xd0]\n 13507: t0 = u64 [a1 + 0xe0]\n 13511: t1 = u64 [a1 + 0xc8]\n 13515: a3 = u64 [a1 + 0xd8]\n 13519: a1 = u64 [s1 + 0x80]\n 13523: a4 = a0 ^ a1\n 13526: a5 = a0 <u a1\n 13529: ra = a1\n 13531: t2 = u64 [s1 + 0x98]\n 13535: a1 = t1 <u t2\n 13538: a5 = a1 if a4 == 0\n 13541: a2 = u64 [s1 + 0x88]\n 13545: a4 = a3 - a2\n 13548: a3 = a3 <u a2\n 13551: a2 = u64 [s1 + 0x90]\n 13555: a2 = t0 - a2\n 13558: a2 = a2 - a3\n 13561: a3 = a4 <u a5\n 13564: a2 = a2 - a3\n 13567: u64 [s1 + 0x70] = a2\n 13570: a4 = a4 - a5\n 13573: u64 [s1 + 0x68] = a4\n 13576: a0 = a0 - ra\n 13579: a0 = a0 - a1\n 13582: u64 [s1 + 0x60] = a0\n 13585: a0 = t1 - t2\n 13588: u64 [s1 + 0x78] = a0\n 13591: ra = 0x1ba\n 13595: ecalli 9 // 'ref_time_left'\n 13597: t0 = 0x1bc\n 13601: jump @946\n      : @476 [@dyn 221] (gas: 1)\n 13604: t0 = 444, jump @946\n      : @477 [@dyn 222] (gas: 17)\n 13610: u64 [a2 + 1472] = 0\n 13614: u64 [a2 + 1464] = 0\n 13618: u64 [a2 + 1456] = 0\n 13622: a0 = u64 [s1 + 0x78]\n 13625: a3 = a0\n 13627: a4 = u64 [s1 + 0x68]\n 13630: a0 = a0 | a4\n 13633: a1 = u64 [s1 + 0x70]\n 13636: a5 = u64 [s1 + 0x60]\n 13639: a1 = a1 | a5\n 13642: a0 = a0 | a1\n 13645: a0 = a0 >> 0x20\n 13648: a1 = a1 | a4\n 13651: a1 = a1 << 0x20\n 13654: a0 = a0 | a1\n 13657: u64 [a2 + 1448] = 0\n 13661: jump @479 if a0 == 0\n      : @478 (gas: 1)\n 13664: jump @680\n      : @479 (gas: 3)\n 13667: a0 = u64 [s1 + 0x98]\n 13671: a1 = a3\n 13673: ra = 446, jump @27\n      : @480 [@dyn 223] (gas: 4)\n 13679: u64 [s1 + 0x68] = a0\n 13682: a1 = 0x40\n 13685: a0 = u64 [s1 + 0x98]\n 13689: ra = 448, jump @27\n      : @481 [@dyn 224] (gas: 30)\n 13695: a2 = s1 + 0x1878\n 13699: u64 [s1 + 112] = 0x40\n 13703: u32 [a2 + 1480] = 0x40\n 13708: u64 [a2 + 1536] = 0xffffffffffffffff\n 13713: a3 = a2 + 0x500\n 13717: u64 [a3 + 248] = 0xffffffffffffffff\n 13722: u64 [a3 + 240] = 0xffffffffffffffff\n 13727: u64 [a3 + 232] = 0xffffffffffffffff\n 13732: a1 = s1 + 0x1e20\n 13736: a1 = a1 << 0x20\n 13739: a1 = a1 >> 0x20\n 13742: a2 = s1 + 0x1e60\n 13746: a2 = a2 << 0x20\n 13749: a3 = a2 | a1\n 13752: a1 = u64 [s1 + 0x68]\n 13755: a1 = a1 << 0x20\n 13758: a1 = a1 >> 0x20\n 13761: a4 = u64 [s1 + 0x78]\n 13764: a4 = a4 << 0x20\n 13767: a4 = a4 | a1\n 13770: a0 = a0 << 0x20\n 13773: a0 = a0 >> 0x20\n 13776: a1 = s1 + 0x1e40\n 13780: a1 = a1 << 0x20\n 13783: a5 = a1 | a0\n 13786: a1 = 0xffffffffffffffff\n 13789: a2 = 0xffffffffffffffff\n 13792: a0 = u64 [s1 + 0xa8]\n 13796: ecalli 0 // 'call'\n 13797: fallthrough\n      : @482 (gas: 1)\n 13798: jump @484 if a0 == 0\n      : @483 (gas: 1)\n 13801: jump @693\n      : @484 (gas: 2)\n 13804: ecalli 11 // 'return_data_size'\n 13806: fallthrough\n      : @485 (gas: 1)\n 13807: jump @487 if a0 >=u 64\n      : @486 (gas: 3)\n 13811: ecalli 11 // 'return_data_size'\n 13813: u64 [s1 + 0x70] = a0\n 13816: fallthrough\n      : @487 (gas: 18)\n 13817: a2 = s1 + 0x1078\n 13821: a0 = u64 [s1 + 0x70]\n 13824: u64 [a2 + 0x28] = a0\n 13827: a0 = u64 [s1 + 0x98]\n 13831: u64 [a2 + 0x48] = a0\n 13834: u64 [s1 + 168] = 0\n 13838: u64 [a2 + 48] = 0\n 13841: a0 = u64 [s1 + 0x80]\n 13845: u64 [a2 + 0x50] = a0\n 13848: u64 [a2 + 56] = 0\n 13851: a0 = u64 [s1 + 0x88]\n 13855: u64 [a2 + 0x58] = a0\n 13858: u64 [a2 + 64] = 0\n 13861: a0 = s1 + 0x10c0\n 13865: a1 = s1 + 0x10a0\n 13869: a3 = u64 [s1 + 0x90]\n 13873: u64 [a2 + 0x60] = a3\n 13876: ra = 450, jump @852\n      : @488 [@dyn 225] (gas: 12)\n 13882: a3 = u64 [s1 + 0xa8]\n 13886: a0 = a3 >u 0\n 13888: a1 = u64 [s1 + 0x70]\n 13891: a1 = a1 <u 0x40\n 13894: a1 = a1 ^ 0x1\n 13897: a1 = a0 if a3 != 0\n 13900: a0 = a3 >u 0\n 13902: a2 = a3 >u 0\n 13904: a2 = a0 if a3 == 0\n 13907: a0 = a3 | a3\n 13910: a2 = a1 if a0 == 0\n 13913: jump @490 if a2 != 0\n      : @489 (gas: 1)\n 13916: jump @820\n      : @490 (gas: 3)\n 13919: a0 = s1 + 0x1080\n 13923: a1 = 0x40\n 13926: ra = 452, jump @17\n      : @491 [@dyn 226] (gas: 19)\n 13932: a1 = s1 + 0x1078\n 13936: a0 = u64 [a1 + 0x20]\n 13939: a5 = u64 [a1 + 0x18]\n 13942: a3 = u64 [a1 + 0x10]\n 13945: a2 = u64 [a1 + 0x8]\n 13948: a4 = a0 >u 0\n 13950: a1 = a5 >u 0\n 13952: a1 = a4 if a0 != 0\n 13955: a4 = a3 >u 0\n 13957: u64 [s1 + 0xa8] = a2\n 13961: a2 = a2 <u 0xffffffffffffffc0\n 13964: a2 = a2 ^ 0x1\n 13967: u64 [s1 + 0x78] = a3\n 13970: a2 = a4 if a3 != 0\n 13973: t0 = a0\n 13975: a0 = a0 | a5\n 13978: u64 [s1 + 0x60] = a0\n 13981: a2 = a1 if a0 != 0\n 13984: jump @493 if a2 == 0\n      : @492 (gas: 1)\n 13987: jump @821\n      : @493 (gas: 23)\n 13990: a1 = u64 [s1 + 0xa8]\n 13994: a0 = a1 + 0x40\n 13997: a1 = a0 <u a1\n 14000: a3 = u64 [s1 + 0x78]\n 14003: a2 = a3 + a1\n 14006: a3 = a2 <u a3\n 14009: a3 = a1 if a1 == 0\n 14012: u64 [s1 + 0x70] = a5\n 14015: a3 = a3 + a5\n 14018: a1 = a3 <u a5\n 14021: u64 [s1 + 0x68] = t0\n 14024: a4 = t0 + a1\n 14027: a1 = s1 + 0x7ff\n 14031: a1 = a1 + 0x79\n 14034: a5 = a1 + 0x700\n 14038: u64 [a5 + 0xe8] = a0\n 14042: u64 [a5 + 0xf0] = a2\n 14046: u64 [a5 + 0xf8] = a3\n 14050: a0 = 0x40\n 14053: a1 = s1 + 0x1060\n 14057: a2 = s1 + 0x1078\n 14061: u64 [a2] = a4\n 14063: ra = 454, jump @19\n      : @494 [@dyn 227] (gas: 15)\n 14069: a0 = u64 [s1 + 0x90]\n 14073: a1 = s1 + 0x7ff\n 14077: a1 = a1 + 0x79\n 14080: a2 = a1 + 0x700\n 14084: u64 [a2 + 0xc0] = a0\n 14088: a0 = u64 [s1 + 0x88]\n 14092: u64 [a2 + 0xb8] = a0\n 14096: a0 = u64 [s1 + 0x80]\n 14100: u64 [a2 + 0xb0] = a0\n 14104: a3 = a1\n 14106: a0 = s1 + 0x1040\n 14110: a1 = s1 + 0x1020\n 14114: a2 = u64 [s1 + 0x98]\n 14118: u64 [a3 + 0x7a8] = a2\n 14122: ra = 456, jump @870\n      : @495 [@dyn 228] (gas: 12)\n 14128: a0 = u64 [s1 + 0xa8]\n 14132: a2 = u64 [s1 + 0x70]\n 14135: a0 = a0 | a2\n 14138: a1 = u64 [s1 + 0x78]\n 14141: a3 = u64 [s1 + 0x68]\n 14144: a1 = a1 | a3\n 14147: a0 = a0 | a1\n 14150: a0 = a0 >> 0x20\n 14153: a1 = a1 | a2\n 14156: a1 = a1 << 0x20\n 14159: a0 = a0 | a1\n 14162: jump @497 if a0 == 0\n      : @496 (gas: 1)\n 14165: jump @680\n      : @497 (gas: 14)\n 14168: a4 = s1 + 0x7ff\n 14172: a4 = a4 + 0x79\n 14175: a5 = a4 + 0x700\n 14179: a0 = u64 [a5 + 0xe0]\n 14183: a1 = u64 [a5 + 0xd8]\n 14187: a2 = u64 [a5 + 0xd0]\n 14191: a3 = u64 [a5 + 0xc8]\n 14195: u64 [a5 + 0x88] = a3\n 14199: u64 [a5 + 0x90] = a2\n 14203: u64 [a5 + 0x98] = a1\n 14207: a1 = s1 + 0x1000\n 14211: u64 [a5 + 0xa0] = a0\n 14215: a0 = u64 [s1 + 0xa8]\n 14219: ra = 458, jump @19\n      : @498 [@dyn 229] (gas: 3)\n 14225: a1 = u64 [s1 + 0x98]\n 14229: a0 = a1 + 0x20\n 14232: t0 = 460, jump @942\n      : @499 [@dyn 230] (gas: 13)\n 14238: a1 = s1 + 0x7ff\n 14242: a1 = a1 + 0x79\n 14245: a5 = a1 + 0x700\n 14249: u64 [a5 + 0x58] = a3\n 14252: u64 [a5 + 0x50] = a2\n 14255: u64 [a5 + 0x48] = a0\n 14258: a2 = a1\n 14260: a0 = s1 + 0x7ff\n 14264: a0 = a0 + 0x7e1\n 14268: a1 = s1 + 0x7ff\n 14272: a1 = a1 + 0x7c1\n 14276: u64 [a2 + 0x760] = a4\n 14280: ra = 462, jump @870\n      : @500 [@dyn 231] (gas: 8)\n 14286: a0 = 0xffffffe0\n 14296: a1 = u64 [s1 + 0xa8]\n 14300: a0 = a1 <u a0\n 14303: a1 = u64 [s1 + 0x78]\n 14306: a0 = 0 if a1 != 0\n 14308: a1 = u64 [s1 + 0x60]\n 14311: a0 = 0 if a1 != 0\n 14313: jump @502 if a0 != 0\n      : @501 (gas: 1)\n 14316: jump @680\n      : @502 (gas: 17)\n 14319: a4 = s1 + 0x7ff\n 14323: a4 = a4 + 0x79\n 14326: t0 = u64 [a4 + 0x780]\n 14330: a1 = u64 [a4 + 0x778]\n 14334: a2 = u64 [a4 + 0x770]\n 14338: a3 = u64 [a4 + 0x768]\n 14342: a5 = u64 [s1 + 0xa8]\n 14346: i32 a0 = a5 + 0x20\n 14349: a5 = a4 + 0x700\n 14353: u64 [a5 + 0x28] = a3\n 14356: u64 [a5 + 0x30] = a2\n 14359: u64 [a5 + 0x38] = a1\n 14362: a1 = s1 + 0x7ff\n 14366: a1 = a1 + 0x7a1\n 14370: u64 [a4 + 0x740] = t0\n 14374: u64 [s1 + 0x88] = a0\n 14378: ra = 464, jump @19\n      : @503 [@dyn 232] (gas: 7)\n 14384: a1 = u64 [s1 + 0xe8]\n 14388: u64 [a1 + 8] = 0\n 14391: u64 [a1 + 0] = 0\n 14393: u32 [a1 + 16] = 0xa00\n 14398: a0 = u64 [s1 + 0xe0]\n 14402: ecalli 5 // 'code_size'\n 14404: fallthrough\n      : @504 (gas: 1)\n 14405: jump @506 if a0 != 0\n      : @505 (gas: 1)\n 14408: jump @824\n      : @506 (gas: 4)\n 14411: a0 = s1 + 0x7ff\n 14415: a0 = a0 + 0x781\n 14419: a1 = 0x40\n 14422: ra = 466, jump @17\n      : @507 [@dyn 233] (gas: 19)\n 14428: a0 = s1 + 0x7ff\n 14432: a0 = a0 + 0x79\n 14435: a5 = a0 + 0x700\n 14439: a1 = u64 [a5 + 0x20]\n 14442: a2 = u64 [a5 + 0x18]\n 14445: a3 = u64 [a5 + 0x10]\n 14448: a4 = u64 [a5 + 0x8]\n 14451: u64 [s1 + 0x98] = a1\n 14455: u64 [s1 + 0xd0] = a3\n 14459: a0 = a3 | a1\n 14462: u64 [s1 + 0xd8] = a4\n 14466: a1 = a4 | a2\n 14469: a1 = a1 | a0\n 14472: a1 = a1 >> 0x20\n 14475: u64 [s1 + 0x90] = a2\n 14479: a0 = a0 | a2\n 14482: a0 = a0 << 0x20\n 14485: a0 = a0 | a1\n 14488: jump @509 if a0 == 0\n      : @508 (gas: 1)\n 14491: jump @680\n      : @509 (gas: 11)\n 14494: a2 = s1 + 0x7ff\n 14498: a2 = a2 + 0x79\n 14501: u64 [a2 + 1784] = 0\n 14505: u64 [a2 + 1776] = 0\n 14509: u64 [a2 + 1768] = 0\n 14513: a0 = 0xd3b7e04d00000000\n 14523: a1 = s1 + 0x7ff\n 14527: a1 = a1 + 0x761\n 14531: u64 [a2 + 0x700] = a0\n 14535: a0 = u64 [s1 + 0xd8]\n 14539: ra = 468, jump @19\n      : @510 [@dyn 234] (gas: 13)\n 14545: a0 = u64 [s1 + 0x98]\n 14549: a1 = u64 [s1 + 0x90]\n 14553: a2 = a1 | a0\n 14556: a0 = 0x100000000\n 14566: u64 [s1 + 0x78] = a0\n 14569: a0 = 0xfffffffc\n 14579: a1 = u64 [s1 + 0xd8]\n 14583: a0 = a1 <u a0\n 14586: a1 = u64 [s1 + 0xd0]\n 14590: a0 = 0 if a1 != 0\n 14592: u64 [s1 + 0x80] = a2\n 14596: a0 = 0 if a2 != 0\n 14598: jump @512 if a0 != 0\n      : @511 (gas: 1)\n 14601: jump @680\n      : @512 (gas: 11)\n 14604: a0 = u64 [s1 + 0xd8]\n 14608: i32 a0 = a0 + 0x4\n 14611: a2 = s1 + 0x7ff\n 14615: a2 = a2 + 0x79\n 14618: u64 [a2 + 1760] = 0\n 14622: u64 [a2 + 1752] = 0\n 14626: u64 [a2 + 1736] = 0x60\n 14631: a1 = s1 + 0x7ff\n 14635: a1 = a1 + 0x741\n 14639: u64 [a2 + 1744] = 0\n 14643: ra = 470, jump @19\n      : @513 [@dyn 235] (gas: 35)\n 14649: a1 = u64 [s1 + 0xd8]\n 14653: a0 = a1 + 0x64\n 14656: a1 = a0 <u a1\n 14659: a3 = u64 [s1 + 0xd0]\n 14663: a2 = a3 + a1\n 14666: a3 = a2 <u a3\n 14669: a3 = a1 if a1 == 0\n 14672: a1 = u64 [s1 + 0x90]\n 14676: a3 = a3 + a1\n 14679: a1 = a3 <u a1\n 14682: a4 = u64 [s1 + 0x98]\n 14686: a4 = a4 + a1\n 14689: a1 = s1 + 0x7ff\n 14693: a1 = a1 + 0x79\n 14696: a5 = a1 + 0x600\n 14700: u64 [a5 + 0x70] = a2\n 14703: u64 [a5 + 0x68] = a0\n 14706: a0 = u64 [s1 + 0xb0]\n 14710: u64 [a5 + 0xa0] = a0\n 14714: a0 = u64 [s1 + 0xb8]\n 14718: u64 [a5 + 0x98] = a0\n 14722: a0 = u64 [s1 + 0xc0]\n 14726: u64 [a5 + 0x90] = a0\n 14730: a0 = u64 [s1 + 0xc8]\n 14734: u64 [a5 + 0x88] = a0\n 14738: u64 [a5 + 0x78] = a3\n 14741: a3 = a1\n 14743: a0 = s1 + 0x7ff\n 14747: a0 = a0 + 0x721\n 14751: a1 = s1 + 0x7ff\n 14755: a1 = a1 + 0x701\n 14759: a2 = s1 + 0x7ff\n 14763: a2 = a2 + 0x6e1\n 14767: u64 [a3 + 0x680] = a4\n 14771: ra = 472, jump @825\n      : @514 [@dyn 236] (gas: 15)\n 14777: a1 = s1 + 0x7ff\n 14781: a1 = a1 + 0x79\n 14784: a2 = a1 + 0x600\n 14788: a0 = u64 [a2 + 0xc0]\n 14792: u64 [s1 + 0xb8] = a0\n 14796: a0 = u64 [a2 + 0xb8]\n 14800: u64 [s1 + 0xb0] = a0\n 14804: a0 = u64 [a2 + 0xb0]\n 14808: u64 [s1 + 0xc0] = a0\n 14812: a0 = u64 [a2 + 0xa8]\n 14816: u64 [s1 + 0xc8] = a0\n 14820: a0 = s1 + 0x7ff\n 14824: a0 = a0 + 0x6c1\n 14828: a1 = u64 [s1 + 0xa8]\n 14832: ra = 474, jump @17\n      : @515 [@dyn 237] (gas: 9)\n 14838: a0 = u64 [s1 + 0x78]\n 14841: a0 = a0 + 0xffffffffffffffdc\n 14844: a1 = u64 [s1 + 0xd8]\n 14848: a0 = a1 <u a0\n 14851: a1 = u64 [s1 + 0xd0]\n 14855: a0 = 0 if a1 != 0\n 14857: a1 = u64 [s1 + 0x80]\n 14861: a0 = 0 if a1 != 0\n 14863: jump @517 if a0 != 0\n      : @516 (gas: 1)\n 14866: jump @680\n      : @517 (gas: 12)\n 14869: a2 = s1 + 0x7ff\n 14873: a2 = a2 + 0x79\n 14876: a1 = u64 [a2 + 0x648]\n 14880: a0 = u64 [s1 + 0xd8]\n 14884: i32 a0 = a0 + 0x24\n 14887: u64 [a2 + 1600] = 0\n 14891: u64 [a2 + 1592] = 0\n 14895: u64 [a2 + 0x628] = a1\n 14899: a1 = s1 + 0x7ff\n 14903: a1 = a1 + 0x6a1\n 14907: u64 [a2 + 1584] = 0\n 14911: ra = 476, jump @19\n      : @518 [@dyn 238] (gas: 4)\n 14917: a0 = s1 + 0x7ff\n 14921: a0 = a0 + 0x681\n 14925: a1 = u64 [s1 + 0x88]\n 14929: ra = 478, jump @17\n      : @519 [@dyn 239] (gas: 8)\n 14935: a0 = 0xffffffbc\n 14945: a1 = u64 [s1 + 0xd8]\n 14949: a0 = a1 <u a0\n 14952: a1 = u64 [s1 + 0xd0]\n 14956: a0 = 0 if a1 != 0\n 14958: a1 = u64 [s1 + 0x80]\n 14962: a0 = 0 if a1 != 0\n 14964: jump @521 if a0 != 0\n      : @520 (gas: 1)\n 14967: jump @680\n      : @521 (gas: 13)\n 14970: a2 = s1 + 0x7ff\n 14974: a2 = a2 + 0x79\n 14977: a0 = u64 [a2 + 0x608]\n 14981: a1 = a0 & 0xffffffffffffffff\n 14984: a0 = u64 [s1 + 0xd8]\n 14988: i32 a0 = a0 + 0x44\n 14991: u64 [a2 + 1536] = 0\n 14995: u64 [a2 + 1528] = 0\n 14999: u64 [a2 + 0x5e8] = a1\n 15003: a1 = s1 + 0x7ff\n 15007: a1 = a1 + 0x661\n 15011: u64 [a2 + 1520] = 0\n 15015: ra = 480, jump @19\n      : @522 [@dyn 240] (gas: 31)\n 15021: t0 = u64 [s1 + 0xc8]\n 15025: ra = u64 [s1 + 0xd8]\n 15029: t1 = t0 <u ra\n 15032: a5 = u64 [s1 + 0xd0]\n 15036: a1 = u64 [s1 + 0xc0]\n 15040: a3 = a1 ^ a5\n 15043: a2 = a1 <u a5\n 15046: a2 = t1 if a3 == 0\n 15049: a3 = u64 [s1 + 0x90]\n 15053: a4 = u64 [s1 + 0xb0]\n 15057: a0 = a4 - a3\n 15060: t2 = a4 <u a3\n 15063: a4 = u64 [s1 + 0x98]\n 15067: a3 = u64 [s1 + 0xb8]\n 15071: a4 = a3 - a4\n 15074: a4 = a4 - t2\n 15077: a3 = a0 <u a2\n 15080: a4 = a4 - a3\n 15083: u64 [s1 + 0xb8] = a4\n 15087: a0 = a0 - a2\n 15090: u64 [s1 + 0xb0] = a0\n 15094: a1 = a1 - a5\n 15097: a0 = a1 - t1\n 15100: u64 [s1 + 0xc0] = a0\n 15104: a0 = t0 - ra\n 15107: u64 [s1 + 0xc8] = a0\n 15111: ra = 0x1e2\n 15115: ecalli 9 // 'ref_time_left'\n 15117: u64 [s1 + 0xa8] = a0\n 15121: t0 = 0x1e4\n 15125: jump @946\n      : @523 [@dyn 241] (gas: 2)\n 15128: u64 [s1 + 0xa8] = a0\n 15132: t0 = 484, jump @946\n      : @524 [@dyn 242] (gas: 17)\n 15138: u64 [a2 + 1600] = 0\n 15142: u64 [a2 + 1592] = 0\n 15146: u64 [a2 + 1584] = 0\n 15150: a0 = u64 [s1 + 0xc8]\n 15154: a3 = a0\n 15156: a4 = u64 [s1 + 0xb0]\n 15160: a0 = a0 | a4\n 15163: a1 = u64 [s1 + 0xb8]\n 15167: a5 = u64 [s1 + 0xc0]\n 15171: a1 = a1 | a5\n 15174: a0 = a0 | a1\n 15177: a0 = a0 >> 0x20\n 15180: a1 = a1 | a4\n 15183: a1 = a1 << 0x20\n 15186: a0 = a0 | a1\n 15189: u64 [a2 + 1576] = 0\n 15193: jump @526 if a0 == 0\n      : @525 (gas: 1)\n 15196: jump @680\n      : @526 (gas: 5)\n 15199: a1 = a3\n 15201: i32 a0 = a3 + 0\n 15203: u64 [s1 + 0xb8] = a0\n 15207: a0 = u64 [s1 + 0xd8]\n 15211: ra = 486, jump @27\n      : @527 [@dyn 243] (gas: 4)\n 15217: u64 [s1 + 0xc0] = a0\n 15221: a0 = u64 [s1 + 0xd8]\n 15225: a1 = 0\n 15227: ra = 488, jump @27\n      : @528 [@dyn 244] (gas: 38)\n 15233: a3 = s1 + 0x1878\n 15237: u32 [a3 + 1608] = 0\n 15241: a1 = u64 [s1 + 0xb8]\n 15245: a1 = a1 >u 0\n 15247: a4 = u64 [s1 + 0xa8]\n 15251: a2 = a4 >u 0x8fc\n 15255: a1 = a1 | a2\n 15258: a2 = -a1\n 15260: a4 = a3 + 0x600\n 15264: u64 [a4 + 0x80] = a2\n 15268: u64 [a4 + 0x78] = a2\n 15271: u64 [a4 + 0x70] = a2\n 15274: u64 [a4 + 0x68] = a2\n 15277: a1 = a1 << 0x23\n 15280: a2 = u64 [s1 + 0xa0]\n 15284: t0 = a1 | a2\n 15287: a1 = s1 + 0x1ea0\n 15291: a1 = a1 << 0x20\n 15294: a1 = a1 >> 0x20\n 15297: a2 = s1 + 0x1ee0\n 15301: a2 = a2 << 0x20\n 15304: a3 = a2 | a1\n 15307: a1 = u64 [s1 + 0xc0]\n 15311: a1 = a1 << 0x20\n 15314: a1 = a1 >> 0x20\n 15317: a4 = u64 [s1 + 0xc8]\n 15321: a4 = a4 << 0x20\n 15324: a4 = a4 | a1\n 15327: a0 = a0 << 0x20\n 15330: a0 = a0 >> 0x20\n 15333: a1 = s1 + 0x1ec0\n 15337: a1 = a1 << 0x20\n 15340: a5 = a1 | a0\n 15343: a1 = 0xffffffffffffffff\n 15346: a2 = 0xffffffffffffffff\n 15349: a0 = t0\n 15351: ecalli 0 // 'call'\n 15352: fallthrough\n      : @529 (gas: 1)\n 15353: jump @531 if a0 == 0\n      : @530 (gas: 1)\n 15356: jump @700\n      : @531 (gas: 21)\n 15359: a1 = s1 + 0x7ff\n 15363: a1 = a1 + 0x79\n 15366: u64 [a1 + 1088] = 0\n 15370: u64 [a1 + 1080] = 0\n 15374: u64 [a1 + 1072] = 0\n 15378: u64 [a1 + 1064] = 0\n 15382: a0 = u64 [s1 + 0xd8]\n 15386: a2 = a1 + 0x400\n 15390: u64 [a2 + 0x48] = a0\n 15393: a0 = u64 [s1 + 0xd0]\n 15397: u64 [a2 + 0x50] = a0\n 15400: a0 = u64 [s1 + 0x90]\n 15404: u64 [a2 + 0x58] = a0\n 15407: a3 = a1\n 15409: a0 = s1 + 0x7ff\n 15413: a0 = a0 + 0x4c1\n 15417: a1 = s1 + 0x7ff\n 15421: a1 = a1 + 0x4a1\n 15425: a2 = u64 [s1 + 0x98]\n 15429: u64 [a3 + 0x460] = a2\n 15433: ra = 490, jump @852\n      : @532 [@dyn 245] (gas: 4)\n 15439: a0 = s1 + 0x7ff\n 15443: a0 = a0 + 0x481\n 15447: a1 = 0x40\n 15450: ra = 492, jump @17\n      : @533 [@dyn 246] (gas: 8)\n 15456: a3 = s1 + 0x7ff\n 15460: a3 = a3 + 0x79\n 15463: a5 = a3 + 0x400\n 15467: a0 = u64 [a5 + 0x20]\n 15470: a1 = u64 [a5 + 0x18]\n 15473: a2 = u64 [a5 + 0x10]\n 15476: a4 = u64 [a5 + 0x8]\n 15479: t0 = 494, jump @950\n      : @534 [@dyn 247] (gas: 1)\n 15485: jump @536 if a0 == 0\n      : @535 (gas: 1)\n 15488: jump @680\n      : @536 (gas: 14)\n 15491: a3 = a4\n 15493: a2 = s1 + 0x7ff\n 15497: a2 = a2 + 0x79\n 15500: u64 [a2 + 1024] = 0\n 15504: u64 [a2 + 1016] = 0\n 15508: a0 = u64 [s1 + 0xf0]\n 15512: u64 [a2 + 0x3e8] = a0\n 15516: a1 = s1 + 0x7ff\n 15520: a1 = a1 + 0x461\n 15524: a0 = u64 [s1 + 0xf8]\n 15528: u64 [a2 + 0x3f0] = a0\n 15532: a0 = a4\n 15534: u64 [s1 + 0xd8] = a3\n 15538: ra = 496, jump @19\n      : @537 [@dyn 248] (gas: 6)\n 15544: a0 = u64 [s1 + 0xe0]\n 15548: ra = 0x1f2\n 15552: ecalli 4 // 'caller'\n 15554: a2 = u64 [s1 + 0xe8]\n 15558: t0 = 0x1f4\n 15562: jump @933\n      : @538 [@dyn 249] (gas: 2)\n 15565: a2 = u64 [s1 + 0xe8]\n 15569: t0 = 500, jump @933\n      : @539 [@dyn 250] (gas: 53)\n 15575: t0 = a1 | a0\n 15578: a3 = a3 >> 0x20\n 15581: a1 = reverse a2\n 15583: a2 = a1 << 0x20\n 15586: a2 = a2 | a3\n 15589: a1 = a1 >> 0x20\n 15592: a3 = u64 [0x20068]\n 15597: a0 = s1 + 0x7ff\n 15601: a0 = a0 + 0x79\n 15604: u64 [a0 + 0x3e0] = a3\n 15608: a3 = u64 [0x20070]\n 15613: a4 = u64 [0x20078]\n 15618: a5 = u64 [0x20080]\n 15623: u64 [a0 + 0x3d8] = a3\n 15627: a3 = a0 + 0x300\n 15631: u64 [a3 + 0xd0] = a4\n 15635: u64 [a0 + 960] = 0\n 15639: u64 [a3 + 0xc8] = a5\n 15643: u64 [a3 + 0xb8] = a1\n 15647: u64 [a3 + 0xb0] = a2\n 15651: a1 = 0x20\n 15654: a2 = s1 + 0x7ff\n 15658: a2 = a2 + 0x441\n 15662: a3 = s1 + 0x7ff\n 15666: a3 = a3 + 0x421\n 15670: u64 [a0 + 0x3a8] = t0\n 15674: a0 = u64 [s1 + 0xd8]\n 15678: ra = 0x1f6\n 15682: sp = sp + 0xffffffffffffff60\n 15686: u64 [sp + 0x98] = ra\n 15690: u64 [sp + 0x90] = s0\n 15694: u64 [sp + 0x88] = s1\n 15698: s0 = sp + 0xa0\n 15702: sp = sp & 0xffffffffffffffe0\n 15705: a4 = u64 [a3]\n 15707: u64 [sp + 0x38] = a4\n 15710: a4 = u64 [a3 + 0x8]\n 15713: u64 [sp + 0x30] = a4\n 15716: a4 = u64 [a3 + 0x10]\n 15719: u64 [sp + 0x28] = a4\n 15722: a3 = u64 [a3 + 0x18]\n 15725: u64 [sp + 0x20] = a3\n 15728: a3 = u64 [a2]\n 15730: u64 [sp + 0x18] = a3\n 15733: a3 = u64 [a2 + 0x8]\n 15736: u64 [sp + 0x10] = a3\n 15739: a3 = u64 [a2 + 0x10]\n 15742: u64 [sp + 0x8] = a3\n 15745: a2 = u64 [a2 + 0x18]\n 15748: u64 [sp] = a2\n 15750: s1 = a1\n 15752: ra = 0x6\n 15755: jump @27\n      : @540 [@dyn 251] (gas: 3)\n 15758: a0 = 0\n 15760: a1 = 0\n 15762: ra = 504, jump @27\n      : @541 [@dyn 252] (gas: 5)\n 15768: i32 a1 = a0 + 0\n 15770: a0 = 0\n 15772: a2 = 0\n 15774: ecalli 12 // 'seal_return'\n 15776: jump @727\n      : @542 (gas: 7)\n 15779: u64 [s1 + 0xb0] = t0\n 15783: u64 [s1 + 0xb8] = a5\n 15787: u64 [s1 + 0xc0] = a4\n 15791: u64 [s1 + 0xc8] = a3\n 15795: a0 = u64 [s1 + 0xf8]\n 15799: a0 = i32 [a0]\n 15801: jump @544 if a0 >u 3\n      : @543 (gas: 1)\n 15805: jump @767\n      : @544 (gas: 10)\n 15808: u64 [a2 + 480] = 0\n 15812: u64 [a2 + 472] = 0\n 15816: u64 [a2 + 464] = 0\n 15820: u64 [a2 + 456] = 0\n 15824: a0 = s1 + 0x2000\n 15828: i32 a0 = a0 + 0xfffffffffffffa40\n 15832: ra = 0x1fa\n 15836: ecalli 15 // 'value_transferred'\n 15838: t0 = 0x1fc\n 15842: jump @962\n      : @545 [@dyn 253] (gas: 1)\n 15845: t0 = 508, jump @962\n      : @546 [@dyn 254] (gas: 8)\n 15851: a0 = u64 [a4 + 0xd8]\n 15855: a1 = u64 [a4 + 0xe0]\n 15859: a2 = u64 [a4 + 0xd0]\n 15863: a3 = u64 [a4 + 0xc8]\n 15867: a1 = a1 | a2\n 15870: a0 = a0 | a3\n 15873: a0 = a0 | a1\n 15876: jump @548 if a0 != 0\n      : @547 (gas: 1)\n 15879: jump @768\n      : @548 (gas: 9)\n 15882: a0 = 0x30100\n 15887: u64 [s1 + 0xf0] = a0\n 15891: i32 a0 = a0 + 0\n 15893: u64 [s1 + 0xe0] = a0\n 15897: ra = 0x1fe\n 15901: ecalli 4 // 'caller'\n 15903: a2 = u64 [s1 + 0xf0]\n 15907: t0 = 0x200\n 15911: jump @955\n      : @549 [@dyn 255] (gas: 2)\n 15914: a2 = u64 [s1 + 0xf0]\n 15918: t0 = 512, jump @955\n      : @550 [@dyn 256] (gas: 1)\n 15924: jump @552 if a0 != 0\n      : @551 (gas: 1)\n 15927: jump @772\n      : @552 (gas: 8)\n 15930: a1 = s1 + 0x1878\n 15934: u64 [a1 + 512] = 0\n 15938: u64 [a1 + 504] = 0\n 15942: u64 [a1 + 496] = 0\n 15946: u64 [a1 + 488] = 0x2\n 15951: a0 = s1 + 0x680\n 15955: a1 = s1 + 0x1a60\n 15959: ra = 514, jump @21\n      : @553 [@dyn 257] (gas: 22)\n 15965: a1 = s1 + 0x600\n 15969: a0 = u64 [a1 + 0x98]\n 15973: u64 [s1 + 0xd0] = a0\n 15977: a0 = u64 [a1 + 0x90]\n 15981: u64 [s1 + 0xf8] = a0\n 15985: a0 = u64 [a1 + 0x80]\n 15989: u64 [s1 + 0xa8] = a0\n 15993: a0 = u64 [a1 + 0x88]\n 15997: u64 [s1 + 0xe8] = a0\n 16001: a0 = sp + 0xffffffffffffffe0\n 16004: a0 = a0 & 0xffffffffffffffe0\n 16007: u64 [s1 + 0xd8] = a0\n 16011: sp = a0\n 16013: a0 = s1 + 0x1878\n 16017: u64 [a0 + 544] = 0\n 16021: u64 [a0 + 536] = 0\n 16025: u64 [a0 + 528] = 0\n 16029: u64 [a0 + 520] = 0\n 16033: a0 = s1 + 0x2000\n 16037: i32 a0 = a0 + 0xfffffffffffffa80\n 16041: ecalli 15 // 'value_transferred'\n 16043: fallthrough\n      : @554 (gas: 43)\n 16044: a0 = s1 + 0x1878\n 16048: a3 = a0 + 0x200\n 16052: a2 = u64 [a3 + 0x10]\n 16055: a1 = u64 [a3 + 0x8]\n 16058: t0 = u64 [a0 + 0x220]\n 16062: a4 = u64 [a3 + 0x18]\n 16065: a5 = u64 [s1 + 0xe8]\n 16069: a5 = a5 + a2\n 16072: a0 = u64 [s1 + 0xa8]\n 16076: t1 = a1 + a0\n 16079: a1 = t1 <u a1\n 16082: a5 = a5 + a1\n 16085: a3 = a5 ^ a2\n 16088: a2 = a5 <u a2\n 16091: a2 = a1 if a3 == 0\n 16094: a1 = u64 [s1 + 0xf8]\n 16098: a1 = a1 + a4\n 16101: ra = u64 [s1 + 0xd0]\n 16105: t0 = t0 + ra\n 16108: a3 = a1 <u a4\n 16111: a3 = a3 + t0\n 16114: a2 = a2 + a1\n 16117: a1 = a2 <u a1\n 16120: t2 = a3 + a1\n 16123: a3 = u64 [s1 + 0xe8]\n 16127: a1 = a3 ^ a5\n 16130: a4 = a5 <u a3\n 16133: a0 = t1 <u a0\n 16136: a0 = a4 if a1 != 0\n 16139: a3 = u64 [s1 + 0xf8]\n 16143: t0 = a2 <u a3\n 16146: a4 = ra ^ t2\n 16149: a1 = t2 <u ra\n 16152: a1 = t0 if a4 == 0\n 16155: a3 = a3 ^ a2\n 16158: a3 = a3 | a4\n 16161: a0 = a1 if a3 != 0\n 16164: a1 = u64 [s1 + 0xd8]\n 16168: u64 [a1] = t1\n 16170: u64 [a1 + 0x8] = a5\n 16173: u64 [a1 + 0x10] = a2\n 16176: u64 [a1 + 0x18] = t2\n 16179: jump @556 if a0 == 0\n      : @555 (gas: 1)\n 16182: jump @777\n      : @556 (gas: 7)\n 16185: a2 = s1 + 0x1878\n 16189: u64 [a2 + 576] = 0\n 16193: u64 [a2 + 568] = 0\n 16197: u64 [a2 + 560] = 0\n 16201: u64 [a2 + 552] = 0x2\n 16206: a0 = s1 + 0x1aa0\n 16210: ra = 516, jump @22\n      : @557 [@dyn 258] (gas: 6)\n 16216: a0 = u64 [s1 + 0xe0]\n 16220: ra = 0x206\n 16224: ecalli 4 // 'caller'\n 16226: a2 = u64 [s1 + 0xf0]\n 16230: t0 = 0x208\n 16234: jump @930\n      : @558 [@dyn 259] (gas: 2)\n 16237: a2 = u64 [s1 + 0xf0]\n 16241: t0 = 520, jump @930\n      : @559 [@dyn 260] (gas: 8)\n 16247: u64 [s1 + 1656] = 0\n 16251: a2 = s1 + 0x600\n 16255: u64 [a2 + 0x70] = a1\n 16258: u64 [a2 + 0x68] = a0\n 16261: a1 = s1 + 0x660\n 16265: u64 [a2 + 0x60] = a3\n 16268: a0 = 0\n 16270: ra = 522, jump @19\n      : @560 [@dyn 261] (gas: 7)\n 16276: u64 [s1 + 1624] = 0\n 16280: u64 [s1 + 1616] = 0\n 16284: u64 [s1 + 1608] = 0\n 16288: a0 = 0x20\n 16291: a1 = s1 + 0x640\n 16295: u64 [s1 + 1600] = 0\n 16299: ra = 524, jump @19\n      : @561 [@dyn 262] (gas: 6)\n 16305: a0 = sp + 0xffffffffffffffe0\n 16308: a0 = a0 & 0xffffffffffffffe0\n 16311: u64 [s1 + 0xf8] = a0\n 16315: sp = a0\n 16317: a1 = i32 [0x200ec]\n 16322: jump @563 if a1 >u 63\n      : @562 (gas: 2)\n 16326: u32 [0x200ec] = 0x40\n 16332: fallthrough\n      : @563 (gas: 45)\n 16333: a0 = sp + 0xffffffffffffffe0\n 16336: a2 = a0 & 0xffffffffffffffe0\n 16339: u64 [s1 + 0xe8] = a2\n 16343: sp = a2\n 16345: a0 = 0x20100\n 16350: i32 a0 = a0 + 0\n 16352: i32 a2 = a2 + 0\n 16354: a1 = 0x40\n 16357: u64 [s1 + 0xa0] = a0\n 16361: ecalli 8 // 'hash_keccak_256'\n 16363: a3 = u64 [s1 + 0xe8]\n 16367: a0 = u64 [a3 + 0x18]\n 16370: a1 = u64 [a3 + 0x10]\n 16373: a2 = u64 [a3 + 0x8]\n 16376: a3 = u64 [a3]\n 16378: a0 = reverse a0\n 16380: a1 = reverse a1\n 16382: a2 = reverse a2\n 16384: a3 = reverse a3\n 16386: a4 = u64 [s1 + 0xf8]\n 16390: u64 [a4 + 0x18] = a3\n 16393: u64 [a4 + 0x10] = a2\n 16396: u64 [a4 + 0x8] = a1\n 16399: u64 [a4] = a0\n 16401: a0 = s1 + 0x1878\n 16405: u64 [a0 + 608] = 0\n 16409: u64 [a0 + 600] = 0\n 16413: u64 [a0 + 592] = 0\n 16417: u64 [a0 + 584] = 0\n 16421: a0 = s1 + 0x2000\n 16425: i32 a0 = a0 + 0xfffffffffffffac0\n 16429: ecalli 15 // 'value_transferred'\n 16431: a0 = s1 + 0x1878\n 16435: a2 = a0 + 0x200\n 16439: a1 = u64 [a2 + 0x60]\n 16442: u64 [s1 + 0xe8] = a1\n 16446: a1 = u64 [a2 + 0x58]\n 16449: u64 [s1 + 0xd8] = a1\n 16453: a1 = u64 [a2 + 0x48]\n 16456: u64 [s1 + 0xd0] = a1\n 16460: a0 = u64 [a2 + 0x50]\n 16463: u64 [s1 + 0xa8] = a0\n 16467: a0 = s1 + 0x620\n 16471: a1 = u64 [s1 + 0xf8]\n 16475: ra = 526, jump @21\n      : @564 [@dyn 263] (gas: 31)\n 16481: a0 = u64 [s1 + 0x628]\n 16485: a1 = u64 [s1 + 0x620]\n 16489: t0 = u64 [s1 + 0x638]\n 16493: a3 = u64 [s1 + 0x630]\n 16497: a4 = u64 [s1 + 0xa8]\n 16501: a4 = a4 + a0\n 16504: a5 = u64 [s1 + 0xd0]\n 16508: a5 = a5 + a1\n 16511: a1 = a5 <u a1\n 16514: a4 = a4 + a1\n 16517: a2 = a4 ^ a0\n 16520: a0 = a4 <u a0\n 16523: a0 = a1 if a2 == 0\n 16526: a1 = u64 [s1 + 0xd8]\n 16530: a1 = a1 + a3\n 16533: a0 = a0 + a1\n 16536: t1 = a0 <u a1\n 16539: a2 = u64 [s1 + 0xe8]\n 16543: t0 = t0 + a2\n 16546: a1 = a1 <u a3\n 16549: a1 = a1 + t0\n 16552: a1 = a1 + t1\n 16555: a2 = s1 + 0x1878\n 16559: a3 = a2 + 0x200\n 16563: u64 [a3 + 0x68] = a5\n 16566: u64 [a3 + 0x70] = a4\n 16569: u64 [a3 + 0x78] = a0\n 16572: u64 [a3 + 0x80] = a1\n 16576: a1 = s1 + 0x1ae0\n 16580: a0 = u64 [s1 + 0xf8]\n 16584: ra = 528, jump @22\n      : @565 [@dyn 264] (gas: 3)\n 16590: a0 = s1 + 0x600\n 16594: a1 = 0x40\n 16597: ra = 530, jump @17\n      : @566 [@dyn 265] (gas: 18)\n 16603: a1 = s1 + 0x600\n 16607: a0 = u64 [a1 + 0x18]\n 16610: u64 [s1 + 0xe8] = a0\n 16614: a0 = u64 [a1 + 0x10]\n 16617: u64 [s1 + 0xd8] = a0\n 16621: a0 = u64 [a1 + 0x8]\n 16624: u64 [s1 + 0xd0] = a0\n 16628: a0 = u64 [a1]\n 16630: u64 [s1 + 0xf8] = a0\n 16634: a0 = s1 + 0x1878\n 16638: u64 [a0 + 672] = 0\n 16642: u64 [a0 + 664] = 0\n 16646: u64 [a0 + 656] = 0\n 16650: u64 [a0 + 648] = 0\n 16654: a0 = s1 + 0x2000\n 16658: i32 a0 = a0 + 0xfffffffffffffb00\n 16662: ecalli 15 // 'value_transferred'\n 16664: fallthrough\n      : @567 (gas: 13)\n 16665: a0 = u64 [s1 + 0xe8]\n 16669: a1 = u64 [s1 + 0xd0]\n 16673: a0 = a0 | a1\n 16676: a1 = u64 [s1 + 0xf8]\n 16680: a4 = a1\n 16682: a2 = u64 [s1 + 0xd8]\n 16686: a1 = a1 | a2\n 16689: a1 = a1 | a0\n 16692: a1 = a1 >> 0x20\n 16695: a0 = a0 | a2\n 16698: a0 = a0 << 0x20\n 16701: a0 = a0 | a1\n 16704: jump @569 if a0 == 0\n      : @568 (gas: 1)\n 16707: jump @680\n      : @569 (gas: 13)\n 16710: a3 = s1 + 0x1878\n 16714: a5 = a3 + 0x200\n 16718: a0 = u64 [a5 + 0x88]\n 16722: a1 = u64 [a5 + 0x90]\n 16726: a2 = u64 [a5 + 0x98]\n 16730: a3 = u64 [a5 + 0xa0]\n 16734: u64 [s1 + 0x5f8] = a3\n 16738: u64 [s1 + 0x5f0] = a2\n 16742: u64 [s1 + 0x5e8] = a1\n 16746: a1 = s1 + 0x5e0\n 16750: u64 [s1 + 0x5e0] = a0\n 16754: a0 = a4\n 16756: ra = 532, jump @19\n      : @570 [@dyn 266] (gas: 6)\n 16762: a0 = u64 [s1 + 0xe0]\n 16766: ra = 0x216\n 16770: ecalli 4 // 'caller'\n 16772: a2 = u64 [s1 + 0xf0]\n 16776: t0 = 0x218\n 16780: jump @933\n      : @571 [@dyn 267] (gas: 2)\n 16783: a2 = u64 [s1 + 0xf0]\n 16787: t0 = 536, jump @933\n      : @572 [@dyn 268] (gas: 29)\n 16793: t0 = a1 | a0\n 16796: a3 = a3 >> 0x20\n 16799: a2 = reverse a2\n 16801: a1 = a2 << 0x20\n 16804: a1 = a1 | a3\n 16807: a2 = a2 >> 0x20\n 16810: u64 [s1 + 1432] = 0\n 16814: u64 [s1 + 1464] = 0\n 16818: u64 [s1 + 1456] = 0\n 16822: u64 [s1 + 1448] = 0\n 16826: u64 [s1 + 1440] = 0\n 16830: a3 = u64 [0x20038]\n 16835: a4 = u64 [0x20040]\n 16840: a5 = u64 [0x20048]\n 16845: a0 = u64 [0x20050]\n 16850: u64 [s1 + 0x5d8] = a3\n 16854: a3 = s1 + 0x500\n 16858: u64 [a3 + 0xd0] = a4\n 16862: u64 [a3 + 0xc8] = a5\n 16866: u64 [a3 + 0xc0] = a0\n 16870: u64 [a3 + 0x90] = a2\n 16874: u64 [a3 + 0x88] = a1\n 16878: a1 = 0x20\n 16881: a2 = s1 + 0x5c0\n 16885: a3 = s1 + 0x5a0\n 16889: a4 = s1 + 0x580\n 16893: u64 [s1 + 0x580] = t0\n 16897: a0 = u64 [s1 + 0xf8]\n 16901: ra = 538, jump @24\n      : @573 [@dyn 269] (gas: 5)\n 16907: a0 = 0\n 16909: a1 = u64 [s1 + 0xa0]\n 16913: a2 = 0\n 16915: ecalli 12 // 'seal_return'\n 16917: jump @727\n      : @574 (gas: 10)\n 16920: u64 [a2 + 416] = 0\n 16924: u64 [a2 + 408] = 0\n 16928: u64 [a2 + 400] = 0\n 16932: u64 [a2 + 392] = 0\n 16936: a0 = s1 + 0x2000\n 16940: i32 a0 = a0 + 0xfffffffffffffa00\n 16944: ra = 0x21c\n 16948: ecalli 15 // 'value_transferred'\n 16950: t0 = 0x21e\n 16954: jump @962\n      : @575 [@dyn 270] (gas: 1)\n 16957: t0 = 542, jump @962\n      : @576 [@dyn 271] (gas: 8)\n 16963: a0 = u64 [a4 + 0x98]\n 16967: a1 = u64 [a4 + 0xa0]\n 16971: a2 = u64 [a4 + 0x90]\n 16975: a3 = u64 [a4 + 0x88]\n 16979: a1 = a1 | a2\n 16982: a0 = a0 | a3\n 16985: a0 = a0 | a1\n 16988: jump @578 if a0 == 0\n      : @577 (gas: 1)\n 16991: jump @783\n      : @578 (gas: 4)\n 16994: a0 = u64 [s1 + 0xf8]\n 16998: a0 = i32 [a0]\n 17000: a1 = 0x43\n 17003: jump @580 if a1 <u a0\n      : @579 (gas: 1)\n 17006: jump @784\n      : @580 (gas: 4)\n 17009: a0 = s1 + 0x4c0\n 17013: ra = 0x220\n 17017: t0 = 0x312\n 17021: jump @961\n      : @581 [@dyn 272] (gas: 39)\n 17024: a1 = s1 + 0x400\n 17028: a0 = u64 [a1 + 0xd0]\n 17032: u64 [s1 + 0xd8] = a0\n 17036: a0 = u64 [a1 + 0xc8]\n 17040: u64 [s1 + 0xf0] = a0\n 17044: a0 = u64 [a1 + 0xc0]\n 17048: u64 [s1 + 0xf8] = a0\n 17052: a0 = sp + 0xffffffffffffffe0\n 17055: a0 = a0 & 0xffffffffffffffe0\n 17058: u64 [s1 + 0xe0] = a0\n 17062: sp = a0\n 17064: a0 = s1 + 0x2000\n 17068: i32 a0 = a0 + 0xfffffffffffffa20\n 17072: a1 = 0x24\n 17075: ecalli 2 // 'call_data_load'\n 17077: a0 = s1 + 0x1878\n 17081: a4 = a0 + 0x100\n 17085: a1 = u64 [a4 + 0xc0]\n 17089: a2 = u64 [a4 + 0xb8]\n 17093: a3 = u64 [a4 + 0xb0]\n 17097: a0 = u64 [a4 + 0xa8]\n 17101: u64 [s1 + 0x90] = a1\n 17105: a4 = u64 [s1 + 0xe0]\n 17109: u64 [a4 + 0x18] = a1\n 17112: u64 [s1 + 0x88] = a2\n 17116: u64 [a4 + 0x10] = a2\n 17119: u64 [s1 + 0x80] = a3\n 17123: u64 [a4 + 0x8] = a3\n 17126: u64 [s1 + 0x78] = a0\n 17129: u64 [a4] = a0\n 17131: a0 = 0x30100\n 17136: u64 [s1 + 0xe8] = a0\n 17140: i32 a0 = a0 + 0\n 17142: u64 [s1 + 0xd0] = a0\n 17146: ra = 0x222\n 17150: ecalli 4 // 'caller'\n 17152: a2 = u64 [s1 + 0xe8]\n 17156: t0 = 0x224\n 17160: jump @955\n      : @582 [@dyn 273] (gas: 2)\n 17163: a2 = u64 [s1 + 0xe8]\n 17167: t0 = 548, jump @955\n      : @583 [@dyn 274] (gas: 1)\n 17173: jump @585 if a0 != 0\n      : @584 (gas: 1)\n 17176: jump @785\n      : @585 (gas: 9)\n 17179: a0 = u64 [s1 + 0xd8]\n 17183: a0 = a0 << 0x20\n 17186: a1 = a0 >> 0x20\n 17189: a0 = u64 [s1 + 0xf0]\n 17193: a2 = u64 [s1 + 0xf8]\n 17197: a0 = a0 | a2\n 17200: u64 [s1 + 0xd8] = a1\n 17204: a0 = a0 | a1\n 17207: jump @587 if a0 != 0\n      : @586 (gas: 1)\n 17210: jump @790\n      : @587 (gas: 6)\n 17213: a0 = u64 [s1 + 0xd0]\n 17217: ra = 0x226\n 17221: ecalli 4 // 'caller'\n 17223: a2 = u64 [s1 + 0xe8]\n 17227: t0 = 0x228\n 17231: jump @930\n      : @588 [@dyn 275] (gas: 2)\n 17234: a2 = u64 [s1 + 0xe8]\n 17238: t0 = 552, jump @930\n      : @589 [@dyn 276] (gas: 7)\n 17244: u64 [s1 + 1208] = 0\n 17248: u64 [s1 + 0x4b0] = a1\n 17252: u64 [s1 + 0x4a8] = a0\n 17256: a1 = s1 + 0x4a0\n 17260: u64 [s1 + 0x4a0] = a3\n 17264: a0 = 0\n 17266: ra = 554, jump @19\n      : @590 [@dyn 277] (gas: 7)\n 17272: u64 [s1 + 1176] = 0\n 17276: u64 [s1 + 1168] = 0\n 17280: u64 [s1 + 1152] = 0x1\n 17285: a0 = 0x20\n 17288: a1 = s1 + 0x480\n 17292: u64 [s1 + 1160] = 0\n 17296: ra = 556, jump @19\n      : @591 [@dyn 278] (gas: 3)\n 17302: a1 = 0x200ec\n 17307: a0 = i32 [0x200ec]\n 17312: jump @593 if a0 >u 63\n      : @592 (gas: 2)\n 17316: u32 [0x200ec] = 0x40\n 17322: fallthrough\n      : @593 (gas: 15)\n 17323: a0 = sp + 0xffffffffffffffe0\n 17326: a2 = a0 & 0xffffffffffffffe0\n 17329: u64 [s1 + 0xb8] = a2\n 17333: sp = a2\n 17335: a0 = 0x20100\n 17340: i32 a0 = a0 + 0\n 17342: i32 a2 = a2 + 0\n 17344: u64 [s1 + 0xc8] = a1\n 17348: a1 = 0x40\n 17351: u64 [s1 + 0xc0] = a0\n 17355: ra = 0x22e\n 17359: ecalli 8 // 'hash_keccak_256'\n 17361: a3 = u64 [s1 + 0xb8]\n 17365: t0 = 0x230\n 17369: jump @963\n      : @594 [@dyn 279] (gas: 2)\n 17372: a3 = u64 [s1 + 0xb8]\n 17376: t0 = 560, jump @963\n      : @595 [@dyn 280] (gas: 21)\n 17382: u64 [s1 + 0xb0] = a0\n 17386: a0 = reverse a1\n 17388: u64 [s1 + 0xa8] = a0\n 17392: a0 = reverse a2\n 17394: u64 [s1 + 0xa0] = a0\n 17398: a0 = reverse a3\n 17400: u64 [s1 + 0x98] = a0\n 17404: a0 = sp + 0xffffffffffffffe0\n 17407: a0 = a0 & 0xffffffffffffffe0\n 17410: u64 [s1 + 0xb8] = a0\n 17414: sp = a0\n 17416: u64 [s1 + 1144] = 0\n 17420: a0 = u64 [s1 + 0xd8]\n 17424: u64 [s1 + 0x470] = a0\n 17428: a0 = u64 [s1 + 0xf0]\n 17432: u64 [s1 + 0x468] = a0\n 17436: a1 = s1 + 0x460\n 17440: a0 = u64 [s1 + 0xf8]\n 17444: u64 [s1 + 0x460] = a0\n 17448: a0 = 0\n 17450: ra = 562, jump @19\n      : @596 [@dyn 281] (gas: 12)\n 17456: a0 = u64 [s1 + 0x98]\n 17460: a3 = s1 + 0x400\n 17464: u64 [a3 + 0x58] = a0\n 17467: a0 = u64 [s1 + 0xa0]\n 17471: u64 [a3 + 0x50] = a0\n 17474: a0 = u64 [s1 + 0xa8]\n 17478: u64 [a3 + 0x48] = a0\n 17481: a0 = 0x20\n 17484: a1 = s1 + 0x440\n 17488: a2 = u64 [s1 + 0xb0]\n 17492: u64 [a3 + 0x40] = a2\n 17495: ra = 564, jump @19\n      : @597 [@dyn 282] (gas: 3)\n 17501: a1 = u64 [s1 + 0xc8]\n 17505: a0 = i32 [a1]\n 17507: jump @599 if a0 >u 63\n      : @598 (gas: 2)\n 17511: u32 [a1 + 0] = 0x40\n 17514: fallthrough\n      : @599 (gas: 24)\n 17515: a0 = sp + 0xffffffffffffffe0\n 17518: a0 = a0 & 0xffffffffffffffe0\n 17521: u64 [s1 + 0xc8] = a0\n 17525: sp = a0\n 17527: i32 a2 = a0 + 0\n 17529: a1 = 0x40\n 17532: a0 = u64 [s1 + 0xc0]\n 17536: ecalli 8 // 'hash_keccak_256'\n 17538: a3 = u64 [s1 + 0xc8]\n 17542: a0 = u64 [a3 + 0x18]\n 17545: a1 = u64 [a3 + 0x10]\n 17548: a2 = u64 [a3 + 0x8]\n 17551: a3 = u64 [a3]\n 17553: a4 = reverse a0\n 17555: a1 = reverse a1\n 17557: a2 = reverse a2\n 17559: a3 = reverse a3\n 17561: a0 = u64 [s1 + 0xb8]\n 17565: u64 [a0 + 0x18] = a3\n 17568: u64 [a0 + 0x10] = a2\n 17571: u64 [a0 + 0x8] = a1\n 17574: u64 [a0] = a4\n 17576: a1 = u64 [s1 + 0xe0]\n 17580: ra = 566, jump @22\n      : @600 [@dyn 283] (gas: 3)\n 17586: a0 = s1 + 0x420\n 17590: a1 = 0x40\n 17593: ra = 568, jump @17\n      : @601 [@dyn 284] (gas: 13)\n 17599: a4 = s1 + 0x400\n 17603: a0 = u64 [a4 + 0x38]\n 17606: a1 = u64 [a4 + 0x30]\n 17609: a2 = u64 [a4 + 0x28]\n 17612: a3 = u64 [a4 + 0x20]\n 17615: a0 = a0 | a2\n 17618: a2 = a3 | a1\n 17621: a2 = a2 | a0\n 17624: a2 = a2 >> 0x20\n 17627: a0 = a0 | a1\n 17630: a0 = a0 << 0x20\n 17633: a0 = a0 | a2\n 17636: jump @680 if a0 != 0\n      : @602 (gas: 13)\n 17640: a0 = u64 [s1 + 0x78]\n 17643: a2 = s1 + 0x400\n 17647: u64 [a2] = a0\n 17649: a0 = u64 [s1 + 0x80]\n 17653: u64 [a2 + 0x8] = a0\n 17656: a0 = u64 [s1 + 0x88]\n 17660: u64 [a2 + 0x10] = a0\n 17663: a1 = s1 + 0x400\n 17667: a0 = u64 [s1 + 0x90]\n 17671: u64 [a2 + 0x18] = a0\n 17674: a0 = a3\n 17676: u64 [s1 + 0xe0] = a3\n 17680: ra = 570, jump @19\n      : @603 [@dyn 285] (gas: 6)\n 17686: a0 = u64 [s1 + 0xd0]\n 17690: ra = 0x23c\n 17694: ecalli 4 // 'caller'\n 17696: a2 = u64 [s1 + 0xe8]\n 17700: t0 = 0x23e\n 17704: jump @933\n      : @604 [@dyn 286] (gas: 2)\n 17707: a2 = u64 [s1 + 0xe8]\n 17711: t0 = 574, jump @933\n      : @605 [@dyn 287] (gas: 31)\n 17717: t0 = a1 | a0\n 17720: a3 = a3 >> 0x20\n 17723: a2 = reverse a2\n 17725: a1 = a2 << 0x20\n 17728: a1 = a1 | a3\n 17731: a2 = a2 >> 0x20\n 17734: u64 [s1 + 952] = 0\n 17738: a0 = u64 [s1 + 0xd8]\n 17742: u64 [s1 + 0x3b0] = a0\n 17746: a0 = u64 [s1 + 0xf0]\n 17750: u64 [s1 + 0x3a8] = a0\n 17754: a0 = u64 [s1 + 0xf8]\n 17758: u64 [s1 + 0x3a0] = a0\n 17762: u64 [s1 + 984] = 0\n 17766: a3 = u64 [0x20088]\n 17771: a4 = u64 [0x20090]\n 17776: a5 = u64 [0x20098]\n 17781: a0 = u64 [0x200a0]\n 17786: u64 [s1 + 0x3f8] = a3\n 17790: u64 [s1 + 0x3f0] = a4\n 17794: u64 [s1 + 0x3e8] = a5\n 17798: u64 [s1 + 0x3e0] = a0\n 17802: u64 [s1 + 0x3d0] = a2\n 17806: u64 [s1 + 0x3c8] = a1\n 17810: a1 = 0x20\n 17813: a2 = s1 + 0x3e0\n 17817: a3 = s1 + 0x3c0\n 17821: a4 = s1 + 0x3a0\n 17825: u64 [s1 + 0x3c0] = t0\n 17829: a0 = u64 [s1 + 0xe0]\n 17833: ra = 576, jump @24\n      : @606 [@dyn 288] (gas: 3)\n 17839: a0 = s1 + 0x380\n 17843: a1 = 0x40\n 17846: ra = 578, jump @17\n      : @607 [@dyn 289] (gas: 6)\n 17852: a4 = s1 + 0x300\n 17856: a3 = u64 [a4 + 0x98]\n 17860: a1 = u64 [a4 + 0x90]\n 17864: a2 = u64 [a4 + 0x88]\n 17868: a0 = u64 [a4 + 0x80]\n 17872: t0 = 580, jump @941\n      : @608 [@dyn 290] (gas: 1)\n 17878: jump @680 if a1 != 0\n      : @609 (gas: 8)\n 17882: u64 [s1 + 888] = 0\n 17886: u64 [s1 + 880] = 0\n 17890: u64 [s1 + 872] = 0\n 17894: a1 = s1 + 0x360\n 17898: u64 [s1 + 864] = 0x1\n 17903: u64 [s1 + 0xf8] = a0\n 17907: ra = 0x26e\n 17911: jump @19\n      : @610 (gas: 9)\n 17914: u64 [a2 + 1728] = 0\n 17918: u64 [a2 + 1720] = 0\n 17922: u64 [a2 + 1712] = 0\n 17926: u64 [a2 + 1704] = 0\n 17930: a0 = s1 + 0x2000\n 17934: i32 a0 = a0 + 0xffffffffffffff20\n 17938: ra = 0x246\n 17942: ecalli 15 // 'value_transferred'\n 17944: fallthrough\n      : @611 [@dyn 291] (gas: 3)\n 17945: a3 = s1 + 0x1878\n 17949: a4 = a3 + 0x600\n 17953: t0 = 584, jump @960\n      : @612 [@dyn 292] (gas: 1)\n 17959: jump @614 if a0 == 0\n      : @613 (gas: 1)\n 17962: jump @727\n      : @614 (gas: 3)\n 17965: a0 = u64 [s1 + 0xf8]\n 17969: a0 = i32 [a0]\n 17971: jump @616 if a0 >u 3\n      : @615 (gas: 1)\n 17975: jump @727\n      : @616 (gas: 3)\n 17978: a0 = s1 + 0x1780\n 17982: a1 = 0x40\n 17985: ra = 586, jump @17\n      : @617 [@dyn 293] (gas: 18)\n 17991: a1 = s1 + 0x1078\n 17995: a2 = a1 + 0x700\n 17999: a0 = u64 [a2 + 0x20]\n 18002: u64 [s1 + 0x58] = a0\n 18005: a0 = u64 [a2 + 0x18]\n 18008: u64 [s1 + 0x60] = a0\n 18011: a0 = u64 [a2 + 0x10]\n 18014: u64 [s1 + 0x68] = a0\n 18017: a0 = u64 [a2 + 0x8]\n 18020: u64 [s1 + 0x70] = a0\n 18023: a1 = s1 + 0x1878\n 18027: u64 [a1 + 1760] = 0\n 18031: u64 [a1 + 1752] = 0\n 18035: u64 [a1 + 1744] = 0\n 18039: u64 [a1 + 1736] = 0x4\n 18044: a0 = s1 + 0x1760\n 18048: a1 = s1 + 0x1f40\n 18052: ra = 588, jump @21\n      : @618 [@dyn 294] (gas: 35)\n 18058: a0 = s1 + 0x1078\n 18062: t2 = u64 [a0 + 0x6f8]\n 18066: ra = u64 [a0 + 0x6f0]\n 18070: t1 = u64 [a0 + 0x700]\n 18074: a4 = u64 [a0 + 0x6e8]\n 18078: a0 = t2 << 0x3f\n 18081: a1 = ra >> 0x1\n 18084: a0 = a0 | a1\n 18087: a1 = t1 << 0x3f\n 18090: a2 = t2 >> 0x1\n 18093: a1 = a1 | a2\n 18096: a2 = ra << 0x3f\n 18099: a3 = a4 >> 0x1\n 18102: a5 = a3 | a2\n 18105: a2 = t1 >> 0x1\n 18108: u64 [s1 + 0xe8] = a4\n 18112: a4 = a4 & 0x1\n 18115: a3 = -a4\n 18117: a1 = a1 & a3\n 18120: t0 = a3 & a0\n 18123: a2 = a2 & a3\n 18126: a0 = a5 & 0x7f\n 18129: u64 [s1 + 0xf0] = a0\n 18133: a5 = a0 if a4 == 0\n 18136: u64 [s1 + 0xb8] = a5\n 18140: a0 = a5 <u 0x20\n 18143: u64 [s1 + 0xa8] = t0\n 18147: a0 = 0 if t0 != 0\n 18149: u64 [s1 + 0xb0] = a1\n 18153: u64 [s1 + 0xa0] = a2\n 18157: a1 = a1 | a2\n 18160: a0 = 0 if a1 != 0\n 18162: u64 [s1 + 0xf8] = a4\n 18166: a1 = a4 <u 0x1\n 18169: jump @620 if a1 == a0\n      : @619 (gas: 1)\n 18172: jump @796\n      : @620 (gas: 12)\n 18175: a2 = u64 [s1 + 0x60]\n 18178: a3 = u64 [s1 + 0x70]\n 18181: a0 = a3 | a2\n 18184: a1 = u64 [s1 + 0x68]\n 18187: a4 = u64 [s1 + 0x58]\n 18190: a1 = a1 | a4\n 18193: a0 = a0 | a1\n 18196: a0 = a0 >> 0x20\n 18199: a1 = a1 | a2\n 18202: a1 = a1 << 0x20\n 18205: a1 = a1 | a0\n 18208: jump @680 if a1 != 0\n      : @621 (gas: 16)\n 18212: a0 = a3\n 18214: u64 [s1 + 0xd0] = ra\n 18218: u64 [s1 + 0xd8] = t2\n 18222: u64 [s1 + 0xe0] = t1\n 18226: a1 = u64 [s1 + 0xb8]\n 18230: a3 = s1 + 0x1078\n 18234: a4 = a3 + 0x600\n 18238: u64 [a4 + 0xc8] = a1\n 18242: a1 = u64 [s1 + 0xa8]\n 18246: u64 [a4 + 0xd0] = a1\n 18250: a1 = u64 [s1 + 0xb0]\n 18254: u64 [a4 + 0xd8] = a1\n 18258: a1 = s1 + 0x1740\n 18262: a2 = u64 [s1 + 0xa0]\n 18266: u64 [a4 + 0xe0] = a2\n 18270: ra = 590, jump @19\n      : @622 [@dyn 295] (gas: 2)\n 18276: a0 = u64 [s1 + 0xf8]\n 18280: jump @664 if a0 != 0\n      : @623 (gas: 10)\n 18284: a0 = u64 [s1 + 0x60]\n 18287: a1 = u64 [s1 + 0x58]\n 18290: a0 = a0 | a1\n 18293: a1 = 0xffffffe0\n 18303: a3 = u64 [s1 + 0x70]\n 18306: a1 = a3 <u a1\n 18309: a2 = u64 [s1 + 0x68]\n 18312: a1 = 0 if a2 != 0\n 18314: a1 = 0 if a0 != 0\n 18316: jump @680 if a1 == 0\n      : @624 (gas: 14)\n 18320: a0 = u64 [s1 + 0xe8]\n 18324: a1 = a0 & 0xffffffffffffff00\n 18328: i32 a0 = a3 + 0x20\n 18331: a3 = s1 + 0x1078\n 18335: a2 = u64 [s1 + 0xd0]\n 18339: a4 = a3 + 0x600\n 18343: u64 [a4 + 0x50] = a2\n 18346: u64 [a4 + 0x48] = a1\n 18349: a1 = u64 [s1 + 0xd8]\n 18353: u64 [a4 + 0x58] = a1\n 18356: a1 = s1 + 0x16c0\n 18360: a2 = u64 [s1 + 0xe0]\n 18364: u64 [a4 + 0x60] = a2\n 18367: ra = 592, jump @19\n      : @625 [@dyn 296] (gas: 10)\n 18373: a4 = s1 + 0x1078\n 18377: a5 = u64 [s1 + 0x70]\n 18380: t2 = 0\n 18382: t1 = 0\n 18384: t0 = 0\n 18386: a0 = u64 [s1 + 0xf0]\n 18390: a0 = a0 >u 0\n 18392: a0 = a0 << 0x5\n 18395: u64 [s1 + 0xf8] = a0\n 18399: jump @672\n      : @626 (gas: 8)\n 18402: u64 [a2 + 1856] = 0\n 18406: u64 [a2 + 1848] = 0\n 18410: u64 [a2 + 1840] = 0\n 18414: u64 [a2 + 1832] = 0\n 18418: a0 = s1 + 0x2000\n 18422: i32 a0 = a0 + 0xffffffffffffffa0\n 18425: ecalli 15 // 'value_transferred'\n 18427: fallthrough\n      : @627 (gas: 10)\n 18428: a3 = s1 + 0x1878\n 18432: a4 = a3 + 0x700\n 18436: a0 = u64 [a4 + 0x38]\n 18439: a1 = u64 [a4 + 0x40]\n 18442: a2 = u64 [a4 + 0x30]\n 18445: a3 = u64 [a4 + 0x28]\n 18448: a1 = a1 | a2\n 18451: a0 = a0 | a3\n 18454: a0 = a0 | a1\n 18457: jump @727 if a0 != 0\n      : @628 (gas: 4)\n 18461: a0 = u64 [s1 + 0xf8]\n 18465: a0 = i32 [a0]\n 18467: a1 = 0x43\n 18470: jump @727 if a1 >=u a0\n      : @629 (gas: 4)\n 18474: a0 = s1 + 0x1960\n 18478: ra = 0x252\n 18482: t0 = 0x312\n 18486: jump @961\n      : @630 [@dyn 297] (gas: 11)\n 18489: a1 = s1 + 0x1878\n 18493: a0 = u64 [a1 + 0xe8]\n 18497: u64 [s1 + 0xe8] = a0\n 18501: a0 = u64 [a1 + 0xf0]\n 18505: u64 [s1 + 0xd8] = a0\n 18509: a0 = u32 [a1 + 0xf8]\n 18513: u64 [s1 + 0xd0] = a0\n 18517: a0 = s1 + 0x1940\n 18521: ra = 0x254\n 18525: t0 = 0x31c\n 18529: jump @961\n      : @631 [@dyn 298] (gas: 17)\n 18532: a0 = s1 + 0x1878\n 18536: a1 = u64 [a0 + 0xc8]\n 18540: u64 [s1 + 0xf8] = a1\n 18544: a1 = u64 [a0 + 0xd0]\n 18548: u64 [s1 + 0xf0] = a1\n 18552: a1 = u32 [a0 + 0xd8]\n 18556: u64 [s1 + 0xe0] = a1\n 18560: u64 [a0 + 192] = 0\n 18564: a1 = u64 [s1 + 0xd0]\n 18568: u64 [a0 + 0xb8] = a1\n 18572: a1 = u64 [s1 + 0xd8]\n 18576: u64 [a0 + 0xb0] = a1\n 18580: a1 = s1 + 0x1920\n 18584: a2 = u64 [s1 + 0xe8]\n 18588: u64 [a0 + 0xa8] = a2\n 18592: a0 = 0\n 18594: ra = 598, jump @19\n      : @632 [@dyn 299] (gas: 8)\n 18600: a2 = s1 + 0x1878\n 18604: u64 [a2 + 160] = 0\n 18608: u64 [a2 + 152] = 0\n 18612: u64 [a2 + 136] = 0x1\n 18617: a0 = 0x20\n 18620: a1 = s1 + 0x1900\n 18624: u64 [a2 + 144] = 0\n 18628: ra = 600, jump @19\n      : @633 [@dyn 300] (gas: 3)\n 18634: a1 = 0x40\n 18637: a0 = 0\n 18639: ra = 602, jump @27\n      : @634 [@dyn 301] (gas: 12)\n 18645: a1 = sp + 0xffffffffffffffe0\n 18648: a1 = a1 & 0xffffffffffffffe0\n 18651: u64 [s1 + 0xe8] = a1\n 18655: sp = a1\n 18657: i32 a0 = a0 + 0\n 18659: i32 a2 = a1 + 0\n 18661: a1 = 0x40\n 18664: ra = 0x25c\n 18668: ecalli 8 // 'hash_keccak_256'\n 18670: a3 = u64 [s1 + 0xe8]\n 18674: t0 = 0x25e\n 18678: jump @963\n      : @635 [@dyn 302] (gas: 2)\n 18681: a3 = u64 [s1 + 0xe8]\n 18685: t0 = 606, jump @963\n      : @636 [@dyn 303] (gas: 22)\n 18691: u64 [s1 + 0xd8] = a0\n 18695: a0 = reverse a1\n 18697: u64 [s1 + 0xd0] = a0\n 18701: a0 = reverse a2\n 18703: u64 [s1 + 0xc8] = a0\n 18707: a0 = reverse a3\n 18709: u64 [s1 + 0xc0] = a0\n 18713: a0 = sp + 0xffffffffffffffe0\n 18716: a0 = a0 & 0xffffffffffffffe0\n 18719: u64 [s1 + 0xe8] = a0\n 18723: sp = a0\n 18725: a2 = s1 + 0x1878\n 18729: u64 [a2 + 128] = 0\n 18733: a0 = u64 [s1 + 0xe0]\n 18737: u64 [a2 + 0x78] = a0\n 18740: a0 = u64 [s1 + 0xf0]\n 18744: u64 [a2 + 0x70] = a0\n 18747: a1 = s1 + 0x18e0\n 18751: a0 = u64 [s1 + 0xf8]\n 18755: u64 [a2 + 0x68] = a0\n 18758: a0 = 0\n 18760: ra = 608, jump @19\n      : @637 [@dyn 304] (gas: 13)\n 18766: a0 = u64 [s1 + 0xc0]\n 18770: a1 = s1 + 0x1878\n 18774: u64 [a1 + 0x60] = a0\n 18777: a0 = u64 [s1 + 0xc8]\n 18781: u64 [a1 + 0x58] = a0\n 18784: a0 = u64 [s1 + 0xd0]\n 18788: u64 [a1 + 0x50] = a0\n 18791: a3 = a1\n 18793: a0 = 0x20\n 18796: a1 = s1 + 0x18c0\n 18800: a2 = u64 [s1 + 0xd8]\n 18804: u64 [a3 + 0x48] = a2\n 18807: ra = 610, jump @19\n      : @638 [@dyn 305] (gas: 2)\n 18813: a1 = i32 [0x200ec]\n 18818: jump @640 if a1 >=u 64\n      : @639 (gas: 2)\n 18822: u32 [0x200ec] = 0x40\n 18828: fallthrough\n      : @640 (gas: 13)\n 18829: a0 = sp + 0xffffffffffffffe0\n 18832: a2 = a0 & 0xffffffffffffffe0\n 18835: u64 [s1 + 0xf8] = a2\n 18839: sp = a2\n 18841: a0 = 0x20100\n 18846: i32 a0 = a0 + 0\n 18848: i32 a2 = a2 + 0\n 18850: a1 = 0x40\n 18853: ra = 0x264\n 18857: ecalli 8 // 'hash_keccak_256'\n 18859: a3 = u64 [s1 + 0xf8]\n 18863: t0 = 0x266\n 18867: jump @934\n      : @641 [@dyn 306] (gas: 2)\n 18870: a3 = u64 [s1 + 0xf8]\n 18874: t0 = 614, jump @934\n      : @642 [@dyn 307] (gas: 7)\n 18880: a1 = u64 [s1 + 0xe8]\n 18884: u64 [a1 + 0x18] = a3\n 18887: u64 [a1 + 0x10] = a2\n 18890: u64 [a1 + 0x8] = a4\n 18893: u64 [a1] = a0\n 18895: a0 = s1 + 0x18a0\n 18899: ra = 616, jump @21\n      : @643 [@dyn 308] (gas: 12)\n 18905: a1 = s1 + 0x1878\n 18909: a0 = u64 [a1 + 0x40]\n 18912: u64 [s1 + 0xf8] = a0\n 18916: a0 = u64 [a1 + 0x38]\n 18919: u64 [s1 + 0xf0] = a0\n 18923: a0 = u64 [a1 + 0x30]\n 18926: u64 [s1 + 0xe8] = a0\n 18930: a0 = u64 [a1 + 0x28]\n 18933: u64 [s1 + 0xe0] = a0\n 18937: a0 = s1 + 0x1880\n 18941: a1 = 0x40\n 18944: ra = 618, jump @17\n      : @644 [@dyn 309] (gas: 6)\n 18950: a3 = s1 + 0x1878\n 18954: a0 = u64 [a3 + 0x20]\n 18957: a1 = u64 [a3 + 0x18]\n 18960: a2 = u64 [a3 + 0x10]\n 18963: a4 = u64 [a3 + 0x8]\n 18966: t0 = 620, jump @950\n      : @645 [@dyn 310] (gas: 1)\n 18972: jump @680 if a0 != 0\n      : @646 (gas: 14)\n 18976: a0 = s1 + 0x1078\n 18980: a1 = u64 [s1 + 0xe0]\n 18984: a2 = a0 + 0x700\n 18988: u64 [a2 + 0xe8] = a1\n 18992: a1 = u64 [s1 + 0xe8]\n 18996: u64 [a2 + 0xf0] = a1\n 19000: a1 = u64 [s1 + 0xf0]\n 19004: u64 [a2 + 0xf8] = a1\n 19008: a1 = s1 + 0x1860\n 19012: a0 = u64 [s1 + 0xf8]\n 19016: u64 [a3] = a0\n 19018: a0 = a4\n 19020: u64 [s1 + 0xf8] = a4\n 19024: ra = 622, jump @19\n      : @647 [@dyn 311] (gas: 3)\n 19030: a1 = 0x20\n 19033: a0 = u64 [s1 + 0xf8]\n 19037: ra = 624, jump @27\n      : @648 [@dyn 312] (gas: 5)\n 19043: i32 a1 = a0 + 0\n 19045: a2 = 0x20\n 19048: a0 = 0\n 19050: ecalli 12 // 'seal_return'\n 19052: fallthrough\n      : @649 (gas: 7)\n 19053: u64 [s1 + 664] = 0\n 19057: u64 [s1 + 656] = 0\n 19061: u64 [s1 + 648] = 0\n 19065: a1 = s1 + 0x280\n 19069: u64 [s1 + 640] = 0x3\n 19074: a0 = 0\n 19076: ra = 626, jump @19\n      : @650 [@dyn 313] (gas: 21)\n 19082: a0 = sp + 0xffffffffffffffe0\n 19085: a1 = a0 & 0xffffffffffffffe0\n 19088: sp = a1\n 19090: u64 [s1 + 248] = 0\n 19094: a5 = 0\n 19096: t2 = 0\n 19098: t1 = 0\n 19100: t0 = u64 [0x200a8]\n 19105: a2 = u64 [0x200b0]\n 19110: ra = u64 [0x200b8]\n 19115: a0 = u64 [0x200c0]\n 19120: u64 [a1 + 0x18] = t0\n 19123: u64 [s1 + 0xd0] = a2\n 19127: u64 [a1 + 0x10] = a2\n 19130: u64 [a1 + 0x8] = ra\n 19133: a2 = a0\n 19135: u64 [a1] = a0\n 19137: a0 = 0xffffff60\n 19147: u64 [s1 + 0x98] = a0\n 19151: u64 [s1 + 0x90] = a1\n 19155: fallthrough\n      : @651 (gas: 19)\n 19156: u64 [s1 + 0xd8] = a2\n 19160: a0 = u64 [s1 + 0xb8]\n 19164: a2 = u64 [s1 + 0xf8]\n 19168: a0 = a2 <u a0\n 19171: a2 = u64 [s1 + 0xa8]\n 19175: a3 = a5 ^ a2\n 19178: u64 [s1 + 0xf0] = a5\n 19182: a2 = a5 <u a2\n 19185: a2 = a0 if a3 == 0\n 19188: a4 = u64 [s1 + 0xb0]\n 19192: a0 = t2 <u a4\n 19195: a3 = u64 [s1 + 0xa0]\n 19199: a5 = t1 ^ a3\n 19202: a3 = t1 <u a3\n 19205: a3 = a0 if a5 == 0\n 19208: a0 = t2 ^ a4\n 19211: a0 = a0 | a5\n 19214: a3 = a2 if a0 == 0\n 19217: jump @656 if a3 == 0\n      : @652 (gas: 6)\n 19221: a0 = s1 + 0x260\n 19225: u64 [s1 + 0xe8] = t1\n 19229: u64 [s1 + 0xc8] = t0\n 19233: u64 [s1 + 0xe0] = t2\n 19237: u64 [s1 + 0xc0] = ra\n 19241: ra = 628, jump @21\n      : @653 [@dyn 314] (gas: 10)\n 19247: a5 = u64 [s1 + 0xe0]\n 19251: a0 = u64 [s1 + 0xe8]\n 19255: a0 = a0 | a5\n 19258: a1 = u64 [s1 + 0xf8]\n 19262: a2 = u64 [s1 + 0x98]\n 19266: a1 = a1 <u a2\n 19269: a2 = u64 [s1 + 0xf0]\n 19273: a1 = 0 if a2 != 0\n 19275: a1 = 0 if a0 != 0\n 19277: jump @680 if a1 == 0\n      : @654 (gas: 13)\n 19281: t0 = u64 [s1 + 0x278]\n 19285: a2 = s1 + 0x200\n 19289: a1 = u64 [a2 + 0x70]\n 19292: a3 = u64 [a2 + 0x68]\n 19295: a4 = u64 [a2 + 0x60]\n 19298: a0 = u64 [s1 + 0xf8]\n 19302: i32 a0 = a0 + 0xa0\n 19306: u64 [a2 + 0x40] = a4\n 19309: u64 [a2 + 0x48] = a3\n 19312: u64 [a2 + 0x50] = a1\n 19315: a1 = s1 + 0x240\n 19319: u64 [s1 + 0x258] = t0\n 19323: ra = 630, jump @19\n      : @655 [@dyn 315] (gas: 36)\n 19329: t1 = u64 [s1 + 0xe8]\n 19333: a5 = u64 [s1 + 0xd8]\n 19337: a5 = a5 + 0x1\n 19340: a0 = a5 <u 0x1\n 19343: ra = u64 [s1 + 0xc0]\n 19347: ra = ra + a0\n 19350: a0 = a5 | ra\n 19353: a0 = a0 <u 0x1\n 19356: a1 = u64 [s1 + 0xd0]\n 19360: a0 = a0 + a1\n 19363: a1 = a0 <u a1\n 19366: a3 = u64 [s1 + 0xc8]\n 19370: a3 = a3 + a1\n 19373: a1 = u64 [s1 + 0xf8]\n 19377: t0 = a1 + 0x20\n 19380: a2 = t0 <u a1\n 19383: a4 = u64 [s1 + 0xf0]\n 19387: t2 = a4 + a2\n 19390: a4 = t2 <u a4\n 19393: a4 = a2 if a2 == 0\n 19396: a1 = u64 [s1 + 0xe0]\n 19400: a4 = a4 + a1\n 19403: a2 = a4 <u a1\n 19406: t1 = t1 + a2\n 19409: a1 = u64 [s1 + 0x90]\n 19413: u64 [a1 + 0x8] = ra\n 19416: a2 = a5\n 19418: u64 [a1] = a5\n 19420: u64 [a1 + 0x10] = a0\n 19423: u64 [a1 + 0x18] = a3\n 19426: u64 [s1 + 0xd0] = a0\n 19430: u64 [s1 + 0xf8] = t0\n 19434: a5 = t2\n 19436: t2 = a4\n 19438: t0 = a3\n 19440: jump @651\n      : @656 (gas: 11)\n 19443: a0 = u64 [s1 + 0xf8]\n 19447: a3 = a0 + 0xa0\n 19451: a0 = a3 <u a0\n 19454: a2 = u64 [s1 + 0xf0]\n 19458: a1 = a2 + a0\n 19461: a2 = a1 <u a2\n 19464: a2 = a0 if a0 == 0\n 19467: a0 = t2 + a2\n 19470: t0 = a0 <u t2\n 19473: t0 = t0 + t1\n 19476: fallthrough\n      : @657 (gas: 24)\n 19477: a4 = a3 + 0xffffffffffffff80\n 19480: a3 = a4 <u a3\n 19483: a5 = a1 + a3\n 19486: a5 = a5 + 0xffffffffffffffff\n 19489: a2 = a5 ^ a1\n 19492: a1 = a5 <u a1\n 19495: a1 = a3 if a2 == 0\n 19498: a2 = a0 + 0xffffffffffffffff\n 19501: a1 = a1 + a2\n 19504: a2 = a1 <u a2\n 19507: a0 = a0 <u 0x1\n 19510: a0 = t0 - a0\n 19513: a2 = a2 + a0\n 19516: u64 [s1 + 536] = 0\n 19520: u64 [s1 + 528] = 0\n 19524: u64 [s1 + 520] = 0\n 19528: u64 [s1 + 512] = 0x80\n 19534: u64 [s1 + 0x1e0] = a4\n 19538: u64 [s1 + 0x1e8] = a5\n 19542: u64 [s1 + 0x1f0] = a1\n 19546: a0 = s1 + 0x200\n 19550: a1 = s1 + 0x1e0\n 19554: u64 [s1 + 0x1f8] = a2\n 19558: ra = 632, jump @852\n      : @658 [@dyn 316] (gas: 3)\n 19564: a0 = s1 + 0x1c0\n 19568: a1 = 0x40\n 19571: ra = 634, jump @17\n      : @659 [@dyn 317] (gas: 13)\n 19577: a1 = s1 + 0x100\n 19581: a4 = u64 [a1 + 0xd8]\n 19585: a5 = u64 [a1 + 0xd0]\n 19589: a3 = u64 [a1 + 0xc8]\n 19593: a0 = u64 [a1 + 0xc0]\n 19597: a2 = a3 | a4\n 19600: a1 = a0 | a5\n 19603: a1 = a1 | a2\n 19606: a1 = a1 >> 0x20\n 19609: a2 = a2 | a5\n 19612: a2 = a2 << 0x20\n 19615: a1 = a1 | a2\n 19618: jump @680 if a1 != 0\n      : @660 (gas: 10)\n 19622: u64 [s1 + 440] = 0\n 19626: u64 [s1 + 432] = 0\n 19630: u64 [s1 + 424] = 0\n 19634: a1 = s1 + 0x1a0\n 19638: u64 [s1 + 416] = 0x20\n 19643: u64 [s1 + 0xf8] = a0\n 19647: u64 [s1 + 0xe0] = a3\n 19651: u64 [s1 + 0xf0] = a4\n 19655: u64 [s1 + 0xe8] = a5\n 19659: ra = 636, jump @19\n      : @661 [@dyn 318] (gas: 1)\n 19665: t0 = 638, jump @935\n      : @662 [@dyn 319] (gas: 12)\n 19671: u64 [s1 + 0x148] = a2\n 19675: u64 [s1 + 0x140] = a0\n 19679: u64 [s1 + 376] = 0\n 19683: u64 [s1 + 368] = 0\n 19687: u64 [s1 + 360] = 0\n 19691: u64 [s1 + 352] = 0x80\n 19697: u64 [s1 + 0x150] = a3\n 19701: a0 = s1 + 0x180\n 19705: a1 = s1 + 0x160\n 19709: a2 = s1 + 0x140\n 19713: u64 [s1 + 0x158] = a4\n 19717: ra = 640, jump @825\n      : @663 [@dyn 320] (gas: 5)\n 19723: a1 = u64 [s1 + 0x188]\n 19727: t0 = u64 [s1 + 0x198]\n 19731: t1 = u64 [s1 + 0x180]\n 19735: a3 = u64 [s1 + 0x190]\n 19739: jump @679\n      : @664 (gas: 8)\n 19742: a2 = s1 + 0x1078\n 19746: u64 [a2 + 1728] = 0\n 19750: u64 [a2 + 1720] = 0\n 19754: u64 [a2 + 1712] = 0\n 19758: a1 = s1 + 0x1720\n 19762: u64 [a2 + 1704] = 0x4\n 19767: a0 = 0\n 19769: ra = 642, jump @19\n      : @665 [@dyn 321] (gas: 37)\n 19775: a0 = sp + 0xffffffffffffffe0\n 19778: a4 = a0 & 0xffffffffffffffe0\n 19781: sp = a4\n 19783: u64 [s1 + 248] = 0\n 19787: t2 = 0\n 19789: t1 = 0\n 19791: t0 = 0\n 19793: ra = u64 [0x20018]\n 19798: a3 = u64 [0x20020]\n 19803: a1 = u64 [s1 + 0x70]\n 19806: a0 = a1 + 0x20\n 19809: u64 [s1 + 0x98] = a0\n 19813: a0 = a0 <u a1\n 19816: a1 = u64 [s1 + 0x68]\n 19819: a2 = a1 + a0\n 19822: u64 [s1 + 0x90] = a2\n 19826: a1 = a2 <u a1\n 19829: a1 = a0 if a0 == 0\n 19832: a5 = u64 [0x20028]\n 19837: a0 = u64 [0x20030]\n 19842: u64 [a4 + 0x18] = ra\n 19845: u64 [s1 + 0xc0] = a3\n 19849: u64 [a4 + 0x10] = a3\n 19852: u64 [s1 + 0xd0] = a5\n 19856: u64 [a4 + 0x8] = a5\n 19859: a5 = a4\n 19861: a2 = a0\n 19863: u64 [a4] = a0\n 19865: a0 = u64 [s1 + 0x60]\n 19868: a1 = a1 + a0\n 19871: u64 [s1 + 0x88] = a1\n 19875: a0 = a1 <u a0\n 19878: a1 = u64 [s1 + 0x58]\n 19881: a0 = a0 + a1\n 19884: u64 [s1 + 0x80] = a0\n 19888: u64 [s1 + 0x78] = a4\n 19891: fallthrough\n      : @666 (gas: 19)\n 19892: u64 [s1 + 0xc8] = a2\n 19896: u64 [s1 + 0xd8] = ra\n 19900: a0 = u64 [s1 + 0xb8]\n 19904: a1 = u64 [s1 + 0xf8]\n 19908: a0 = a1 <u a0\n 19911: a2 = u64 [s1 + 0xa8]\n 19915: a1 = t2 ^ a2\n 19918: a2 = t2 <u a2\n 19921: a2 = a0 if a1 == 0\n 19924: a4 = u64 [s1 + 0xb0]\n 19928: a0 = t1 <u a4\n 19931: a3 = u64 [s1 + 0xa0]\n 19935: a1 = t0 ^ a3\n 19938: a3 = t0 <u a3\n 19941: a3 = a0 if a1 == 0\n 19944: a0 = t1 ^ a4\n 19947: a0 = a0 | a1\n 19950: a3 = a2 if a0 == 0\n 19953: jump @671 if a3 == 0\n      : @667 (gas: 6)\n 19957: a0 = s1 + 0x1700\n 19961: a1 = a5\n 19963: u64 [s1 + 0xf0] = t0\n 19967: u64 [s1 + 0xe8] = t1\n 19971: u64 [s1 + 0xe0] = t2\n 19975: ra = 644, jump @21\n      : @668 [@dyn 322] (gas: 30)\n 19981: t2 = u64 [s1 + 0xf8]\n 19985: t1 = u64 [s1 + 0xe0]\n 19989: ra = u64 [s1 + 0xe8]\n 19993: a1 = u64 [s1 + 0x98]\n 19997: a0 = a1 + t2\n 20000: a1 = a0 <u a1\n 20003: a4 = u64 [s1 + 0x90]\n 20007: a2 = a4 + t1\n 20010: a2 = a2 + a1\n 20013: a5 = a2 ^ a4\n 20016: a4 = a2 <u a4\n 20019: a4 = a1 if a5 == 0\n 20022: a5 = u64 [s1 + 0x88]\n 20026: a1 = a5 + ra\n 20029: t0 = a1 <u a5\n 20032: a5 = u64 [s1 + 0xf0]\n 20036: a3 = u64 [s1 + 0x80]\n 20040: a5 = a5 + a3\n 20043: a5 = a5 + t0\n 20046: a4 = a4 + a1\n 20049: a1 = a4 <u a1\n 20052: a1 = a1 + a5\n 20055: a1 = a1 | a2\n 20058: a2 = a0 | a4\n 20061: a2 = a2 | a1\n 20064: a1 = a1 | a4\n 20067: a2 = a2 >> 0x20\n 20070: a1 = a1 << 0x20\n 20073: a1 = a1 | a2\n 20076: jump @680 if a1 != 0\n      : @669 (gas: 13)\n 20080: a5 = s1 + 0x1078\n 20084: t0 = u64 [a5 + 0x6a0]\n 20088: a3 = a5 + 0x600\n 20092: a1 = u64 [a3 + 0x98]\n 20096: a2 = u64 [a3 + 0x90]\n 20100: a4 = u64 [a3 + 0x88]\n 20104: u64 [a3 + 0x68] = a4\n 20107: u64 [a3 + 0x70] = a2\n 20110: u64 [a3 + 0x78] = a1\n 20113: a1 = s1 + 0x16e0\n 20117: u64 [a5 + 0x680] = t0\n 20121: u64 [s1 + 0xf8] = t2\n 20125: ra = 646, jump @19\n      : @670 [@dyn 323] (gas: 39)\n 20131: t0 = u64 [s1 + 0xf0]\n 20135: a3 = u64 [s1 + 0xc8]\n 20139: a3 = a3 + 0x1\n 20142: a0 = a3 <u 0x1\n 20145: ra = u64 [s1 + 0xd0]\n 20149: ra = ra + a0\n 20152: a0 = a3 | ra\n 20155: a0 = a0 <u 0x1\n 20158: a1 = u64 [s1 + 0xc0]\n 20162: t2 = a1 + a0\n 20165: a1 = t2 <u a1\n 20168: a0 = u64 [s1 + 0xd8]\n 20172: a0 = a0 + a1\n 20175: a1 = u64 [s1 + 0xf8]\n 20179: t1 = a1 + 0x20\n 20182: a2 = t1 <u a1\n 20185: a4 = u64 [s1 + 0xe0]\n 20189: a1 = a4 + a2\n 20192: a4 = a1 <u a4\n 20195: a4 = a2 if a2 == 0\n 20198: a2 = u64 [s1 + 0xe8]\n 20202: a4 = a4 + a2\n 20205: a2 = a4 <u a2\n 20208: t0 = t0 + a2\n 20211: a2 = ra\n 20213: u64 [s1 + 0xd0] = a2\n 20217: a5 = u64 [s1 + 0x78]\n 20220: u64 [a5 + 0x8] = a2\n 20223: a2 = a3\n 20225: u64 [a5] = a3\n 20227: a3 = t2\n 20229: u64 [a5 + 0x10] = a3\n 20232: ra = a0\n 20234: u64 [a5 + 0x18] = a0\n 20237: u64 [s1 + 0xc0] = a3\n 20241: u64 [s1 + 0xf8] = t1\n 20245: t2 = a1\n 20247: t1 = a4\n 20249: jump @666\n      : @671 (gas: 3)\n 20252: a4 = s1 + 0x1078\n 20256: a5 = u64 [s1 + 0x70]\n 20259: fallthrough\n      : @672 (gas: 24)\n 20260: a1 = u64 [s1 + 0xf8]\n 20264: a0 = a1 + 0x20\n 20267: a1 = a0 <u a1\n 20270: a2 = t2 + a1\n 20273: a3 = a2 <u t2\n 20276: a3 = a1 if a1 == 0\n 20279: a3 = a3 + t1\n 20282: a1 = a3 <u t1\n 20285: t0 = t0 + a1\n 20288: a1 = a4 + 0x600\n 20292: u64 [a1 + 0x28] = a5\n 20295: u64 [a1 + 0x8] = a0\n 20298: a0 = u64 [s1 + 0x68]\n 20301: u64 [a1 + 0x30] = a0\n 20304: a0 = u64 [s1 + 0x60]\n 20307: u64 [a1 + 0x38] = a0\n 20310: u64 [a1 + 0x10] = a2\n 20313: a0 = u64 [s1 + 0x58]\n 20316: u64 [a1 + 0x40] = a0\n 20319: u64 [a1 + 0x18] = a3\n 20322: a0 = s1 + 0x16a0\n 20326: a1 = s1 + 0x1680\n 20330: u64 [a4 + 0x620] = t0\n 20334: ra = 648, jump @852\n      : @673 [@dyn 324] (gas: 3)\n 20340: a0 = s1 + 0x1660\n 20344: a1 = 0x40\n 20347: ra = 650, jump @17\n      : @674 [@dyn 325] (gas: 13)\n 20353: a4 = s1 + 0x1078\n 20357: a3 = u64 [a4 + 0x600]\n 20361: a5 = u64 [a4 + 0x5f8]\n 20365: t0 = u64 [a4 + 0x5f0]\n 20369: a0 = u64 [a4 + 0x5e8]\n 20373: a2 = t0 | a3\n 20376: a1 = a0 | a5\n 20379: a1 = a1 | a2\n 20382: a1 = a1 >> 0x20\n 20385: a2 = a2 | a5\n 20388: a2 = a2 << 0x20\n 20391: a1 = a1 | a2\n 20394: jump @680 if a1 != 0\n      : @675 (gas: 10)\n 20398: u64 [a4 + 1504] = 0\n 20402: u64 [a4 + 1496] = 0\n 20406: u64 [a4 + 1488] = 0\n 20410: u64 [s1 + 0xf0] = a3\n 20414: a1 = s1 + 0x1640\n 20418: u64 [a4 + 1480] = 0x20\n 20423: u64 [s1 + 0xf8] = a0\n 20427: u64 [s1 + 0xe0] = t0\n 20431: u64 [s1 + 0xe8] = a5\n 20435: ra = 652, jump @19\n      : @676 [@dyn 326] (gas: 1)\n 20441: t0 = 654, jump @935\n      : @677 [@dyn 327] (gas: 19)\n 20447: a1 = s1 + 0x1078\n 20451: a5 = a1 + 0x500\n 20455: u64 [a5 + 0x70] = a2\n 20458: u64 [a5 + 0x68] = a0\n 20461: a0 = u64 [s1 + 0x58]\n 20464: u64 [a5 + 0xa0] = a0\n 20468: a0 = u64 [s1 + 0x60]\n 20471: u64 [a5 + 0x98] = a0\n 20475: a0 = u64 [s1 + 0x68]\n 20478: u64 [a5 + 0x90] = a0\n 20482: a0 = u64 [s1 + 0x70]\n 20485: u64 [a5 + 0x88] = a0\n 20489: u64 [a5 + 0x78] = a3\n 20492: a3 = a1\n 20494: a0 = s1 + 0x1620\n 20498: a1 = s1 + 0x1600\n 20502: a2 = s1 + 0x15e0\n 20506: u64 [a3 + 0x580] = a4\n 20510: ra = 656, jump @825\n      : @678 [@dyn 328] (gas: 6)\n 20516: a0 = s1 + 0x1078\n 20520: a1 = u64 [a0 + 0x5b0]\n 20524: t0 = u64 [a0 + 0x5c0]\n 20528: t1 = u64 [a0 + 0x5a8]\n 20532: a3 = u64 [a0 + 0x5b8]\n 20536: fallthrough\n      : @679 (gas: 28)\n 20537: a0 = u64 [s1 + 0xe0]\n 20541: a4 = a1 ^ a0\n 20544: a5 = a1 <u a0\n 20547: ra = a0\n 20549: a0 = u64 [s1 + 0xf8]\n 20553: t2 = t1 <u a0\n 20556: a5 = t2 if a4 == 0\n 20559: a0 = u64 [s1 + 0xe8]\n 20563: a4 = a3 - a0\n 20566: a3 = a3 <u a0\n 20569: a0 = u64 [s1 + 0xf0]\n 20573: a2 = t0 - a0\n 20576: a2 = a2 - a3\n 20579: a3 = a4 <u a5\n 20582: a2 = a2 - a3\n 20585: a0 = u64 [s1 + 0xf8]\n 20589: a4 = a4 - a5\n 20592: a1 = a1 - ra\n 20595: a3 = a1 - t2\n 20598: a1 = t1 - a0\n 20601: a2 = a2 | a3\n 20604: a3 = a1 | a4\n 20607: a3 = a3 | a2\n 20610: a2 = a2 | a4\n 20613: a3 = a3 >> 0x20\n 20616: a2 = a2 << 0x20\n 20619: a2 = a2 | a3\n 20622: jump @818 if a2 == 0\n      : @680 (gas: 1)\n 20626: trap\n      : @681 (gas: 3)\n 20627: a0 = s1 + 0x1320\n 20631: a1 = 0x40\n 20634: ra = 658, jump @17\n      : @682 [@dyn 329] (gas: 14)\n 20640: a0 = s1 + 0x1078\n 20644: a2 = a0 + 0x200\n 20648: a1 = u64 [a2 + 0xc0]\n 20652: u64 [s1 + 0xf0] = a1\n 20656: a1 = u64 [a2 + 0xb8]\n 20660: u64 [s1 + 0xe8] = a1\n 20664: a1 = u64 [a2 + 0xb0]\n 20668: u64 [s1 + 0xe0] = a1\n 20672: a0 = u64 [a2 + 0xa8]\n 20676: u64 [s1 + 0xf8] = a0\n 20680: ra = 0x294\n 20684: ecalli 11 // 'return_data_size'\n 20686: t0 = 0x296\n 20690: jump @954\n      : @683 [@dyn 330] (gas: 1)\n 20693: t0 = 662, jump @954\n      : @684 [@dyn 331] (gas: 1)\n 20699: jump @680 if a1 != 0\n      : @685 (gas: 3)\n 20702: a2 = a0\n 20704: a0 = a0 >> 0x20\n 20707: jump @680 if a0 != 0\n      : @686 (gas: 6)\n 20710: i32 a0 = a2 + 0\n 20712: u64 [s1 + 0xf0] = a0\n 20716: a0 = u64 [s1 + 0xf8]\n 20720: a1 = a2\n 20722: u64 [s1 + 0xe8] = a2\n 20726: ra = 664, jump @27\n      : @687 [@dyn 332] (gas: 11)\n 20732: a1 = s1 + 0x1878\n 20736: a2 = u64 [s1 + 0xe8]\n 20740: u32 [a1 + 0x568] = a2\n 20744: i32 a0 = a0 + 0\n 20746: a1 = s1 + 0x2000\n 20750: i32 a1 = a1 + 0xfffffffffffffde0\n 20754: a2 = 0\n 20756: ecalli 10 // 'return_data_copy'\n 20758: a0 = s1 + 0x1878\n 20762: a0 = i32 [a0 + 0x568]\n 20766: fallthrough\n      : @688 (gas: 2)\n 20767: a1 = u64 [s1 + 0xf0]\n 20771: jump @680 if a0 <u a1\n      : @689 (gas: 2)\n 20775: ecalli 11 // 'return_data_size'\n 20777: fallthrough\n      : @690 (gas: 3)\n 20778: a1 = a0\n 20780: a0 = a0 >> 0x20\n 20783: jump @680 if a0 != 0\n      : @691 (gas: 3)\n 20787: a0 = u64 [s1 + 0xf8]\n 20791: u64 [s1 + 0xf0] = a1\n 20795: ra = 666, jump @27\n      : @692 [@dyn 333] (gas: 6)\n 20801: i32 a1 = a0 + 0\n 20803: a2 = i32 [s1 + 0xf0]\n 20807: a0 = 0x1\n 20810: ecalli 12 // 'seal_return'\n 20812: ecalli 11 // 'return_data_size'\n 20814: jump @713\n      : @693 (gas: 3)\n 20817: a0 = s1 + 0x10e0\n 20821: a1 = 0x40\n 20824: ra = 668, jump @17\n      : @694 [@dyn 334] (gas: 13)\n 20830: a0 = s1 + 0x1078\n 20834: a1 = u64 [a0 + 0x80]\n 20838: u64 [s1 + 0xf0] = a1\n 20842: a1 = u64 [a0 + 0x78]\n 20845: u64 [s1 + 0xe8] = a1\n 20849: a1 = u64 [a0 + 0x70]\n 20852: u64 [s1 + 0xe0] = a1\n 20856: a0 = u64 [a0 + 0x68]\n 20859: u64 [s1 + 0xf8] = a0\n 20863: ra = 0x29e\n 20867: ecalli 11 // 'return_data_size'\n 20869: t0 = 0x2a0\n 20873: jump @954\n      : @695 [@dyn 335] (gas: 1)\n 20876: t0 = 672, jump @954\n      : @696 [@dyn 336] (gas: 1)\n 20882: jump @680 if a1 != 0\n      : @697 (gas: 2)\n 20886: a1 = a0 >> 0x20\n 20889: jump @680 if a1 != 0\n      : @698 (gas: 6)\n 20893: a1 = a0\n 20895: u64 [s1 + 0xe8] = a0\n 20899: i32 a0 = a0 + 0\n 20901: u64 [s1 + 0xf0] = a0\n 20905: a0 = u64 [s1 + 0xf8]\n 20909: ra = 674, jump @27\n      : @699 [@dyn 337] (gas: 11)\n 20915: a1 = s1 + 0x1878\n 20919: a2 = u64 [s1 + 0xe8]\n 20923: u32 [a1 + 0x608] = a2\n 20927: i32 a0 = a0 + 0\n 20929: a1 = s1 + 0x2000\n 20933: i32 a1 = a1 + 0xfffffffffffffe80\n 20937: a2 = 0\n 20939: ecalli 10 // 'return_data_copy'\n 20941: a0 = s1 + 0x1878\n 20945: a0 = i32 [a0 + 0x608]\n 20949: jump @688\n      : @700 (gas: 2)\n 20952: ecalli 11 // 'return_data_size'\n 20954: fallthrough\n      : @701 (gas: 1)\n 20955: jump @712 if a0 != 0\n      : @702 (gas: 5)\n 20959: u64 [s1 + 240] = 0\n 20963: u64 [s1 + 232] = 0\n 20967: u64 [s1 + 224] = 0\n 20971: u64 [s1 + 248] = 0x60\n 20976: fallthrough\n      : @703 (gas: 4)\n 20977: a0 = s1 + 0x7ff\n 20981: a0 = a0 + 0x581\n 20985: a1 = 0x40\n 20988: ra = 676, jump @17\n      : @704 [@dyn 338] (gas: 19)\n 20994: a0 = s1 + 0x7ff\n 20998: a0 = a0 + 0x79\n 21001: a5 = a0 + 0x500\n 21005: a3 = u64 [a5 + 0x20]\n 21008: a4 = u64 [a5 + 0x18]\n 21011: a2 = u64 [a5 + 0x10]\n 21014: a1 = u64 [a5 + 0x8]\n 21017: u64 [s1 + 0xd0] = a2\n 21021: u64 [s1 + 0xc8] = a3\n 21025: a0 = a2 | a3\n 21028: u64 [s1 + 0xd8] = a1\n 21032: a1 = a1 | a4\n 21035: a1 = a1 | a0\n 21038: a1 = a1 >> 0x20\n 21041: u64 [s1 + 0xc0] = a4\n 21045: a0 = a0 | a4\n 21048: a0 = a0 << 0x20\n 21051: a0 = a0 | a1\n 21054: jump @680 if a0 != 0\n      : @705 (gas: 11)\n 21058: a2 = s1 + 0x7ff\n 21062: a2 = a2 + 0x79\n 21065: u64 [a2 + 1272] = 0\n 21069: u64 [a2 + 1264] = 0\n 21073: u64 [a2 + 1256] = 0\n 21077: a0 = 0x7d9137fe00000000\n 21087: a1 = s1 + 0x7ff\n 21091: a1 = a1 + 0x561\n 21095: u64 [a2 + 0x500] = a0\n 21099: a0 = u64 [s1 + 0xd8]\n 21103: ra = 678, jump @19\n      : @706 [@dyn 339] (gas: 10)\n 21109: a0 = u64 [s1 + 0xc8]\n 21113: a1 = u64 [s1 + 0xc0]\n 21117: a0 = a0 | a1\n 21120: a1 = 0xfffffffc\n 21130: a2 = u64 [s1 + 0xd8]\n 21134: a1 = a2 <u a1\n 21137: a2 = u64 [s1 + 0xd0]\n 21141: a1 = 0 if a2 != 0\n 21143: a1 = 0 if a0 != 0\n 21145: jump @680 if a1 == 0\n      : @707 (gas: 11)\n 21149: a0 = u64 [s1 + 0xd8]\n 21153: i32 a0 = a0 + 0x4\n 21156: a2 = s1 + 0x7ff\n 21160: a2 = a2 + 0x79\n 21163: u64 [a2 + 1248] = 0\n 21167: u64 [a2 + 1240] = 0\n 21171: u64 [a2 + 1224] = 0x20\n 21176: a1 = s1 + 0x7ff\n 21180: a1 = a1 + 0x541\n 21184: u64 [a2 + 1232] = 0\n 21188: ra = 680, jump @19\n      : @708 [@dyn 340] (gas: 35)\n 21194: a1 = u64 [s1 + 0xd8]\n 21198: a0 = a1 + 0x24\n 21201: a1 = a0 <u a1\n 21204: a3 = u64 [s1 + 0xd0]\n 21208: a2 = a3 + a1\n 21211: a3 = a2 <u a3\n 21214: a3 = a1 if a1 == 0\n 21217: a1 = u64 [s1 + 0xc0]\n 21221: a3 = a3 + a1\n 21224: a1 = a3 <u a1\n 21227: a4 = u64 [s1 + 0xc8]\n 21231: a4 = a4 + a1\n 21234: a1 = s1 + 0x7ff\n 21238: a1 = a1 + 0x79\n 21241: a5 = a1 + 0x400\n 21245: u64 [a5 + 0x70] = a2\n 21248: u64 [a5 + 0x68] = a0\n 21251: a0 = u64 [s1 + 0xe0]\n 21255: u64 [a5 + 0xa0] = a0\n 21259: a0 = u64 [s1 + 0xe8]\n 21263: u64 [a5 + 0x98] = a0\n 21267: a0 = u64 [s1 + 0xf0]\n 21271: u64 [a5 + 0x90] = a0\n 21275: a0 = u64 [s1 + 0xf8]\n 21279: u64 [a5 + 0x88] = a0\n 21283: u64 [a5 + 0x78] = a3\n 21286: a3 = a1\n 21288: a0 = s1 + 0x7ff\n 21292: a0 = a0 + 0x521\n 21296: a1 = s1 + 0x7ff\n 21300: a1 = a1 + 0x501\n 21304: a2 = s1 + 0x7ff\n 21308: a2 = a2 + 0x4e1\n 21312: u64 [a3 + 0x480] = a4\n 21316: ra = 682, jump @825\n      : @709 [@dyn 341] (gas: 34)\n 21322: a1 = s1 + 0x7ff\n 21326: a1 = a1 + 0x79\n 21329: a0 = u64 [a1 + 0x4b0]\n 21333: t0 = u64 [a1 + 0x4c0]\n 21337: t1 = u64 [a1 + 0x4a8]\n 21341: a3 = u64 [a1 + 0x4b8]\n 21345: a1 = u64 [s1 + 0xd0]\n 21349: a4 = a0 ^ a1\n 21352: a5 = a0 <u a1\n 21355: ra = a1\n 21357: t2 = u64 [s1 + 0xd8]\n 21361: a1 = t1 <u t2\n 21364: a5 = a1 if a4 == 0\n 21367: a2 = u64 [s1 + 0xc0]\n 21371: a4 = a3 - a2\n 21374: a3 = a3 <u a2\n 21377: a2 = u64 [s1 + 0xc8]\n 21381: a2 = t0 - a2\n 21384: a2 = a2 - a3\n 21387: a3 = a4 <u a5\n 21390: a2 = a2 - a3\n 21393: a4 = a4 - a5\n 21396: a0 = a0 - ra\n 21399: a0 = a0 - a1\n 21402: a1 = t1 - t2\n 21405: a0 = a0 | a2\n 21408: a2 = a1\n 21410: a1 = a1 | a4\n 21413: a1 = a1 | a0\n 21416: a0 = a0 | a4\n 21419: a1 = a1 >> 0x20\n 21422: a0 = a0 << 0x20\n 21425: a0 = a0 | a1\n 21428: jump @680 if a0 != 0\n      : @710 (gas: 4)\n 21432: a0 = u64 [s1 + 0xd8]\n 21436: a1 = a2\n 21438: u64 [s1 + 0xf8] = a2\n 21442: ra = 684, jump @27\n      : @711 [@dyn 342] (gas: 6)\n 21448: i32 a1 = a0 + 0\n 21450: a2 = i32 [s1 + 0xf8]\n 21454: a0 = 0x1\n 21457: ecalli 12 // 'seal_return'\n 21459: ecalli 11 // 'return_data_size'\n 21461: jump @713\n      : @712 (gas: 2)\n 21463: ecalli 11 // 'return_data_size'\n 21465: fallthrough\n      : @713 (gas: 13)\n 21466: a2 = a0\n 21468: a3 = s1 + 0x7ff\n 21472: a3 = a3 + 0x79\n 21475: u64 [a3 + 1472] = 0\n 21479: u64 [a3 + 1464] = 0\n 21483: u64 [a3 + 1456] = 0\n 21487: a0 = s1 + 0x7ff\n 21491: a0 = a0 + 0x641\n 21495: a1 = s1 + 0x7ff\n 21499: a1 = a1 + 0x621\n 21503: u64 [s1 + 0xb8] = a2\n 21507: u64 [a3 + 0x5a8] = a2\n 21511: ra = 686, jump @862\n      : @714 [@dyn 343] (gas: 15)\n 21517: a0 = s1 + 0x7ff\n 21521: a0 = a0 + 0x79\n 21524: a2 = a0 + 0x500\n 21528: a1 = u64 [a2 + 0xc8]\n 21532: u64 [s1 + 0xd8] = a1\n 21536: a1 = u64 [a2 + 0xd0]\n 21540: u64 [s1 + 0xd0] = a1\n 21544: a1 = u64 [a2 + 0xd8]\n 21548: u64 [s1 + 0xc8] = a1\n 21552: a1 = u64 [a2 + 0xe0]\n 21556: u64 [s1 + 0xc0] = a1\n 21560: a0 = s1 + 0x7ff\n 21564: a0 = a0 + 0x601\n 21568: a1 = 0x40\n 21571: ra = 688, jump @17\n      : @715 [@dyn 344] (gas: 29)\n 21577: a0 = s1 + 0x7ff\n 21581: a0 = a0 + 0x79\n 21584: a1 = u64 [a0 + 0x5a0]\n 21588: u64 [s1 + 0xe0] = a1\n 21592: a2 = u64 [a0 + 0x598]\n 21596: u64 [s1 + 0xe8] = a2\n 21600: a5 = u64 [a0 + 0x590]\n 21604: u64 [s1 + 0xf0] = a5\n 21608: a4 = u64 [a0 + 0x588]\n 21612: u64 [s1 + 0xf8] = a4\n 21616: a3 = u64 [s1 + 0xc0]\n 21620: u64 [a0 + 0x560] = a3\n 21624: a3 = u64 [s1 + 0xc8]\n 21628: u64 [a0 + 0x558] = a3\n 21632: a3 = u64 [s1 + 0xd0]\n 21636: u64 [a0 + 0x550] = a3\n 21640: a3 = u64 [s1 + 0xd8]\n 21644: u64 [a0 + 0x548] = a3\n 21648: a3 = a0 + 0x500\n 21652: u64 [a3 + 0x80] = a1\n 21656: u64 [a3 + 0x78] = a2\n 21659: u64 [a3 + 0x70] = a5\n 21662: a2 = a0\n 21664: a0 = s1 + 0x7ff\n 21668: a0 = a0 + 0x5e1\n 21672: a1 = s1 + 0x7ff\n 21676: a1 = a1 + 0x5c1\n 21680: u64 [a2 + 0x568] = a4\n 21684: ra = 690, jump @852\n      : @716 [@dyn 345] (gas: 12)\n 21690: a0 = u64 [s1 + 0xe0]\n 21694: a1 = u64 [s1 + 0xf0]\n 21698: a0 = a0 | a1\n 21701: a2 = u64 [s1 + 0xe8]\n 21705: a1 = u64 [s1 + 0xf8]\n 21709: a1 = a1 | a2\n 21712: a1 = a1 | a0\n 21715: a1 = a1 >> 0x20\n 21718: a0 = a0 | a2\n 21721: a0 = a0 << 0x20\n 21724: a0 = a0 | a1\n 21727: jump @680 if a0 != 0\n      : @717 (gas: 11)\n 21731: a0 = s1 + 0x7ff\n 21735: a0 = a0 + 0x79\n 21738: u64 [a0 + 1344] = 0\n 21742: u64 [a0 + 1336] = 0\n 21746: u64 [a0 + 1328] = 0\n 21750: a1 = s1 + 0x7ff\n 21754: a1 = a1 + 0x5a1\n 21758: a2 = u64 [s1 + 0xb8]\n 21762: u64 [a0 + 0x528] = a2\n 21766: a0 = u64 [s1 + 0xf8]\n 21770: ra = 692, jump @19\n      : @718 [@dyn 346] (gas: 2)\n 21776: ecalli 11 // 'return_data_size'\n 21778: fallthrough\n      : @719 (gas: 10)\n 21779: a1 = u64 [s1 + 0xe8]\n 21783: a2 = u64 [s1 + 0xe0]\n 21787: a1 = a1 | a2\n 21790: a2 = 0xffffffe0\n 21800: a3 = u64 [s1 + 0xf8]\n 21804: a2 = a3 <u a2\n 21807: a3 = u64 [s1 + 0xf0]\n 21811: a2 = 0 if a3 != 0\n 21813: a2 = 0 if a1 != 0\n 21815: jump @680 if a2 == 0\n      : @720 (gas: 3)\n 21819: a1 = a0\n 21821: a0 = a0 >> 0x20\n 21824: jump @680 if a0 != 0\n      : @721 (gas: 8)\n 21828: a0 = u64 [s1 + 0xf8]\n 21832: i32 a0 = a0 + 0x20\n 21835: a2 = a1\n 21837: u64 [s1 + 0xd0] = a1\n 21841: i32 a1 = a1 + 0\n 21843: u64 [s1 + 0xd8] = a1\n 21847: a1 = a2\n 21849: ra = 694, jump @27\n      : @722 [@dyn 347] (gas: 9)\n 21855: a1 = s1 + 0x1878\n 21859: a2 = u64 [s1 + 0xd0]\n 21863: u32 [a1 + 0x688] = a2\n 21867: i32 a0 = a0 + 0\n 21869: a1 = s1 + 0x2000\n 21873: i32 a1 = a1 + 0xffffffffffffff00\n 21877: a2 = 0\n 21879: ecalli 10 // 'return_data_copy'\n 21881: fallthrough\n      : @723 (gas: 4)\n 21882: a0 = s1 + 0x1878\n 21886: a0 = i32 [a0 + 0x688]\n 21890: a1 = u64 [s1 + 0xd8]\n 21894: jump @680 if a0 <u a1\n      : @724 (gas: 1)\n 21898: jump @703\n      : @725 (gas: 3)\n 21901: a1 = 0x20100\n 21906: i32 a1 = a1 + 0\n 21908: fallthrough\n      : @726 (gas: 4)\n 21909: a0 = 0x1\n 21912: a2 = 0\n 21914: ecalli 12 // 'seal_return'\n 21916: fallthrough\n      : @727 (gas: 3)\n 21917: a0 = 0\n 21919: a1 = 0\n 21921: ra = 696, jump @27\n      : @728 [@dyn 348] (gas: 2)\n 21927: i32 a1 = a0 + 0\n 21929: jump @726\n      : @729 (gas: 6)\n 21931: a1 = 0x20100\n 21936: i32 a1 = a1 + 0\n 21938: a0 = 0x1\n 21941: a2 = 0\n 21943: ecalli 12 // 'seal_return'\n 21945: jump @727\n      : @730 (gas: 6)\n 21947: a1 = 0x20100\n 21952: i32 a1 = a1 + 0\n 21954: a0 = 0x1\n 21957: a2 = 0\n 21959: ecalli 12 // 'seal_return'\n 21961: jump @727\n      : @731 (gas: 6)\n 21963: a1 = 0x20100\n 21968: i32 a1 = a1 + 0\n 21970: a0 = 0x1\n 21973: a2 = 0\n 21975: ecalli 12 // 'seal_return'\n 21977: jump @727\n      : @732 (gas: 6)\n 21979: a1 = 0x20100\n 21984: i32 a1 = a1 + 0\n 21986: a0 = 0x1\n 21989: a2 = 0\n 21991: ecalli 12 // 'seal_return'\n 21993: jump @727\n      : @733 (gas: 6)\n 21995: a1 = 0x20100\n 22000: i32 a1 = a1 + 0\n 22002: a0 = 0x1\n 22005: a2 = 0\n 22007: ecalli 12 // 'seal_return'\n 22009: jump @727\n      : @734 (gas: 6)\n 22011: a1 = 0x20100\n 22016: i32 a1 = a1 + 0\n 22018: a0 = 0x1\n 22021: a2 = 0\n 22023: ecalli 12 // 'seal_return'\n 22025: jump @727\n      : @735 (gas: 6)\n 22027: a1 = 0x20100\n 22032: i32 a1 = a1 + 0\n 22034: a0 = 0x1\n 22037: a2 = 0\n 22039: ecalli 12 // 'seal_return'\n 22041: jump @727\n      : @736 (gas: 6)\n 22043: a1 = 0x20100\n 22048: i32 a1 = a1 + 0\n 22050: a0 = 0x1\n 22053: a2 = 0\n 22055: ecalli 12 // 'seal_return'\n 22057: jump @727\n      : @737 (gas: 6)\n 22060: a1 = 0x20100\n 22065: i32 a1 = a1 + 0\n 22067: a0 = 0x1\n 22070: a2 = 0\n 22072: ecalli 12 // 'seal_return'\n 22074: jump @727\n      : @738 (gas: 6)\n 22077: a1 = 0x20100\n 22082: i32 a1 = a1 + 0\n 22084: a0 = 0x1\n 22087: a2 = 0\n 22089: ecalli 12 // 'seal_return'\n 22091: jump @727\n      : @739 (gas: 6)\n 22094: u64 [s1 + 304] = 0\n 22098: u64 [s1 + 296] = 0\n 22102: u64 [s1 + 288] = 0\n 22106: t0 = 0x2ba\n 22110: a0 = 0x4e487b7100000000\n 22120: fallthrough\n      : @740 [@dyn 349] (gas: 4)\n 22121: a1 = s1 + 0x120\n 22125: u64 [s1 + 0x138] = a0\n 22129: a0 = 0\n 22131: ra = 700, jump @19\n      : @741 [@dyn 350] (gas: 7)\n 22137: u64 [s1 + 280] = 0\n 22141: u64 [s1 + 272] = 0\n 22145: u64 [s1 + 256] = 0x22\n 22150: a0 = 0x4\n 22153: a1 = s1 + 0x100\n 22157: u64 [s1 + 264] = 0\n 22161: ra = 702, jump @19\n      : @742 [@dyn 351] (gas: 2)\n 22167: a1 = i32 [0x200ec]\n 22172: jump @744 if a1 >u 63\n      : @743 (gas: 4)\n 22176: u32 [0x200ec] = 0x40\n 22182: a1 = 0x20100\n 22187: i32 a1 = a1 + 0\n 22189: jump @795\n      : @744 (gas: 3)\n 22192: a1 = 0x20100\n 22197: i32 a1 = a1 + 0\n 22199: jump @795\n      : @745 (gas: 6)\n 22202: a1 = 0x20100\n 22207: i32 a1 = a1 + 0\n 22209: a0 = 0x1\n 22212: a2 = 0\n 22214: ecalli 12 // 'seal_return'\n 22216: jump @727\n      : @746 (gas: 6)\n 22219: a1 = 0x20100\n 22224: i32 a1 = a1 + 0\n 22226: a0 = 0x1\n 22229: a2 = 0\n 22231: ecalli 12 // 'seal_return'\n 22233: jump @727\n      : @747 (gas: 6)\n 22236: a1 = 0x20100\n 22241: i32 a1 = a1 + 0\n 22243: a0 = 0x1\n 22246: a2 = 0\n 22248: ecalli 12 // 'seal_return'\n 22250: jump @727\n      : @748 (gas: 6)\n 22253: a1 = 0x20100\n 22258: i32 a1 = a1 + 0\n 22260: a0 = 0x1\n 22263: a2 = 0\n 22265: ecalli 12 // 'seal_return'\n 22267: jump @727\n      : @749 (gas: 11)\n 22270: a2 = s1 + 0x7ff\n 22274: a2 = a2 + 0x79\n 22277: u64 [a2 + 664] = 0\n 22281: u64 [a2 + 656] = 0\n 22285: a0 = 0x356680b700000000\n 22295: u64 [a2 + 0x2a0] = a0\n 22299: a1 = s1 + 0x7ff\n 22303: a1 = a1 + 0x301\n 22307: u64 [a2 + 648] = 0\n 22311: a0 = 0\n 22313: ra = 704, jump @19\n      : @750 [@dyn 352] (gas: 3)\n 22319: a0 = u64 [s1 + 0xd8]\n 22323: a0 = i32 [a0]\n 22325: jump @752 if a0 >u 31\n      : @751 (gas: 7)\n 22329: a1 = u64 [s1 + 0xd8]\n 22333: u32 [a1 + 0] = 0x20\n 22336: a0 = 0x1\n 22339: a2 = 0x4\n 22342: a1 = u64 [s1 + 0xd0]\n 22346: ecalli 12 // 'seal_return'\n 22348: jump @767\n      : @752 (gas: 5)\n 22351: a0 = 0x1\n 22354: a2 = 0x4\n 22357: a1 = u64 [s1 + 0xd0]\n 22361: ecalli 12 // 'seal_return'\n 22363: jump @767\n      : @753 (gas: 12)\n 22366: a0 = s1 + 0x7ff\n 22370: a0 = a0 + 0x79\n 22373: u64 [a0 + 728] = 0\n 22377: u64 [a0 + 720] = 0\n 22381: u64 [a0 + 712] = 0\n 22385: a2 = a0\n 22387: a0 = 0x96c6fd1e00000000\n 22397: a1 = s1 + 0x7ff\n 22401: a1 = a1 + 0x341\n 22405: u64 [a2 + 0x2e0] = a0\n 22409: a0 = 0\n 22411: ra = 706, jump @19\n      : @754 [@dyn 353] (gas: 11)\n 22417: a0 = s1 + 0x7ff\n 22421: a0 = a0 + 0x79\n 22424: u64 [a0 + 704] = 0\n 22428: u64 [a0 + 696] = 0\n 22432: u64 [a0 + 688] = 0\n 22436: a2 = a0\n 22438: a0 = 0x4\n 22441: a1 = s1 + 0x7ff\n 22445: a1 = a1 + 0x321\n 22449: u64 [a2 + 680] = 0\n 22453: ra = 708, jump @19\n      : @755 [@dyn 354] (gas: 3)\n 22459: a0 = u64 [s1 + 0xd8]\n 22463: a0 = i32 [a0]\n 22465: jump @757 if a0 >u 63\n      : @756 (gas: 7)\n 22469: a1 = u64 [s1 + 0xd8]\n 22473: u32 [a1 + 0] = 0x40\n 22476: a0 = 0x1\n 22479: a2 = 0x24\n 22482: a1 = u64 [s1 + 0xd0]\n 22486: ecalli 12 // 'seal_return'\n 22488: jump @767\n      : @757 (gas: 5)\n 22491: a0 = 0x1\n 22494: a2 = 0x24\n 22497: a1 = u64 [s1 + 0xd0]\n 22501: ecalli 12 // 'seal_return'\n 22503: jump @767\n      : @758 (gas: 12)\n 22506: a0 = s1 + 0x7ff\n 22510: a0 = a0 + 0x79\n 22513: u64 [a0 + 856] = 0\n 22517: u64 [a0 + 848] = 0\n 22521: u64 [a0 + 840] = 0\n 22525: a2 = a0\n 22527: a0 = 0xe450d38c00000000\n 22537: a1 = s1 + 0x7ff\n 22541: a1 = a1 + 0x3c1\n 22545: u64 [a2 + 0x360] = a0\n 22549: a0 = 0\n 22551: ra = 710, jump @19\n      : @759 [@dyn 355] (gas: 6)\n 22557: a0 = u64 [s1 + 0xe0]\n 22561: ra = 0x2c8\n 22565: ecalli 4 // 'caller'\n 22567: a2 = u64 [s1 + 0xe8]\n 22571: t0 = 0x2ca\n 22575: jump @929\n      : @760 [@dyn 356] (gas: 2)\n 22578: a2 = u64 [s1 + 0xe8]\n 22582: t0 = 714, jump @929\n      : @761 [@dyn 357] (gas: 9)\n 22588: u64 [a2 + 832] = 0\n 22592: a4 = a2 + 0x300\n 22596: u64 [a4 + 0x38] = a1\n 22599: u64 [a4 + 0x30] = a0\n 22602: a0 = 0x4\n 22605: a1 = s1 + 0x7ff\n 22609: a1 = a1 + 0x3a1\n 22613: u64 [a4 + 0x28] = a3\n 22616: ra = 716, jump @19\n      : @762 [@dyn 358] (gas: 15)\n 22622: a0 = u64 [s1 + 0x98]\n 22626: a3 = s1 + 0x7ff\n 22630: a3 = a3 + 0x79\n 22633: a4 = a3 + 0x300\n 22637: u64 [a4 + 0x20] = a0\n 22640: a0 = u64 [s1 + 0x90]\n 22644: u64 [a4 + 0x18] = a0\n 22647: a0 = u64 [s1 + 0xa0]\n 22651: u64 [a4 + 0x10] = a0\n 22654: a0 = 0x24\n 22657: a1 = s1 + 0x7ff\n 22661: a1 = a1 + 0x381\n 22665: a2 = u64 [s1 + 0xa8]\n 22669: u64 [a4 + 0x8] = a2\n 22672: ra = 718, jump @19\n      : @763 [@dyn 359] (gas: 13)\n 22678: a1 = s1 + 0x7ff\n 22682: a1 = a1 + 0x79\n 22685: u64 [a1 + 768] = 0\n 22689: a0 = u64 [s1 + 0xf8]\n 22693: u64 [a1 + 0x2f0] = a0\n 22697: a0 = u64 [s1 + 0xf0]\n 22701: u64 [a1 + 0x2e8] = a0\n 22705: a2 = a1\n 22707: a0 = 0x44\n 22710: a1 = s1 + 0x7ff\n 22714: a1 = a1 + 0x361\n 22718: u64 [a2 + 760] = 0\n 22722: ra = 720, jump @19\n      : @764 [@dyn 360] (gas: 3)\n 22728: a0 = u64 [s1 + 0xd8]\n 22732: a0 = i32 [a0]\n 22734: jump @766 if a0 >u 127\n      : @765 (gas: 7)\n 22738: a1 = u64 [s1 + 0xd8]\n 22742: u32 [a1 + 0] = 0x80\n 22746: a0 = 0x1\n 22749: a2 = 0x64\n 22752: a1 = u64 [s1 + 0xd0]\n 22756: ecalli 12 // 'seal_return'\n 22758: jump @767\n      : @766 (gas: 5)\n 22760: a0 = 0x1\n 22763: a2 = 0x64\n 22766: a1 = u64 [s1 + 0xd0]\n 22770: ecalli 12 // 'seal_return'\n 22772: fallthrough\n      : @767 (gas: 6)\n 22773: a1 = 0x20100\n 22778: i32 a1 = a1 + 0\n 22780: a0 = 0x1\n 22783: a2 = 0\n 22785: ecalli 12 // 'seal_return'\n 22787: jump @727\n      : @768 (gas: 8)\n 22790: u64 [s1 + 1264] = 0\n 22794: u64 [s1 + 1256] = 0\n 22798: u64 [s1 + 1248] = 0\n 22802: a0 = 0x9dce2b3c00000000\n 22812: a1 = s1 + 0x4e0\n 22816: u64 [s1 + 0x4f8] = a0\n 22820: a0 = 0\n 22822: ra = 722, jump @19\n      : @769 [@dyn 361] (gas: 2)\n 22828: a1 = i32 [0x200ec]\n 22833: jump @771 if a1 >u 31\n      : @770 (gas: 2)\n 22837: u32 [0x200ec] = 0x20\n 22843: fallthrough\n      : @771 (gas: 6)\n 22844: a1 = 0x20100\n 22849: i32 a1 = a1 + 0\n 22851: a0 = 0x1\n 22854: a2 = 0x4\n 22857: ecalli 12 // 'seal_return'\n 22859: fallthrough\n      : @772 (gas: 8)\n 22860: u64 [s1 + 1328] = 0\n 22864: u64 [s1 + 1320] = 0\n 22868: u64 [s1 + 1312] = 0\n 22872: a0 = 0xec442f0500000000\n 22882: a1 = s1 + 0x520\n 22886: u64 [s1 + 0x538] = a0\n 22890: a0 = 0\n 22892: ra = 724, jump @19\n      : @773 [@dyn 362] (gas: 7)\n 22898: u64 [s1 + 1304] = 0\n 22902: u64 [s1 + 1296] = 0\n 22906: u64 [s1 + 1288] = 0\n 22910: a0 = 0x4\n 22913: a1 = s1 + 0x500\n 22917: u64 [s1 + 1280] = 0\n 22921: ra = 726, jump @19\n      : @774 [@dyn 363] (gas: 2)\n 22927: a1 = i32 [0x200ec]\n 22932: jump @776 if a1 >u 63\n      : @775 (gas: 4)\n 22936: u32 [0x200ec] = 0x40\n 22942: a1 = 0x20100\n 22947: i32 a1 = a1 + 0\n 22949: jump @795\n      : @776 (gas: 3)\n 22952: a1 = 0x20100\n 22957: i32 a1 = a1 + 0\n 22959: jump @795\n      : @777 (gas: 6)\n 22962: u64 [s1 + 1392] = 0\n 22966: u64 [s1 + 1384] = 0\n 22970: u64 [s1 + 1376] = 0\n 22974: t0 = 0x2d8\n 22978: a0 = 0x4e487b7100000000\n 22988: fallthrough\n      : @778 [@dyn 364] (gas: 4)\n 22989: a1 = s1 + 0x560\n 22993: u64 [s1 + 0x578] = a0\n 22997: a0 = 0\n 22999: ra = 730, jump @19\n      : @779 [@dyn 365] (gas: 7)\n 23005: u64 [s1 + 1368] = 0\n 23009: u64 [s1 + 1360] = 0\n 23013: u64 [s1 + 1344] = 0x11\n 23018: a0 = 0x4\n 23021: a1 = s1 + 0x540\n 23025: u64 [s1 + 1352] = 0\n 23029: ra = 732, jump @19\n      : @780 [@dyn 366] (gas: 2)\n 23035: a1 = i32 [0x200ec]\n 23040: jump @782 if a1 >u 63\n      : @781 (gas: 4)\n 23044: u32 [0x200ec] = 0x40\n 23050: a1 = 0x20100\n 23055: i32 a1 = a1 + 0\n 23057: jump @795\n      : @782 (gas: 3)\n 23060: a1 = 0x20100\n 23065: i32 a1 = a1 + 0\n 23067: jump @795\n      : @783 (gas: 6)\n 23070: a1 = 0x20100\n 23075: i32 a1 = a1 + 0\n 23077: a0 = 0x1\n 23080: a2 = 0\n 23082: ecalli 12 // 'seal_return'\n 23084: jump @727\n      : @784 (gas: 6)\n 23087: a1 = 0x20100\n 23092: i32 a1 = a1 + 0\n 23094: a0 = 0x1\n 23097: a2 = 0\n 23099: ecalli 12 // 'seal_return'\n 23101: jump @727\n      : @785 (gas: 8)\n 23104: u64 [s1 + 784] = 0\n 23108: u64 [s1 + 776] = 0\n 23112: u64 [s1 + 768] = 0\n 23116: a0 = 0xe602df0500000000\n 23126: a1 = s1 + 0x300\n 23130: u64 [s1 + 0x318] = a0\n 23134: a0 = 0\n 23136: ra = 734, jump @19\n      : @786 [@dyn 367] (gas: 7)\n 23142: u64 [s1 + 760] = 0\n 23146: u64 [s1 + 752] = 0\n 23150: u64 [s1 + 744] = 0\n 23154: a0 = 0x4\n 23157: a1 = s1 + 0x2e0\n 23161: u64 [s1 + 736] = 0\n 23165: ra = 736, jump @19\n      : @787 [@dyn 368] (gas: 2)\n 23171: a1 = i32 [0x200ec]\n 23176: jump @789 if a1 >u 63\n      : @788 (gas: 4)\n 23180: u32 [0x200ec] = 0x40\n 23186: a1 = 0x20100\n 23191: i32 a1 = a1 + 0\n 23193: jump @795\n      : @789 (gas: 3)\n 23195: a1 = 0x20100\n 23200: i32 a1 = a1 + 0\n 23202: jump @795\n      : @790 (gas: 8)\n 23204: u64 [s1 + 848] = 0\n 23208: u64 [s1 + 840] = 0\n 23212: u64 [s1 + 832] = 0\n 23216: a0 = 0x94280d6200000000\n 23226: a1 = s1 + 0x340\n 23230: u64 [s1 + 0x358] = a0\n 23234: a0 = 0\n 23236: ra = 738, jump @19\n      : @791 [@dyn 369] (gas: 7)\n 23242: u64 [s1 + 824] = 0\n 23246: u64 [s1 + 816] = 0\n 23250: u64 [s1 + 808] = 0\n 23254: a0 = 0x4\n 23257: a1 = s1 + 0x320\n 23261: u64 [s1 + 800] = 0\n 23265: ra = 740, jump @19\n      : @792 [@dyn 370] (gas: 2)\n 23271: a1 = i32 [0x200ec]\n 23276: jump @794 if a1 >u 63\n      : @793 (gas: 4)\n 23280: u32 [0x200ec] = 0x40\n 23286: a1 = 0x20100\n 23291: i32 a1 = a1 + 0\n 23293: jump @795\n      : @794 (gas: 3)\n 23295: a1 = 0x20100\n 23300: i32 a1 = a1 + 0\n 23302: fallthrough\n      : @795 (gas: 4)\n 23303: a0 = 0x1\n 23306: a2 = 0x24\n 23309: ecalli 12 // 'seal_return'\n 23311: fallthrough\n      : @796 (gas: 7)\n 23312: a2 = s1 + 0x1078\n 23316: u64 [a2 + 1368] = 0\n 23320: u64 [a2 + 1360] = 0\n 23324: u64 [a2 + 1352] = 0\n 23328: t0 = 0x2e6\n 23332: a0 = 0x4e487b7100000000\n 23342: fallthrough\n      : @797 [@dyn 371] (gas: 4)\n 23343: a1 = s1 + 0x15c0\n 23347: u64 [a2 + 0x560] = a0\n 23351: a0 = 0\n 23353: ra = 744, jump @19\n      : @798 [@dyn 372] (gas: 9)\n 23359: a1 = s1 + 0x1078\n 23363: u64 [a1 + 1344] = 0\n 23367: u64 [a1 + 1336] = 0\n 23371: u64 [a1 + 1320] = 0x22\n 23376: a2 = a1\n 23378: a0 = 0x4\n 23381: a1 = s1 + 0x15a0\n 23385: u64 [a2 + 1328] = 0\n 23389: ra = 746, jump @19\n      : @799 [@dyn 373] (gas: 3)\n 23395: a1 = 0x24\n 23398: a0 = 0\n 23400: ra = 748, jump @27\n      : @800 [@dyn 374] (gas: 2)\n 23406: i32 a1 = a0 + 0\n 23408: jump @795\n      : @801 (gas: 13)\n 23410: a0 = s1 + 0x1000\n 23414: u64 [a0 + 4294965264] = 0\n 23418: a0 = s1 + 0x1000\n 23422: u64 [a0 + 4294965256] = 0\n 23426: a0 = s1 + 0x1000\n 23430: u64 [a0 + 4294965248] = 0\n 23434: a0 = 0xfb8f41b200000000\n 23444: a1 = s1 + 0x7ff\n 23448: a1 = a1 + 0x1\n 23451: a2 = s1 + 0x1000\n 23455: u64 [a2 + 0xfffffffffffff818] = a0\n 23459: a0 = 0\n 23461: ra = 750, jump @19\n      : @802 [@dyn 375] (gas: 6)\n 23467: a0 = u64 [s1 + 0x80]\n 23471: ra = 0x2f0\n 23475: ecalli 4 // 'caller'\n 23477: a2 = u64 [s1 + 0xb0]\n 23481: t0 = 0x2f2\n 23485: jump @930\n      : @803 [@dyn 376] (gas: 2)\n 23488: a2 = u64 [s1 + 0xb0]\n 23492: t0 = 754, jump @930\n      : @804 [@dyn 377] (gas: 7)\n 23498: u64 [s1 + 2040] = 0\n 23502: u64 [s1 + 0x7f0] = a1\n 23506: u64 [s1 + 0x7e8] = a0\n 23510: a0 = 0x4\n 23513: a1 = s1 + 0x7e0\n 23517: u64 [s1 + 0x7e0] = a3\n 23521: ra = 756, jump @19\n      : @805 [@dyn 378] (gas: 11)\n 23527: a0 = u64 [s1 + 0x60]\n 23530: u64 [s1 + 0x7d8] = a0\n 23534: a0 = u64 [s1 + 0x58]\n 23537: u64 [s1 + 0x7d0] = a0\n 23541: a0 = u64 [s1 + 0x68]\n 23544: u64 [s1 + 0x7c8] = a0\n 23548: a0 = 0x24\n 23551: a1 = s1 + 0x7c0\n 23555: a2 = u64 [s1 + 0x70]\n 23558: u64 [s1 + 0x7c0] = a2\n 23562: ra = 758, jump @19\n      : @806 [@dyn 379] (gas: 12)\n 23568: a0 = u64 [s1 + 0xe8]\n 23572: a3 = s1 + 0x700\n 23576: u64 [a3 + 0xb8] = a0\n 23580: a0 = u64 [s1 + 0xd8]\n 23584: u64 [a3 + 0xb0] = a0\n 23588: a0 = u64 [s1 + 0xc8]\n 23592: u64 [a3 + 0xa8] = a0\n 23596: a0 = 0x44\n 23599: a1 = s1 + 0x7a0\n 23603: a2 = u64 [s1 + 0xd0]\n 23607: u64 [a3 + 0xa0] = a2\n 23611: ra = 760, jump @19\n      : @807 [@dyn 380] (gas: 3)\n 23617: a0 = u64 [s1 + 0xc0]\n 23621: a0 = i32 [a0]\n 23623: jump @809 if a0 >u 127\n      : @808 (gas: 5)\n 23627: a1 = u64 [s1 + 0xc0]\n 23631: u32 [a1 + 0] = 0x80\n 23635: a0 = 0x1\n 23638: a2 = 0x64\n 23641: jump @817\n      : @809 (gas: 7)\n 23644: a0 = 0x1\n 23647: a2 = 0x64\n 23650: a1 = u64 [s1 + 0xe0]\n 23654: ecalli 12 // 'seal_return'\n 23656: u64 [s1 + 0xf8] = a1\n 23660: ra = 0x300\n 23664: jump @27\n      : @810 (gas: 13)\n 23667: a0 = s1 + 0x1000\n 23671: u64 [a0 + 4294965328] = 0\n 23675: a0 = s1 + 0x1000\n 23679: u64 [a0 + 4294965320] = 0\n 23683: a0 = s1 + 0x1000\n 23687: u64 [a0 + 4294965312] = 0\n 23691: a0 = 0xe602df0500000000\n 23701: a1 = s1 + 0x7ff\n 23705: a1 = a1 + 0x41\n 23708: a2 = s1 + 0x1000\n 23712: u64 [a2 + 0xfffffffffffff858] = a0\n 23716: a0 = 0\n 23718: ra = 762, jump @19\n      : @811 [@dyn 381] (gas: 13)\n 23724: a0 = s1 + 0x1000\n 23728: u64 [a0 + 4294965304] = 0\n 23732: a0 = s1 + 0x1000\n 23736: u64 [a0 + 4294965296] = 0\n 23740: a0 = s1 + 0x1000\n 23744: u64 [a0 + 4294965288] = 0\n 23748: a0 = 0x4\n 23751: a1 = s1 + 0x7ff\n 23755: a1 = a1 + 0x21\n 23758: a2 = s1 + 0x1000\n 23762: u64 [a2 + 4294965280] = 0\n 23766: ra = 0x2fe\n 23770: jump @19\n      : @812 (gas: 12)\n 23773: a0 = s1 + 0x7ff\n 23777: a0 = a0 + 0x79\n 23780: u64 [a0 + 24] = 0\n 23783: u64 [a0 + 16] = 0\n 23786: u64 [a0 + 8] = 0\n 23789: a2 = a0\n 23791: a0 = 0x94280d6200000000\n 23801: a1 = s1 + 0x7ff\n 23805: a1 = a1 + 0x81\n 23809: u64 [a2 + 0x20] = a0\n 23812: a0 = 0\n 23814: ra = 764, jump @19\n      : @813 [@dyn 382] (gas: 12)\n 23820: a0 = s1 + 0x7ff\n 23824: a0 = a0 + 0x79\n 23827: u64 [a0 + 0] = 0\n 23829: u64 [a0 + 4294967288] = 0\n 23832: a0 = s1 + 0x1000\n 23836: u64 [a0 + 4294965352] = 0\n 23840: a0 = 0x4\n 23843: a1 = s1 + 0x7ff\n 23847: a1 = a1 + 0x61\n 23850: a2 = s1 + 0x1000\n 23854: u64 [a2 + 4294965344] = 0\n 23858: ra = 766, jump @19\n      : @814 [@dyn 383] (gas: 3)\n 23864: a0 = u64 [s1 + 0xc0]\n 23868: a0 = i32 [a0]\n 23870: jump @816 if a0 >u 63\n      : @815 (gas: 5)\n 23874: a1 = u64 [s1 + 0xc0]\n 23878: u32 [a1 + 0] = 0x40\n 23881: a0 = 0x1\n 23884: a2 = 0x24\n 23887: jump @817\n      : @816 (gas: 7)\n 23889: a0 = 0x1\n 23892: a2 = 0x24\n 23895: a1 = u64 [s1 + 0xe0]\n 23899: ecalli 12 // 'seal_return'\n 23901: u64 [s1 + 0xf8] = a1\n 23905: ra = 0x300\n 23909: jump @27\n      : @817 (gas: 5)\n 23912: a1 = u64 [s1 + 0xe0]\n 23916: ecalli 12 // 'seal_return'\n 23918: u64 [s1 + 0xf8] = a1\n 23922: ra = 0x300\n 23926: jump @27\n      : @818 (gas: 2)\n 23929: u64 [s1 + 0xf8] = a1\n 23933: ra = 768, jump @27\n      : @819 [@dyn 384] (gas: 5)\n 23939: i32 a1 = a0 + 0\n 23941: a2 = i32 [s1 + 0xf8]\n 23945: a0 = 0\n 23947: ecalli 12 // 'seal_return'\n 23949: jump @649\n      : @820 (gas: 4)\n 23952: a0 = 0x1\n 23955: a1 = u64 [s1 + 0xd0]\n 23959: ecalli 12 // 'seal_return'\n 23961: jump @767\n      : @821 (gas: 9)\n 23964: a0 = s1 + 0x7ff\n 23968: a0 = a0 + 0x79\n 23971: u64 [a0 + 920] = 0\n 23975: u64 [a0 + 912] = 0\n 23979: u64 [a0 + 904] = 0\n 23983: a2 = a0\n 23985: t0 = 0x302\n 23989: a0 = 0x4e487b7100000000\n 23999: fallthrough\n      : @822 [@dyn 385] (gas: 5)\n 24000: a1 = s1 + 0x7ff\n 24004: a1 = a1 + 0x401\n 24008: u64 [a2 + 0x3a0] = a0\n 24012: a0 = 0\n 24014: ra = 772, jump @19\n      : @823 [@dyn 386] (gas: 12)\n 24020: a1 = s1 + 0x7ff\n 24024: a1 = a1 + 0x79\n 24027: u64 [a1 + 896] = 0\n 24031: u64 [a1 + 888] = 0\n 24035: u64 [a1 + 872] = 0x41\n 24040: a2 = a1\n 24042: a0 = 0x4\n 24045: a1 = s1 + 0x7ff\n 24049: a1 = a1 + 0x3e1\n 24053: u64 [a2 + 880] = 0\n 24057: ra = 0x2c4\n 24061: jump @19\n      : @824 (gas: 5)\n 24064: a0 = 0x1\n 24067: a1 = u64 [s1 + 0xd0]\n 24071: a2 = 0\n 24073: ecalli 12 // 'seal_return'\n 24075: jump @727\n      : @825 (gas: 21)\n 24078: sp = sp + 0xffffffffffffff10\n 24082: u64 [sp + 0xe8] = ra\n 24086: u64 [sp + 0xe0] = s0\n 24090: u64 [sp + 0xd8] = s1\n 24094: s0 = sp + 0xf0\n 24098: sp = sp & 0xfffffffffffffff0\n 24101: a5 = u64 [a1 + 0x10]\n 24104: a4 = u64 [a1 + 0x18]\n 24107: a3 = u64 [a1 + 0x8]\n 24110: a1 = u64 [a1]\n 24112: u64 [sp + 0x28] = a3\n 24115: u64 [sp + 0x18] = a4\n 24118: a4 = a4 | a3\n 24121: a3 = a1 | a5\n 24124: a3 = a3 | a4\n 24127: a3 = a3 >> 0x20\n 24130: u64 [sp + 0x20] = a5\n 24133: a4 = a4 | a5\n 24136: a4 = a4 << 0x20\n 24139: a3 = a3 | a4\n 24142: jump @838 if a3 != 0\n      : @826 (gas: 11)\n 24146: u64 [sp + 0x8] = a0\n 24149: a0 = u64 [a2 + 0x18]\n 24152: u64 [sp + 0x68] = a0\n 24155: s1 = u64 [a2 + 0x10]\n 24158: a0 = u64 [a2 + 0x8]\n 24161: u64 [sp + 0x60] = a0\n 24164: a0 = u64 [a2]\n 24166: u64 [sp + 0x58] = a0\n 24169: a0 = sp + 0xb0\n 24173: u64 [sp + 0x10] = a1\n 24176: ra = 774, jump @17\n      : @827 [@dyn 387] (gas: 12)\n 24182: a0 = u64 [sp + 0x58]\n 24185: a2 = a0 | s1\n 24188: a1 = u64 [sp + 0x68]\n 24191: a3 = u64 [sp + 0x60]\n 24194: a1 = a1 | a3\n 24197: a2 = a2 | a1\n 24200: a2 = a2 >> 0x20\n 24203: u64 [sp + 0x50] = s1\n 24206: a1 = a1 | s1\n 24209: a1 = a1 << 0x20\n 24212: a1 = a1 | a2\n 24215: jump @838 if a1 != 0\n      : @828 (gas: 15)\n 24219: a2 = u64 [sp + 0xc8]\n 24223: a3 = u64 [sp + 0xc0]\n 24227: a4 = u64 [sp + 0xb8]\n 24231: a1 = u64 [sp + 0xb0]\n 24235: u64 [sp + 0x30] = a1\n 24238: u64 [sp + 0x90] = a1\n 24242: u64 [sp + 0x38] = a4\n 24245: u64 [sp + 0x98] = a4\n 24249: u64 [sp + 0x40] = a3\n 24252: u64 [sp + 0xa0] = a3\n 24256: a1 = sp + 0x90\n 24260: u64 [sp + 0x48] = a2\n 24263: u64 [sp + 0xa8] = a2\n 24267: s1 = a0\n 24269: ra = 776, jump @19\n      : @829 [@dyn 388] (gas: 9)\n 24275: a0 = u64 [sp + 0x68]\n 24278: a1 = u64 [sp + 0x50]\n 24281: a1 = a1 | a0\n 24284: a0 = 0xffffffe0\n 24294: a2 = s1 <u a0\n 24297: a3 = u64 [sp + 0x60]\n 24300: a2 = 0 if a3 != 0\n 24302: a2 = 0 if a1 != 0\n 24304: jump @838 if a2 == 0\n      : @830 (gas: 9)\n 24308: a1 = u64 [sp + 0x20]\n 24311: a2 = u64 [sp + 0x18]\n 24314: a1 = a1 | a2\n 24317: a2 = u64 [sp + 0x10]\n 24320: a0 = a2 <u a0\n 24323: a3 = u64 [sp + 0x28]\n 24326: a0 = 0 if a3 != 0\n 24328: a0 = 0 if a1 != 0\n 24330: jump @838 if a0 == 0\n      : @831 (gas: 13)\n 24334: a5 = s1\n 24336: s1 = u64 [sp + 0x30]\n 24339: a3 = u64 [sp + 0x40]\n 24342: a0 = s1 | a3\n 24345: a1 = u64 [sp + 0x48]\n 24348: a4 = u64 [sp + 0x38]\n 24351: a1 = a1 | a4\n 24354: a0 = a0 | a1\n 24357: a0 = a0 >> 0x20\n 24360: a1 = a1 | a3\n 24363: a1 = a1 << 0x20\n 24366: a0 = a0 | a1\n 24369: jump @838 if a0 != 0\n      : @832 (gas: 5)\n 24373: i32 a0 = a5 + 0x20\n 24376: i32 a1 = a2 + 0x20\n 24379: u64 [sp + 0x28] = a1\n 24382: a1 = s1\n 24384: ra = 778, jump @27\n      : @833 [@dyn 389] (gas: 4)\n 24390: u64 [sp + 0x20] = a0\n 24393: a0 = u64 [sp + 0x28]\n 24396: a1 = s1\n 24398: ra = 780, jump @27\n      : @834 [@dyn 390] (gas: 4)\n 24404: a1 = a0\n 24406: a0 = u64 [sp + 0x20]\n 24409: a2 = s1\n 24411: ra = 782, jump @0\n      : @835 [@dyn 391] (gas: 27)\n 24417: a0 = u64 [sp + 0x58]\n 24420: a0 = a0 + s1\n 24423: a1 = a0 <u s1\n 24426: a2 = u64 [sp + 0x60]\n 24429: a4 = u64 [sp + 0x38]\n 24432: a2 = a2 + a4\n 24435: a2 = a2 + a1\n 24438: a3 = a2 ^ a4\n 24441: a4 = a2 <u a4\n 24444: a4 = a1 if a3 == 0\n 24447: a1 = u64 [sp + 0x50]\n 24450: a3 = u64 [sp + 0x40]\n 24453: a1 = a1 + a3\n 24456: a3 = a1 <u a3\n 24459: a5 = u64 [sp + 0x68]\n 24462: s1 = u64 [sp + 0x48]\n 24465: a5 = a5 + s1\n 24468: a3 = a3 + a5\n 24471: a4 = a4 + a1\n 24474: a1 = a4 <u a1\n 24477: a1 = a1 + a3\n 24480: a1 = a1 | a4\n 24483: a3 = 0xffffffe0\n 24493: a3 = a0 <u a3\n 24496: a3 = 0 if a2 != 0\n 24498: a3 = 0 if a1 != 0\n 24500: jump @838 if a3 == 0\n      : @836 (gas: 7)\n 24504: i32 a0 = a0 + 0x20\n 24507: u64 [sp + 136] = 0\n 24511: u64 [sp + 128] = 0\n 24515: u64 [sp + 120] = 0\n 24518: a1 = sp + 0x70\n 24521: u64 [sp + 112] = 0\n 24524: ra = 784, jump @19\n      : @837 [@dyn 392] (gas: 35)\n 24530: s1 = u64 [sp + 0x30]\n 24533: s1 = s1 + 0x1f\n 24536: a0 = 0x1ffffffe0\n 24546: a0 = a0 & s1\n 24549: a1 = u64 [sp + 0x58]\n 24552: a0 = a0 + a1\n 24555: a1 = a0 <u a1\n 24558: a3 = u64 [sp + 0x60]\n 24561: a2 = a3 + a1\n 24564: a3 = a2 <u a3\n 24567: a3 = a1 if a1 == 0\n 24570: a1 = u64 [sp + 0x50]\n 24573: a3 = a3 + a1\n 24576: a1 = a3 <u a1\n 24579: a4 = u64 [sp + 0x68]\n 24582: a1 = a1 + a4\n 24585: a4 = a0 + 0x20\n 24588: a0 = a4 <u a0\n 24591: a5 = a2 + a0\n 24594: a2 = a5 <u a2\n 24597: a2 = a0 if a0 == 0\n 24600: a2 = a2 + a3\n 24603: a0 = a2 <u a3\n 24606: a0 = a0 + a1\n 24609: a1 = u64 [sp + 0x8]\n 24612: u64 [a1] = a4\n 24614: u64 [a1 + 0x8] = a5\n 24617: u64 [a1 + 0x10] = a2\n 24620: u64 [a1 + 0x18] = a0\n 24623: sp = s0 + 0xffffffffffffff10\n 24627: ra = u64 [sp + 0xe8]\n 24631: s0 = u64 [sp + 0xe0]\n 24635: s1 = u64 [sp + 0xd8]\n 24639: sp = sp + 0xf0\n 24643: ret\n      : @838 (gas: 1)\n 24645: trap\n      : @839 [@dyn 393] (gas: 5)\n 24646: a1 = 0x4\n 24649: ra = 0x314\n 24653: ecalli 2 // 'call_data_load'\n 24655: t0 = 0x316\n 24659: jump @944\n      : @840 [@dyn 394] (gas: 1)\n 24662: t0 = 790, jump @944\n      : @841 [@dyn 395] (gas: 1)\n 24668: jump @844 if a3 == 0\n      : @842 (gas: 1)\n 24671: t0 = 792, jump @949\n      : @843 [@dyn 396] (gas: 1)\n 24677: ret\n      : @844 (gas: 8)\n 24679: a1 = 0x20100\n 24684: i32 a1 = a1 + 0\n 24686: a0 = 0x1\n 24689: a2 = 0\n 24691: ra = 0x31a\n 24695: ecalli 12 // 'seal_return'\n 24697: t0 = 0x31c\n 24701: jump @961\n      : @845 [@dyn 397] (gas: 1)\n 24704: t0 = 796, jump @961\n      : @846 [@dyn 398] (gas: 5)\n 24710: a1 = 0x24\n 24713: ra = 0x31e\n 24717: ecalli 2 // 'call_data_load'\n 24719: t0 = 0x320\n 24723: jump @944\n      : @847 [@dyn 399] (gas: 1)\n 24726: t0 = 800, jump @944\n      : @848 [@dyn 400] (gas: 1)\n 24732: jump @851 if a3 == 0\n      : @849 (gas: 1)\n 24735: t0 = 802, jump @949\n      : @850 [@dyn 401] (gas: 1)\n 24741: ret\n      : @851 (gas: 7)\n 24743: a1 = 0x20100\n 24748: i32 a1 = a1 + 0\n 24750: a0 = 0x1\n 24753: a2 = 0\n 24755: ra = 0x324\n 24759: ecalli 12 // 'seal_return'\n 24761: fallthrough\n      : @852 [@dyn 402] (gas: 46)\n 24762: sp = sp + 0xffffffffffffff70\n 24766: u64 [sp + 0x88] = ra\n 24770: u64 [sp + 0x80] = s0\n 24774: u64 [sp + 0x78] = s1\n 24777: s0 = sp + 0x90\n 24781: sp = sp & 0xfffffffffffffff0\n 24784: t0 = a0\n 24786: a2 = u64 [a1]\n 24788: t2 = u64 [a0 + 0x8]\n 24791: a5 = u64 [a1 + 0x8]\n 24794: t1 = u64 [a0]\n 24796: a3 = a2 + 0x1f\n 24799: ra = a3 <u a2\n 24802: a2 = a5 + ra\n 24805: a3 = a3 & 0xffffffffffffffe0\n 24808: u64 [sp + 0x8] = t1\n 24811: t1 = t1 + a3\n 24814: a4 = t1 <u a3\n 24817: a3 = a2 + t2\n 24820: a3 = a3 + a4\n 24823: s1 = a3 ^ a2\n 24826: a0 = a3 <u a2\n 24829: a0 = a4 if s1 == 0\n 24832: a4 = u64 [t0 + 0x18]\n 24835: a5 = a2 <u a5\n 24838: s1 = u64 [a1 + 0x10]\n 24841: t0 = u64 [t0 + 0x10]\n 24844: a1 = u64 [a1 + 0x18]\n 24847: a5 = ra if ra == 0\n 24850: a5 = a5 + s1\n 24853: s1 = a5 <u s1\n 24856: a2 = a5 + t0\n 24859: a0 = a0 + a2\n 24862: a5 = a2 <u a5\n 24865: a2 = a0 <u a2\n 24868: a1 = a1 + a4\n 24871: a1 = a1 + s1\n 24874: a1 = a1 + a5\n 24877: a5 = a1 + a2\n 24880: a1 = a5 >u 0\n 24882: a2 = a0 >u 0\n 24884: a2 = a1 if a5 != 0\n 24887: a1 = a0 | a5\n 24890: s1 = a3 >u 0\n 24892: s1 = a2 if a1 != 0\n 24895: jump @856 if s1 != 0\n      : @853 (gas: 13)\n 24898: a1 = u64 [sp + 0x8]\n 24901: a1 = t1 <u a1\n 24904: a2 = a3 ^ t2\n 24907: s1 = a3 <u t2\n 24910: s1 = a1 if a2 == 0\n 24913: a1 = a0 <u t0\n 24916: a2 = a5 ^ a4\n 24919: a4 = a5 <u a4\n 24922: a4 = a1 if a2 == 0\n 24925: a1 = a0 ^ t0\n 24928: a1 = a1 | a2\n 24931: a4 = s1 if a1 == 0\n 24934: jump @856 if a4 != 0\n      : @854 (gas: 7)\n 24937: u64 [sp + 0x50] = t1\n 24940: u64 [sp + 0x58] = a3\n 24943: u64 [sp + 0x60] = a0\n 24946: a0 = 0x40\n 24949: a1 = sp + 0x50\n 24952: u64 [sp + 0x68] = a5\n 24955: ra = 806, jump @19\n      : @855 [@dyn 403] (gas: 6)\n 24961: sp = s0 + 0xffffffffffffff70\n 24965: ra = u64 [sp + 0x88]\n 24969: s0 = u64 [sp + 0x80]\n 24973: s1 = u64 [sp + 0x78]\n 24976: sp = sp + 0x90\n 24980: ret\n      : @856 (gas: 6)\n 24982: u64 [sp + 64] = 0\n 24985: u64 [sp + 56] = 0\n 24988: u64 [sp + 48] = 0\n 24991: t0 = 0x328\n 24995: a0 = 0x4e487b7100000000\n 25005: fallthrough\n      : @857 [@dyn 404] (gas: 4)\n 25006: a1 = sp + 0x30\n 25009: u64 [sp + 0x48] = a0\n 25012: a0 = 0\n 25014: ra = 810, jump @19\n      : @858 [@dyn 405] (gas: 7)\n 25020: u64 [sp + 40] = 0\n 25023: u64 [sp + 32] = 0\n 25026: u64 [sp + 16] = 0x41\n 25030: a0 = 0x4\n 25033: a1 = sp + 0x10\n 25036: u64 [sp + 24] = 0\n 25039: ra = 812, jump @19\n      : @859 [@dyn 406] (gas: 2)\n 25045: a1 = i32 [0x200ec]\n 25050: jump @861 if a1 >u 63\n      : @860 (gas: 2)\n 25054: u32 [0x200ec] = 0x40\n 25060: fallthrough\n      : @861 (gas: 7)\n 25061: a1 = 0x20100\n 25066: i32 a1 = a1 + 0\n 25068: a0 = 0x1\n 25071: a2 = 0x24\n 25074: ra = 0x32e\n 25078: ecalli 12 // 'seal_return'\n 25080: fallthrough\n      : @862 [@dyn 407] (gas: 10)\n 25081: a3 = u64 [a1 + 0x18]\n 25084: a4 = u64 [a1 + 0x10]\n 25087: t0 = u64 [a1 + 0x8]\n 25090: a5 = a3 >u 0\n 25092: a2 = a4 >u 0\n 25094: a2 = a5 if a3 != 0\n 25097: a3 = a3 | a4\n 25100: a4 = t0 >u 0\n 25102: a4 = a2 if a3 != 0\n 25105: jump @864 if a4 != 0\n      : @863 (gas: 16)\n 25108: a1 = u64 [a1]\n 25110: a2 = a1 + 0x1f\n 25113: a1 = a2 <u a1\n 25116: a1 = a1 + t0\n 25119: a1 = a1 & 0x1\n 25122: a2 = a2 & 0xffffffffffffffe0\n 25125: a3 = a2 + 0x20\n 25128: a2 = a3 <u a2\n 25131: a4 = a1 + a2\n 25134: a1 = a4 <u a1\n 25137: a1 = a2 if a2 == 0\n 25140: u64 [a0 + 24] = 0\n 25143: u64 [a0] = a3\n 25145: u64 [a0 + 0x8] = a4\n 25148: u64 [a0 + 0x10] = a1\n 25151: ret\n      : @864 (gas: 11)\n 25153: sp = sp + 0xffffffffffffffb0\n 25156: u64 [sp + 0x48] = ra\n 25159: u64 [sp + 0x40] = s0\n 25162: s0 = sp + 0x50\n 25165: sp = sp & 0xfffffffffffffff0\n 25168: u64 [sp + 48] = 0\n 25171: u64 [sp + 40] = 0\n 25174: u64 [sp + 32] = 0\n 25177: t0 = 0x330\n 25181: a0 = 0x4e487b7100000000\n 25191: fallthrough\n      : @865 [@dyn 408] (gas: 4)\n 25192: a1 = sp + 0x20\n 25195: u64 [sp + 0x38] = a0\n 25198: a0 = 0\n 25200: ra = 818, jump @19\n      : @866 [@dyn 409] (gas: 7)\n 25206: u64 [sp + 24] = 0\n 25209: u64 [sp + 16] = 0\n 25212: u64 [sp + 0] = 0x41\n 25215: a0 = 0x4\n 25218: a1 = sp\n 25220: u64 [sp + 8] = 0\n 25223: ra = 820, jump @19\n      : @867 [@dyn 410] (gas: 2)\n 25229: a1 = i32 [0x200ec]\n 25234: jump @869 if a1 >u 63\n      : @868 (gas: 2)\n 25238: u32 [0x200ec] = 0x40\n 25244: fallthrough\n      : @869 (gas: 7)\n 25245: a1 = 0x20100\n 25250: i32 a1 = a1 + 0\n 25252: a0 = 0x1\n 25255: a2 = 0x24\n 25258: ra = 0x336\n 25262: ecalli 12 // 'seal_return'\n 25264: fallthrough\n      : @870 [@dyn 411] (gas: 18)\n 25265: sp = sp + 0xffffffffffffffc0\n 25268: u64 [sp + 0x38] = ra\n 25271: u64 [sp + 0x30] = s0\n 25274: u64 [sp + 0x28] = s1\n 25277: s0 = sp + 0x40\n 25280: sp = sp & 0xfffffffffffffff0\n 25283: a2 = u64 [a1 + 0x10]\n 25286: a3 = u64 [a1 + 0x18]\n 25289: a4 = u64 [a1 + 0x8]\n 25292: a1 = u64 [a1]\n 25294: a3 = a3 | a4\n 25297: a4 = a1 | a2\n 25300: a4 = a4 | a3\n 25303: a4 = a4 >> 0x20\n 25306: a2 = a2 | a3\n 25309: a2 = a2 << 0x20\n 25312: a2 = a2 | a4\n 25315: jump @874 if a2 != 0\n      : @871 (gas: 3)\n 25318: s1 = a0\n 25320: a0 = sp\n 25322: ra = 824, jump @17\n      : @872 [@dyn 412] (gas: 7)\n 25328: a0 = u64 [sp + 0x18]\n 25331: a1 = u64 [sp + 0x10]\n 25334: a2 = u64 [sp + 0x8]\n 25337: a3 = a1 | a0\n 25340: a4 = a2 <u 0x1\n 25343: a4 = 0 if a3 != 0\n 25345: jump @875 if a4 == 0\n      : @873 (gas: 11)\n 25348: a3 = u64 [sp]\n 25350: u64 [s1] = a3\n 25352: u64 [s1 + 0x8] = a2\n 25355: u64 [s1 + 0x10] = a1\n 25358: u64 [s1 + 0x18] = a0\n 25361: sp = s0 + 0xffffffffffffffc0\n 25364: ra = u64 [sp + 0x38]\n 25367: s0 = u64 [sp + 0x30]\n 25370: s1 = u64 [sp + 0x28]\n 25373: sp = sp + 0x40\n 25376: ret\n      : @874 (gas: 1)\n 25378: trap\n      : @875 (gas: 7)\n 25379: a1 = 0x20100\n 25384: i32 a1 = a1 + 0\n 25386: a0 = 0x1\n 25389: a2 = 0\n 25391: ra = 0x33a\n 25395: ecalli 12 // 'seal_return'\n 25397: fallthrough\n      : @876 [@dyn 413] (gas: 14)\n 25398: sp = sp + 0xfffffffffffffc20\n 25402: a3 = sp + 0x300\n 25406: u64 [a3 + 0xd8] = ra\n 25410: u64 [a3 + 0xd0] = s0\n 25414: u64 [a3 + 0xc8] = s1\n 25418: s0 = sp + 0x3e0\n 25422: sp = sp & 0xffffffffffffffe0\n 25425: s1 = sp\n 25427: t2 = u32 [a0 + 0x10]\n 25430: a3 = u64 [a0]\n 25432: a4 = u64 [a0 + 0x8]\n 25435: a0 = a3 | t2\n 25438: a0 = a0 | a4\n 25441: jump @908 if a0 == 0\n      : @877 (gas: 13)\n 25445: t0 = u64 [a1 + 0x10]\n 25448: t1 = u64 [a1 + 0x8]\n 25451: ra = u64 [a1]\n 25453: a5 = 0xffffffff\n 25463: a1 = t1 & 0xffffffffffffffff\n 25466: a0 = ra & 0xffffffffffffffff\n 25469: a5 = t0 & a5\n 25472: u64 [s1 + 0x48] = a0\n 25475: u64 [s1 + 0x38] = a5\n 25478: a0 = a0 | a5\n 25481: u64 [s1 + 0x40] = a1\n 25484: a0 = a0 | a1\n 25487: jump @913 if a0 == 0\n      : @878 (gas: 18)\n 25491: a0 = u64 [a2 + 0x18]\n 25494: u64 [s1 + 0x98] = a0\n 25498: a0 = u64 [a2 + 0x10]\n 25501: u64 [s1 + 0x88] = a0\n 25505: a0 = u64 [a2 + 0x8]\n 25508: u64 [s1 + 0x80] = a0\n 25512: a0 = u64 [a2]\n 25514: u64 [s1 + 0x90] = a0\n 25518: u64 [s1 + 824] = 0\n 25522: u64 [s1 + 0x60] = a3\n 25525: u64 [s1 + 0x320] = a3\n 25529: u64 [s1 + 0x58] = a4\n 25532: u64 [s1 + 0x328] = a4\n 25536: a1 = s1 + 0x320\n 25540: u64 [s1 + 0x50] = t2\n 25543: u64 [s1 + 0x330] = t2\n 25547: a0 = 0\n 25549: ra = 828, jump @19\n      : @879 [@dyn 414] (gas: 7)\n 25555: u64 [s1 + 792] = 0\n 25559: u64 [s1 + 784] = 0\n 25563: u64 [s1 + 776] = 0\n 25567: a0 = 0x20\n 25570: a1 = s1 + 0x300\n 25574: u64 [s1 + 768] = 0\n 25578: ra = 830, jump @19\n      : @880 [@dyn 415] (gas: 3)\n 25584: a2 = 0x200ec\n 25589: a0 = i32 [0x200ec]\n 25594: jump @882 if a0 >u 63\n      : @881 (gas: 2)\n 25598: u32 [0x200ec] = 0x40\n 25604: fallthrough\n      : @882 (gas: 15)\n 25605: u64 [s1 + 0x70] = a2\n 25608: a0 = sp + 0xffffffffffffffe0\n 25611: a2 = a0 & 0xffffffffffffffe0\n 25614: u64 [s1 + 0x68] = a2\n 25617: sp = a2\n 25619: a0 = 0x20100\n 25624: i32 a0 = a0 + 0\n 25626: i32 a2 = a2 + 0\n 25628: a1 = 0x40\n 25631: u64 [s1 + 0x78] = a0\n 25634: ra = 0x340\n 25638: ecalli 8 // 'hash_keccak_256'\n 25640: a3 = u64 [s1 + 0x68]\n 25643: t0 = 0x342\n 25647: jump @945\n      : @883 [@dyn 416] (gas: 2)\n 25650: a3 = u64 [s1 + 0x68]\n 25653: t0 = 834, jump @945\n      : @884 [@dyn 417] (gas: 7)\n 25659: u64 [a4 + 0x58] = a3\n 25662: u64 [a4 + 0x50] = a2\n 25665: u64 [a4 + 0x48] = a1\n 25668: u64 [a4 + 0x40] = a0\n 25671: a0 = s1 + 0x2e0\n 25675: a1 = s1 + 0x340\n 25679: ra = 836, jump @21\n      : @885 [@dyn 418] (gas: 28)\n 25685: a1 = s1 + 0x200\n 25689: a2 = u64 [a1 + 0xf8]\n 25693: a0 = u64 [a1 + 0xf0]\n 25697: a5 = u64 [a1 + 0xe8]\n 25701: a4 = u64 [a1 + 0xe0]\n 25705: a1 = u64 [s1 + 0x98]\n 25709: t1 = a2 ^ a1\n 25712: u64 [s1 + 0x28] = a2\n 25715: a1 = a2 <u a1\n 25718: a2 = u64 [s1 + 0x88]\n 25722: a3 = a0 <u a2\n 25725: u64 [s1 + 0x10] = a3\n 25728: a1 = a3 if t1 == 0\n 25731: a3 = u64 [s1 + 0x80]\n 25735: t0 = a5 ^ a3\n 25738: u64 [s1 + 0x30] = a5\n 25741: a5 = a5 <u a3\n 25744: a3 = u64 [s1 + 0x90]\n 25748: u64 [s1 + 0x68] = a4\n 25751: a3 = a4 <u a3\n 25754: u64 [s1 + 0x18] = a3\n 25757: a5 = a3 if t0 == 0\n 25760: u64 [s1 + 0x20] = a0\n 25763: a2 = a2 ^ a0\n 25766: a0 = a2 | t1\n 25769: u64 [s1 + 0x8] = a5\n 25772: a1 = a5 if a0 == 0\n 25775: jump @919 if a1 != 0\n      : @886 (gas: 11)\n 25779: u64 [s1 + 728] = 0\n 25783: a0 = u64 [s1 + 0x60]\n 25786: a2 = s1 + 0x200\n 25790: u64 [a2 + 0xc0] = a0\n 25794: a0 = u64 [s1 + 0x58]\n 25797: u64 [a2 + 0xc8] = a0\n 25801: a1 = s1 + 0x2c0\n 25805: a0 = u64 [s1 + 0x50]\n 25808: u64 [a2 + 0xd0] = a0\n 25812: a0 = 0\n 25814: ra = 838, jump @19\n      : @887 [@dyn 419] (gas: 7)\n 25820: u64 [s1 + 696] = 0\n 25824: u64 [s1 + 688] = 0\n 25828: u64 [s1 + 680] = 0\n 25832: a0 = 0x20\n 25835: a1 = s1 + 0x2a0\n 25839: u64 [s1 + 672] = 0\n 25843: ra = 840, jump @19\n      : @888 [@dyn 420] (gas: 27)\n 25849: a0 = u64 [s1 + 0x88]\n 25853: a1 = u64 [s1 + 0x20]\n 25856: a0 = a1 - a0\n 25859: a2 = u64 [s1 + 0x8]\n 25862: a1 = a0 - a2\n 25865: u64 [s1 + 0x20] = a1\n 25868: a0 = a0 <u a2\n 25871: a1 = u64 [s1 + 0x98]\n 25875: a2 = u64 [s1 + 0x28]\n 25878: a1 = a2 - a1\n 25881: a2 = u64 [s1 + 0x10]\n 25884: a1 = a1 - a2\n 25887: a1 = a1 - a0\n 25890: u64 [s1 + 0x28] = a1\n 25893: a2 = u64 [s1 + 0x70]\n 25896: a0 = i32 [a2]\n 25898: a1 = u64 [s1 + 0x80]\n 25902: a3 = u64 [s1 + 0x30]\n 25905: a1 = a3 - a1\n 25908: a3 = u64 [s1 + 0x18]\n 25911: a1 = a1 - a3\n 25914: u64 [s1 + 0x30] = a1\n 25917: a1 = u64 [s1 + 0x90]\n 25921: a3 = u64 [s1 + 0x68]\n 25924: a3 = a3 - a1\n 25927: u64 [s1 + 0x68] = a3\n 25930: jump @890 if a0 >u 63\n      : @889 (gas: 2)\n 25934: u32 [a2 + 0] = 0x40\n 25937: fallthrough\n      : @890 (gas: 12)\n 25938: a0 = sp + 0xffffffffffffffe0\n 25941: a0 = a0 & 0xffffffffffffffe0\n 25944: u64 [s1 + 0x18] = a0\n 25947: sp = a0\n 25949: i32 a2 = a0 + 0\n 25951: a1 = 0x40\n 25954: a0 = u64 [s1 + 0x78]\n 25957: ra = 0x34a\n 25961: ecalli 8 // 'hash_keccak_256'\n 25963: a3 = u64 [s1 + 0x18]\n 25966: t0 = 0x34c\n 25970: jump @945\n      : @891 [@dyn 421] (gas: 2)\n 25973: a3 = u64 [s1 + 0x18]\n 25976: t0 = 844, jump @945\n      : @892 [@dyn 422] (gas: 15)\n 25982: u64 [a4 + 0x78] = a3\n 25985: u64 [a4 + 0x70] = a2\n 25988: u64 [a4 + 0x68] = a1\n 25991: u64 [a4 + 0x60] = a0\n 25994: a0 = u64 [s1 + 0x28]\n 25997: u64 [a4 + 0x98] = a0\n 26001: a0 = u64 [s1 + 0x20]\n 26004: u64 [a4 + 0x90] = a0\n 26008: a0 = u64 [s1 + 0x30]\n 26011: u64 [a4 + 0x88] = a0\n 26015: a0 = u64 [s1 + 0x68]\n 26018: u64 [a4 + 0x80] = a0\n 26022: a0 = s1 + 0x360\n 26026: a1 = s1 + 0x380\n 26030: ra = 846, jump @22\n      : @893 [@dyn 423] (gas: 11)\n 26036: u64 [s1 + 664] = 0\n 26040: a0 = u64 [s1 + 0x38]\n 26043: a2 = s1 + 0x200\n 26047: u64 [a2 + 0x90] = a0\n 26051: a0 = u64 [s1 + 0x40]\n 26054: u64 [a2 + 0x88] = a0\n 26058: a1 = s1 + 0x280\n 26062: a0 = u64 [s1 + 0x48]\n 26065: u64 [a2 + 0x80] = a0\n 26069: a0 = 0\n 26071: ra = 848, jump @19\n      : @894 [@dyn 424] (gas: 7)\n 26077: u64 [s1 + 632] = 0\n 26081: u64 [s1 + 624] = 0\n 26085: u64 [s1 + 616] = 0\n 26089: a0 = 0x20\n 26092: a1 = s1 + 0x260\n 26096: u64 [s1 + 608] = 0\n 26100: ra = 850, jump @19\n      : @895 [@dyn 425] (gas: 7)\n 26106: a1 = u64 [s1 + 0x70]\n 26109: a0 = sp + 0xffffffffffffffe0\n 26112: a0 = a0 & 0xffffffffffffffe0\n 26115: u64 [s1 + 0x68] = a0\n 26118: sp = a0\n 26120: a0 = i32 [a1]\n 26122: jump @897 if a0 >u 63\n      : @896 (gas: 2)\n 26126: u32 [a1 + 0] = 0x40\n 26129: fallthrough\n      : @897 (gas: 12)\n 26130: a0 = sp + 0xffffffffffffffe0\n 26133: a0 = a0 & 0xffffffffffffffe0\n 26136: u64 [s1 + 0x70] = a0\n 26139: sp = a0\n 26141: i32 a2 = a0 + 0\n 26143: a1 = 0x40\n 26146: a0 = u64 [s1 + 0x78]\n 26149: ra = 0x354\n 26153: ecalli 8 // 'hash_keccak_256'\n 26155: a3 = u64 [s1 + 0x70]\n 26158: t0 = 0x356\n 26162: jump @934\n      : @898 [@dyn 426] (gas: 2)\n 26165: a3 = u64 [s1 + 0x70]\n 26168: t0 = 854, jump @934\n      : @899 [@dyn 427] (gas: 7)\n 26174: a1 = u64 [s1 + 0x68]\n 26177: u64 [a1 + 0x18] = a3\n 26180: u64 [a1 + 0x10] = a2\n 26183: u64 [a1 + 0x8] = a4\n 26186: u64 [a1] = a0\n 26188: a0 = s1 + 0x240\n 26192: ra = 856, jump @21\n      : @900 [@dyn 428] (gas: 30)\n 26198: a0 = u64 [s1 + 0x248]\n 26202: a1 = u64 [s1 + 0x240]\n 26206: t0 = u64 [s1 + 0x258]\n 26210: a3 = u64 [s1 + 0x250]\n 26214: a4 = u64 [s1 + 0x80]\n 26218: a4 = a4 + a0\n 26221: a5 = u64 [s1 + 0x90]\n 26225: a5 = a5 + a1\n 26228: a1 = a5 <u a1\n 26231: a4 = a4 + a1\n 26234: a2 = a4 ^ a0\n 26237: a0 = a4 <u a0\n 26240: a0 = a1 if a2 == 0\n 26243: a1 = u64 [s1 + 0x88]\n 26247: a1 = a1 + a3\n 26250: a2 = u64 [s1 + 0x98]\n 26254: t0 = t0 + a2\n 26257: a2 = a1 <u a3\n 26260: a2 = a2 + t0\n 26263: a0 = a0 + a1\n 26266: a1 = a0 <u a1\n 26269: a1 = a1 + a2\n 26272: a2 = s1 + 0x300\n 26276: u64 [a2 + 0xa0] = a5\n 26280: u64 [a2 + 0xa8] = a4\n 26284: u64 [a2 + 0xb0] = a0\n 26288: u64 [a2 + 0xb8] = a1\n 26292: a1 = s1 + 0x3a0\n 26296: a0 = u64 [s1 + 0x68]\n 26299: ra = 858, jump @22\n      : @901 [@dyn 429] (gas: 3)\n 26305: a0 = s1 + 0x220\n 26309: a1 = 0x40\n 26312: ra = 860, jump @17\n      : @902 [@dyn 430] (gas: 6)\n 26318: a4 = s1 + 0x200\n 26322: a3 = u64 [a4 + 0x38]\n 26325: a1 = u64 [a4 + 0x30]\n 26328: a2 = u64 [a4 + 0x28]\n 26331: a0 = u64 [a4 + 0x20]\n 26334: t0 = 862, jump @941\n      : @903 [@dyn 431] (gas: 1)\n 26340: jump @907 if a1 != 0\n      : @904 (gas: 12)\n 26344: a1 = u64 [s1 + 0x90]\n 26348: a3 = s1 + 0x200\n 26352: u64 [a3] = a1\n 26354: a1 = u64 [s1 + 0x80]\n 26358: u64 [a3 + 0x8] = a1\n 26361: a1 = u64 [s1 + 0x88]\n 26365: u64 [a3 + 0x10] = a1\n 26368: a1 = s1 + 0x200\n 26372: a2 = u64 [s1 + 0x98]\n 26376: u64 [a3 + 0x18] = a2\n 26379: u64 [s1 + 0x98] = a0\n 26383: ra = 864, jump @19\n      : @905 [@dyn 432] (gas: 29)\n 26389: u64 [s1 + 440] = 0\n 26393: a0 = u64 [s1 + 0x38]\n 26396: a5 = s1 + 0x100\n 26400: u64 [a5 + 0xb0] = a0\n 26404: a0 = u64 [s1 + 0x40]\n 26407: u64 [a5 + 0xa8] = a0\n 26411: a0 = u64 [s1 + 0x48]\n 26414: u64 [a5 + 0xa0] = a0\n 26418: u64 [s1 + 472] = 0\n 26422: a0 = u64 [s1 + 0x50]\n 26425: u64 [a5 + 0xd0] = a0\n 26429: a0 = u64 [s1 + 0x58]\n 26432: u64 [a5 + 0xc8] = a0\n 26436: a0 = u64 [0x200c8]\n 26441: a1 = u64 [0x200d0]\n 26446: a2 = u64 [0x200d8]\n 26451: a3 = u64 [s1 + 0x60]\n 26454: u64 [a5 + 0xc0] = a3\n 26458: u64 [a5 + 0xf8] = a0\n 26462: u64 [a5 + 0xf0] = a1\n 26466: u64 [a5 + 0xe8] = a2\n 26470: a0 = u64 [0x200e0]\n 26475: a1 = 0x20\n 26478: a2 = s1 + 0x1e0\n 26482: a3 = s1 + 0x1c0\n 26486: a4 = s1 + 0x1a0\n 26490: u64 [a5 + 0xe0] = a0\n 26494: a0 = u64 [s1 + 0x98]\n 26498: ra = 866, jump @24\n      : @906 [@dyn 433] (gas: 7)\n 26504: sp = s0 + 0xfffffffffffffc20\n 26508: a0 = sp + 0x300\n 26512: ra = u64 [a0 + 0xd8]\n 26516: s0 = u64 [a0 + 0xd0]\n 26520: s1 = u64 [a0 + 0xc8]\n 26524: sp = sp + 0x3e0\n 26528: ret\n      : @907 (gas: 1)\n 26530: trap\n      : @908 (gas: 8)\n 26531: u64 [s1 + 208] = 0\n 26535: u64 [s1 + 200] = 0\n 26539: u64 [s1 + 192] = 0\n 26543: a0 = 0x96c6fd1e00000000\n 26553: a1 = s1 + 0xc0\n 26557: u64 [s1 + 0xd8] = a0\n 26561: a0 = 0\n 26563: ra = 868, jump @19\n      : @909 [@dyn 434] (gas: 7)\n 26569: u64 [s1 + 184] = 0\n 26573: u64 [s1 + 176] = 0\n 26577: u64 [s1 + 168] = 0\n 26581: a0 = 0x4\n 26584: a1 = s1 + 0xa0\n 26588: u64 [s1 + 160] = 0\n 26592: ra = 870, jump @19\n      : @910 [@dyn 435] (gas: 2)\n 26598: a1 = i32 [0x200ec]\n 26603: jump @912 if a1 >u 63\n      : @911 (gas: 3)\n 26607: u32 [0x200ec] = 0x40\n 26613: a1 = 0x20100\n 26618: jump @918\n      : @912 (gas: 2)\n 26620: a1 = 0x20100\n 26625: jump @918\n      : @913 (gas: 8)\n 26627: u64 [s1 + 272] = 0\n 26631: u64 [s1 + 264] = 0\n 26635: u64 [s1 + 256] = 0\n 26639: a0 = 0xec442f0500000000\n 26649: a1 = s1 + 0x100\n 26653: u64 [s1 + 0x118] = a0\n 26657: a0 = 0\n 26659: ra = 872, jump @19\n      : @914 [@dyn 436] (gas: 7)\n 26665: u64 [s1 + 248] = 0\n 26669: u64 [s1 + 240] = 0\n 26673: u64 [s1 + 232] = 0\n 26677: a0 = 0x4\n 26680: a1 = s1 + 0xe0\n 26684: u64 [s1 + 224] = 0\n 26688: ra = 874, jump @19\n      : @915 [@dyn 437] (gas: 2)\n 26694: a1 = i32 [0x200ec]\n 26699: jump @917 if a1 >u 63\n      : @916 (gas: 3)\n 26703: u32 [0x200ec] = 0x40\n 26709: a1 = 0x20100\n 26714: jump @918\n      : @917 (gas: 2)\n 26716: a1 = 0x20100\n 26721: fallthrough\n      : @918 (gas: 5)\n 26722: i32 a1 = a1 + 0\n 26724: a0 = 0x1\n 26727: a2 = 0x24\n 26730: ecalli 12 // 'seal_return'\n 26732: fallthrough\n      : @919 (gas: 8)\n 26733: u64 [s1 + 400] = 0\n 26737: u64 [s1 + 392] = 0\n 26741: u64 [s1 + 384] = 0\n 26745: a0 = 0xe450d38c00000000\n 26755: a1 = s1 + 0x180\n 26759: u64 [s1 + 0x198] = a0\n 26763: a0 = 0\n 26765: ra = 876, jump @19\n      : @920 [@dyn 438] (gas: 10)\n 26771: u64 [s1 + 376] = 0\n 26775: a0 = u64 [s1 + 0x50]\n 26778: u64 [s1 + 0x170] = a0\n 26782: a0 = u64 [s1 + 0x58]\n 26785: u64 [s1 + 0x168] = a0\n 26789: a0 = 0x4\n 26792: a1 = s1 + 0x160\n 26796: a2 = u64 [s1 + 0x60]\n 26799: u64 [s1 + 0x160] = a2\n 26803: ra = 878, jump @19\n      : @921 [@dyn 439] (gas: 11)\n 26809: a0 = u64 [s1 + 0x28]\n 26812: u64 [s1 + 0x158] = a0\n 26816: a0 = u64 [s1 + 0x20]\n 26819: u64 [s1 + 0x150] = a0\n 26823: a0 = u64 [s1 + 0x30]\n 26826: u64 [s1 + 0x148] = a0\n 26830: a0 = 0x24\n 26833: a1 = s1 + 0x140\n 26837: a2 = u64 [s1 + 0x68]\n 26840: u64 [s1 + 0x140] = a2\n 26844: ra = 880, jump @19\n      : @922 [@dyn 440] (gas: 12)\n 26850: a0 = u64 [s1 + 0x98]\n 26854: a3 = s1 + 0x100\n 26858: u64 [a3 + 0x38] = a0\n 26861: a0 = u64 [s1 + 0x88]\n 26865: u64 [a3 + 0x30] = a0\n 26868: a0 = u64 [s1 + 0x80]\n 26872: u64 [a3 + 0x28] = a0\n 26875: a0 = 0x44\n 26878: a1 = s1 + 0x120\n 26882: a2 = u64 [s1 + 0x90]\n 26886: u64 [a3 + 0x20] = a2\n 26889: ra = 882, jump @19\n      : @923 [@dyn 441] (gas: 3)\n 26895: a0 = u64 [s1 + 0x70]\n 26898: a0 = i32 [a0]\n 26900: jump @925 if a0 >u 127\n      : @924 (gas: 3)\n 26904: a1 = u64 [s1 + 0x70]\n 26907: u32 [a1 + 0] = 0x80\n 26911: fallthrough\n      : @925 (gas: 7)\n 26912: a0 = 0x1\n 26915: a2 = 0x64\n 26918: a1 = u64 [s1 + 0x78]\n 26921: ecalli 12 // 'seal_return'\n 26923: a0 = 0\n 26925: ra = 0x374\n 26929: jump @33\n      : @926 [export #0: 'call'] (gas: 2)\n 26932: a0 = 0\n 26934: ra = 884, jump @33\n      : @927 [@dyn 442] [export #1: 'deploy'] (gas: 2)\n 26940: a0 = 0x1\n 26943: ra = 886, jump @33\n      : @928 [@dyn 443] (gas: 16)\n 26949: a2 = u64 [s1 + 0xe8]\n 26953: a0 = u64 [a2 + 0x8]\n 26956: a1 = i32 [a2 + 0x10]\n 26959: a2 = u64 [a2]\n 26961: a0 = reverse a0\n 26963: a3 = a0 << 0x20\n 26966: a1 = reverse a1\n 26968: a1 = a1 >> 0x20\n 26971: a3 = a3 | a1\n 26974: a0 = a0 >> 0x20\n 26977: a1 = reverse a2\n 26979: a2 = a1 << 0x20\n 26982: a0 = a0 | a2\n 26985: a1 = a1 >> 0x20\n 26988: a2 = s1 + 0x1078\n 26992: jump [t0]\n      : @929 (gas: 16)\n 26994: a0 = u64 [a2 + 0x8]\n 26997: a1 = i32 [a2 + 0x10]\n 27000: a2 = u64 [a2]\n 27002: a0 = reverse a0\n 27004: a3 = a0 << 0x20\n 27007: a1 = reverse a1\n 27009: a1 = a1 >> 0x20\n 27012: a3 = a3 | a1\n 27015: a0 = a0 >> 0x20\n 27018: a1 = reverse a2\n 27020: a2 = a1 << 0x20\n 27023: a0 = a0 | a2\n 27026: a1 = a1 >> 0x20\n 27029: a2 = s1 + 0x7ff\n 27033: a2 = a2 + 0x79\n 27036: jump [t0]\n      : @930 (gas: 14)\n 27038: a0 = u64 [a2 + 0x8]\n 27041: a1 = i32 [a2 + 0x10]\n 27044: a2 = u64 [a2]\n 27046: a0 = reverse a0\n 27048: a3 = a0 << 0x20\n 27051: a1 = reverse a1\n 27053: a1 = a1 >> 0x20\n 27056: a3 = a3 | a1\n 27059: a0 = a0 >> 0x20\n 27062: a1 = reverse a2\n 27064: a2 = a1 << 0x20\n 27067: a0 = a0 | a2\n 27070: a1 = a1 >> 0x20\n 27073: jump [t0]\n      : @931 (gas: 11)\n 27075: a0 = u64 [a3 + 0x18]\n 27078: a1 = u64 [a3 + 0x10]\n 27081: a2 = u64 [a3 + 0x8]\n 27084: a3 = u64 [a3]\n 27086: a0 = reverse a0\n 27088: a1 = reverse a1\n 27090: a2 = reverse a2\n 27092: a3 = reverse a3\n 27094: a4 = s1 + 0x1878\n 27098: a5 = a4 + 0x400\n 27102: jump [t0]\n      : @932 (gas: 16)\n 27104: a4 = u64 [s1 + 0x118]\n 27108: a2 = a4 <u 0x80\n 27112: a3 = u64 [s1 + 0xd0]\n 27116: a1 = a3 if a2 != 0\n 27119: a5 = u64 [s1 + 0xd8]\n 27123: a3 = u64 [s1 + 0xe8]\n 27127: a3 = a3 | a5\n 27130: a3 = a0 if a2 == 0\n 27133: a1 = 0xffffffffffffffff if a4 == 0\n 27136: a3 = 0xffffffffffffffff if a4 == 0\n 27139: a4 = u64 [s1 + 0xe0]\n 27143: a4 = 0 if a2 == 0\n 27145: a5 = 0 if a2 == 0\n 27147: a0 = u64 [s1 + 0xf0]\n 27151: a0 = a0 & ~a3\n 27154: jump [t0]\n      : @933 (gas: 8)\n 27156: a0 = u64 [a2 + 0x8]\n 27159: a1 = i32 [a2 + 0x10]\n 27162: a2 = u64 [a2]\n 27164: a3 = reverse a0\n 27166: a0 = a3 << 0x20\n 27169: a1 = reverse a1\n 27171: a1 = a1 >> 0x20\n 27174: jump [t0]\n      : @934 (gas: 9)\n 27176: a0 = u64 [a3 + 0x18]\n 27179: a1 = u64 [a3 + 0x10]\n 27182: a2 = u64 [a3 + 0x8]\n 27185: a3 = u64 [a3]\n 27187: a0 = reverse a0\n 27189: a4 = reverse a1\n 27191: a2 = reverse a2\n 27193: a3 = reverse a3\n 27195: jump [t0]\n      : @935 (gas: 14)\n 27197: a0 = u64 [s1 + 0xf8]\n 27201: a0 = a0 + 0x20\n 27204: a1 = u64 [s1 + 0xf8]\n 27208: a1 = a0 <u a1\n 27211: a3 = u64 [s1 + 0xe0]\n 27215: a2 = a3 + a1\n 27218: a3 = a2 <u a3\n 27221: a3 = a1 if a1 == 0\n 27224: a1 = u64 [s1 + 0xe8]\n 27228: a3 = a3 + a1\n 27231: a1 = a3 <u a1\n 27234: a4 = u64 [s1 + 0xf0]\n 27238: a4 = a4 + a1\n 27241: jump [t0]\n      : @936 (gas: 14)\n 27243: a3 = a3 + a4\n 27246: u64 [s1 + 0xe8] = a3\n 27250: a3 = a3 << 0x3b\n 27253: a4 = a2 >> 0x5\n 27256: a4 = a4 | a3\n 27259: a0 = u64 [s1 + 0x108]\n 27263: t1 = u64 [a0 + 0x18]\n 27266: a2 = a2 << 0x3b\n 27269: a3 = u64 [a0 + 0x10]\n 27272: a1 = a1 >> 0x5\n 27275: a0 = a1 | a2\n 27278: t2 = reverse t1\n 27280: a2 = reverse a3\n 27282: jump [t0]\n      : @937 (gas: 14)\n 27284: a5 = a5 + a2\n 27287: a4 = a5 <u a2\n 27290: a0 = u64 [s1 + 0x110]\n 27294: a2 = a2 <u a0\n 27297: a0 = t2 + a2\n 27300: a0 = a0 + a4\n 27303: a2 = a1 | a5\n 27306: a0 = a0 | a3\n 27309: a2 = a2 | a0\n 27312: a2 = a2 >> 0x20\n 27315: a0 = a0 | a5\n 27318: a0 = a0 << 0x20\n 27321: a0 = a0 | a2\n 27324: jump [t0]\n      : @938 (gas: 13)\n 27326: a4 = a0 << 0x3f\n 27329: a5 = a1 >> 0x1\n 27332: t1 = a5 | a4\n 27335: a5 = a3 << 0x3f\n 27338: a0 = a0 >> 0x1\n 27341: a0 = a0 | a5\n 27344: a1 = a1 << 0x3f\n 27347: a5 = a2 >> 0x1\n 27350: a1 = a1 | a5\n 27353: a3 = a3 >> 0x1\n 27356: a2 = a2 & 0x1\n 27359: a5 = -a2\n 27361: jump [t0]\n      : @939 (gas: 10)\n 27363: a4 = 0 if a2 == 0\n 27365: a1 = u64 [s1 + 0xf8]\n 27369: a1 = a1 & ~a3\n 27372: a2 = u64 [s1 + 0x100]\n 27376: a0 = a2 & ~a0\n 27379: a2 = u64 [s1 + 0x108]\n 27383: a2 = a2 & ~a4\n 27386: a3 = u64 [s1 + 0x110]\n 27390: a3 = a3 & ~a5\n 27393: jump [t0]\n      : @940 (gas: 13)\n 27395: a5 = a5 + a2\n 27398: a3 = a5 <u a2\n 27401: a2 = a2 <u t2\n 27404: a0 = t1 + a2\n 27407: a0 = a0 + a3\n 27410: a2 = a1 | a5\n 27413: a0 = a0 | a4\n 27416: a2 = a2 | a0\n 27419: a2 = a2 >> 0x20\n 27422: a0 = a0 | a5\n 27425: a0 = a0 << 0x20\n 27428: a0 = a0 | a2\n 27431: jump [t0]\n      : @941 (gas: 8)\n 27433: a3 = a3 | a2\n 27436: a2 = a0 | a1\n 27439: a2 = a2 | a3\n 27442: a2 = a2 >> 0x20\n 27445: a1 = a1 | a3\n 27448: a1 = a1 << 0x20\n 27451: a1 = a1 | a2\n 27454: jump [t0]\n      : @942 (gas: 11)\n 27456: a1 = a0 <u a1\n 27459: a3 = u64 [s1 + 0x80]\n 27463: a2 = a3 + a1\n 27466: a3 = a2 <u a3\n 27469: a3 = a1 if a1 == 0\n 27472: a1 = u64 [s1 + 0x88]\n 27476: a3 = a3 + a1\n 27479: a1 = a3 <u a1\n 27482: a4 = u64 [s1 + 0x90]\n 27486: a4 = a4 + a1\n 27489: jump [t0]\n      : @943 (gas: 8)\n 27491: a2 = a4 >u 0\n 27493: a1 = a1 ^ 0x1\n 27496: a1 = a2 if a4 != 0\n 27499: a2 = t2 >u 0\n 27501: a3 = a5 >u 0\n 27503: a3 = a2 if a5 == 0\n 27506: a3 = a1 if a0 == 0\n 27509: jump [t0]\n      : @944 (gas: 10)\n 27511: a0 = u64 [sp + 0x10]\n 27514: a1 = u64 [sp + 0x18]\n 27517: a2 = 0x100000000\n 27527: a2 = a2 ^ a0\n 27530: a2 = a2 | a1\n 27533: a3 = a0 >> 0x20\n 27536: a3 = a3 <u 0x1\n 27539: a3 = 0 if a1 != 0\n 27541: a3 = 0 if a2 == 0\n 27543: jump [t0]\n      : @945 (gas: 10)\n 27545: a0 = u64 [a3 + 0x18]\n 27548: a1 = u64 [a3 + 0x10]\n 27551: a2 = u64 [a3 + 0x8]\n 27554: a3 = u64 [a3]\n 27556: a0 = reverse a0\n 27558: a1 = reverse a1\n 27560: a2 = reverse a2\n 27562: a3 = reverse a3\n 27564: a4 = s1 + 0x300\n 27568: jump [t0]\n      : @946 (gas: 7)\n 27570: a1 = u64 [s1 + 0xe8]\n 27574: u64 [a1 + 8] = 0\n 27577: u64 [a1 + 0] = 0\n 27579: u32 [a1 + 16] = 0xa00\n 27584: a0 = 0x1878\n 27588: a2 = s1 + a0\n 27591: jump [t0]\n      : @947 (gas: 4)\n 27593: a0 = 0x1878\n 27597: a3 = s1 + a0\n 27600: a4 = a3 + 0x300\n 27604: jump [t0]\n      : @948 (gas: 8)\n 27606: a4 = a4 | a2\n 27609: a2 = a0 | a1\n 27612: a2 = a2 | a4\n 27615: a2 = a2 >> 0x20\n 27618: a1 = a1 | a4\n 27621: a1 = a1 << 0x20\n 27624: a1 = a1 | a2\n 27627: jump [t0]\n      : @949 (gas: 12)\n 27629: a2 = u64 [sp]\n 27631: a3 = u64 [sp + 0x8]\n 27634: u64 [s1] = a2\n 27636: u64 [s1 + 0x8] = a3\n 27639: u64 [s1 + 0x10] = a0\n 27642: u64 [s1 + 0x18] = a1\n 27645: sp = s0 + 0xffffffffffffffc0\n 27648: ra = u64 [sp + 0x38]\n 27651: s0 = u64 [sp + 0x30]\n 27654: s1 = u64 [sp + 0x28]\n 27657: sp = sp + 0x40\n 27660: jump [t0]\n      : @950 (gas: 8)\n 27662: a0 = a0 | a2\n 27665: a2 = a4 | a1\n 27668: a2 = a2 | a0\n 27671: a2 = a2 >> 0x20\n 27674: a0 = a0 | a1\n 27677: a0 = a0 << 0x20\n 27680: a0 = a0 | a2\n 27683: jump [t0]\n      : @951 (gas: 8)\n 27685: a4 = a2 + a0\n 27688: a4 = a4 + a3\n 27691: a3 = a4 ^ a2\n 27694: u64 [s1 + 0xf0] = a4\n 27698: a2 = a4 <u a2\n 27701: a2 = a0 if a3 == 0\n 27704: a4 = u64 [s1 + 0xe8]\n 27708: jump [t0]\n      : @952 (gas: 7)\n 27710: a0 = a0 << 0x3b\n 27713: a1 = a0 >> 0x38\n 27716: u64 [s1 + 0x118] = a1\n 27720: a2 = 0x80 - a1\n 27724: a0 = 0xffffffffffffffff\n 27727: a1 = 0xffffffffffffffff\n 27730: jump [t0]\n      : @953 (gas: 10)\n 27732: u64 [s1 + 0xd8] = a0\n 27736: u64 [s1 + 0xe0] = a1\n 27740: a0 = u64 [s1 + 0xd0]\n 27744: a0 = a0 | a1\n 27747: u64 [s1 + 0xd0] = a0\n 27751: a0 = u64 [s1 + 0x118]\n 27755: a2 = a0 + 0xffffffffffffff80\n 27758: a0 = 0xffffffffffffffff\n 27761: a1 = 0xffffffffffffffff\n 27764: jump [t0]\n      : @954 (gas: 12)\n 27766: a1 = u64 [s1 + 0xf0]\n 27770: a2 = u64 [s1 + 0xe0]\n 27774: a1 = a1 | a2\n 27777: a3 = u64 [s1 + 0xe8]\n 27781: a2 = u64 [s1 + 0xf8]\n 27785: a2 = a2 | a3\n 27788: a2 = a2 | a1\n 27791: a2 = a2 >> 0x20\n 27794: a1 = a1 | a3\n 27797: a1 = a1 << 0x20\n 27800: a1 = a1 | a2\n 27803: jump [t0]\n      : @955 (gas: 6)\n 27805: a0 = u32 [a2 + 0x10]\n 27808: a1 = u64 [a2]\n 27810: a2 = u64 [a2 + 0x8]\n 27813: a0 = a0 | a1\n 27816: a0 = a0 | a2\n 27819: jump [t0]\n      : @956 (gas: 8)\n 27821: a0 = a0 + a4\n 27824: a3 = a3 + a1\n 27827: a5 = a3 <u a1\n 27830: a0 = a0 + a5\n 27833: ra = u64 [s1 + 0xe0]\n 27837: ra = ra + a3\n 27840: a3 = ra <u a3\n 27843: jump [t0]\n      : @957 (gas: 6)\n 27845: a1 = a3 << 0x3\n 27848: u64 [s1 + 0x118] = a1\n 27852: i32 a2 = 0x80 - a1\n 27856: a0 = 0xffffffffffffffff\n 27859: a1 = 0xffffffffffffffff\n 27862: jump [t0]\n      : @958 (gas: 7)\n 27864: a3 = a3 | a5\n 27867: a3 = a1 if a2 == 0\n 27870: a1 = 0xffffffffffffffff\n 27873: a0 = a1 if a4 == 0\n 27876: a3 = a1 if a4 == 0\n 27879: a5 = 0 if a2 == 0\n 27881: jump [t0]\n      : @959 (gas: 6)\n 27883: a1 = a2 & ~a1\n 27886: a2 = u64 [s1 + 0x108]\n 27890: a2 = a2 & ~a5\n 27893: a3 = u64 [s1 + 0x110]\n 27897: a3 = a3 & ~a4\n 27900: jump [t0]\n      : @960 (gas: 8)\n 27902: a0 = u64 [a4 + 0xb8]\n 27906: a1 = u64 [a4 + 0xc0]\n 27910: a2 = u64 [a4 + 0xb0]\n 27914: a3 = u64 [a4 + 0xa8]\n 27918: a1 = a1 | a2\n 27921: a0 = a0 | a3\n 27924: a0 = a0 | a1\n 27927: jump [t0]\n      : @961 (gas: 9)\n 27929: sp = sp + 0xffffffffffffffc0\n 27932: u64 [sp + 0x38] = ra\n 27935: u64 [sp + 0x30] = s0\n 27938: u64 [sp + 0x28] = s1\n 27941: s0 = sp + 0x40\n 27944: sp = sp & 0xffffffffffffffe0\n 27947: s1 = a0\n 27949: i32 a0 = sp + 0\n 27951: jump [t0]\n      : @962 (gas: 4)\n 27953: a0 = 0x1878\n 27957: a3 = s1 + a0\n 27960: a4 = a3 + 0x100\n 27964: jump [t0]\n      : @963 (gas: 6)\n 27966: a0 = u64 [a3 + 0x18]\n 27969: a1 = u64 [a3 + 0x10]\n 27972: a2 = u64 [a3 + 0x8]\n 27975: a3 = u64 [a3]\n 27977: a0 = reverse a0\n 27979: jump [t0]\n      : @964 (gas: 2)\n 27981: a3 = a2 & 0x40\n 27984: jump @968 if a3 != 0\n      : @965 (gas: 1)\n 27987: jump @967 if a2 == 0\n      : @966 (gas: 6)\n 27990: i32 a3 = 0x40 - a2\n 27993: a3 = a1 << a3\n 27996: a1 = a1 >> a2\n 27999: a0 = a0 >> a2\n 28002: a0 = a0 | a3\n 28005: ret\n      : @967 (gas: 1)\n 28007: ret\n      : @968 (gas: 4)\n 28009: a0 = a2 + 0xffffffffffffffc0\n 28012: a0 = a1 >> a0\n 28015: a1 = 0\n 28017: ret\n      : @969 (gas: 2)\n 28019: a3 = a2 & 0x40\n 28022: jump @973 if a3 != 0\n      : @970 (gas: 1)\n 28025: jump @972 if a2 == 0\n      : @971 (gas: 6)\n 28028: i32 a3 = 0x40 - a2\n 28031: a3 = a0 >> a3\n 28034: a0 = a0 << a2\n 28037: a1 = a1 << a2\n 28040: a1 = a1 | a3\n 28043: ret\n      : @972 (gas: 1)\n 28045: ret\n      : @973 (gas: 4)\n 28047: a1 = a2 + 0xffffffffffffffc0\n 28050: a1 = a0 << a1\n 28053: a0 = 0\n 28055: ret\n      : @974 (gas: 1)\n 28057: jump @977 if a1 == 0\n      : @975 (gas: 2)\n 28060: a5 = a1 <u 0\n 28062: jump @978 if a5 != 0\n      : @976 (gas: 5)\n 28065: sp = sp + 0xffffffffffffffd0\n 28068: u64 [sp + 0x28] = ra\n 28071: u64 [sp + 0x20] = s0\n 28074: u64 [sp + 0x18] = s1\n 28077: jump @979\n      : @977 (gas: 2)\n 28079: a5 = a0 <u 0x5f5e100\n 28085: jump @976 if a5 == 0\n      : @978 (gas: 5)\n 28088: t2 = 0\n 28090: t1 = 0\n 28092: a0 = 0\n 28094: a1 = 0\n 28096: jump @415\n      : @979 (gas: 2)\n 28099: u64 [sp + 8] = 0\n 28102: jump @990 if a1 >=u 100000000\n      : @980 (gas: 16)\n 28110: a4 = 0x25\n 28113: a2 = 0xbebc200000000000\n 28123: a1 = a1 << 0x25\n 28126: a5 = a0 >> 0x1\n 28129: a3 = a5 >> 0xffffffffffffffda\n 28132: a1 = a1 | a3\n 28135: a0 = a0 << 0x25\n 28138: ra = 0xbebc2000\n 28148: a5 = 0\n 28150: t1 = a0 >> 0x20\n 28153: a0 = a0 << 0x20\n 28156: a0 = a0 >> 0x20\n 28159: t0 = a1 /u ra\n 28162: a3 = t0 * ra\n 28165: s1 = a1 - a3\n 28168: jump @982\n      : @981 (gas: 4)\n 28170: s1 = s1 + ra\n 28173: a3 = s1 >> 0x20\n 28176: t0 = t0 + 0xffffffffffffffff\n 28179: jump @984 if a3 != 0\n      : @982 (gas: 2)\n 28182: s0 = t0 >> 0x20\n 28185: jump @981 if s0 != 0\n      : @983 (gas: 4)\n 28188: s0 = t0 * a5\n 28191: a3 = s1 << 0x20\n 28194: a3 = a3 | t1\n 28197: jump @981 if a3 <u s0\n      : @984 (gas: 9)\n 28200: a1 = a1 << 0x20\n 28203: a1 = t1 | a1\n 28206: a3 = t0 * a2\n 28209: a1 = a1 - a3\n 28212: t2 = a1 /u ra\n 28215: s1 = t2 * ra\n 28218: u64 [sp + 0x10] = a1\n 28221: a3 = a1 - s1\n 28224: jump @986\n      : @985 (gas: 4)\n 28226: a3 = a3 + ra\n 28229: a1 = a3 >> 0x20\n 28232: t2 = t2 + 0xffffffffffffffff\n 28235: jump @988 if a1 != 0\n      : @986 (gas: 2)\n 28238: a1 = t2 >> 0x20\n 28241: jump @985 if a1 != 0\n      : @987 (gas: 4)\n 28244: a1 = t2 * a5\n 28247: s0 = a3 << 0x20\n 28250: s1 = s0 | a0\n 28253: jump @985 if s1 <u a1\n      : @988 (gas: 11)\n 28256: t1 = 0\n 28258: a1 = u64 [sp + 0x10]\n 28261: a1 = a1 << 0x20\n 28264: a1 = a1 | a0\n 28267: a2 = t2 * a2\n 28270: a1 = a1 - a2\n 28273: a2 = a1 >> a4\n 28276: t0 = t0 << 0x20\n 28279: t2 = t2 + t0\n 28282: a4 = u64 [sp + 0x8]\n 28285: jump @999 if a4 != 0\n      : @989 (gas: 1)\n 28289: jump @1000\n      : @990 (gas: 21)\n 28292: t1 = a1 /u a2\n 28295: t2 = t1 * 0x5f5e100\n 28301: ra = 0x25\n 28304: t2 = a1 - t2\n 28307: a2 = 0xbebc200000000000\n 28317: a1 = t2 << 0x25\n 28320: a5 = a0 >> 0x1\n 28323: a3 = a5 >> 0xffffffffffffffda\n 28326: t2 = a1 | a3\n 28329: a0 = a0 << 0x25\n 28332: a5 = a2\n 28334: a2 = 0xbebc2000\n 28344: a4 = a5\n 28346: a5 = 0\n 28348: s0 = a0 >> 0x20\n 28351: a0 = a0 << 0x20\n 28354: a1 = a0 >> 0x20\n 28357: t0 = t2 /u a2\n 28360: s1 = t0 * a2\n 28363: a3 = t2 - s1\n 28366: jump @992\n      : @991 (gas: 4)\n 28368: a3 = a3 + a2\n 28371: a0 = a3 >> 0x20\n 28374: t0 = t0 + 0xffffffffffffffff\n 28377: jump @994 if a0 != 0\n      : @992 (gas: 2)\n 28380: a0 = t0 >> 0x20\n 28383: jump @991 if a0 != 0\n      : @993 (gas: 4)\n 28386: a0 = t0 * a5\n 28389: s1 = a3 << 0x20\n 28392: s1 = s1 | s0\n 28395: jump @991 if s1 <u a0\n      : @994 (gas: 8)\n 28398: t2 = t2 << 0x20\n 28401: a0 = s0 | t2\n 28404: a3 = t0 * a4\n 28407: s0 = a0 - a3\n 28410: t2 = s0 /u a2\n 28413: a0 = t2 * a2\n 28416: s1 = s0 - a0\n 28419: jump @996\n      : @995 (gas: 4)\n 28421: s1 = s1 + a2\n 28424: a0 = s1 >> 0x20\n 28427: t2 = t2 + 0xffffffffffffffff\n 28430: jump @998 if a0 != 0\n      : @996 (gas: 2)\n 28433: a0 = t2 >> 0x20\n 28436: jump @995 if a0 != 0\n      : @997 (gas: 4)\n 28439: a0 = t2 * a5\n 28442: a3 = s1 << 0x20\n 28445: a3 = a3 | a1\n 28448: jump @995 if a3 <u a0\n      : @998 (gas: 9)\n 28451: s0 = s0 << 0x20\n 28454: a1 = a1 | s0\n 28457: a0 = t2 * a4\n 28460: a1 = a1 - a0\n 28463: a2 = a1 >> ra\n 28466: t0 = t0 << 0x20\n 28469: t2 = t2 + t0\n 28472: a4 = u64 [sp + 0x8]\n 28475: jump @1000 if a4 == 0\n      : @999 (gas: 3)\n 28478: u64 [a4 + 8] = 0\n 28481: u64 [a4] = a2\n 28483: fallthrough\n      : @1000 (gas: 7)\n 28484: ra = u64 [sp + 0x28]\n 28487: s0 = u64 [sp + 0x20]\n 28490: s1 = u64 [sp + 0x18]\n 28493: sp = sp + 0x30\n 28496: a0 = t2\n 28498: a1 = t1\n 28500: ret\n",
            "bytecode": {
              "object": "50564d0000e682000000000000010700c12001c000800380e86c6c616552746f4e4373736f72434179656b6f546e6961681af85fc1fbac358af209d74f347dae39c6658caab400868e9bd16be37ffe4bb69bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af528b67a6be9db161d5e624d7e5d9f6e02e2de44feb9de172787226ae610687e829e46faef4f39eb9d6c00d86a5fedd1f6525b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b003c599e0e5a57c228db122fc9f859f9d002053b5a39c3695bf8716f4416255e9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af52804810b10000000000400000012000000200000002e000000340000003d0000004a00000055000000640000007100000081000000910000009c000000ae000000b900000063616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c6572636f64655f73697a656465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235367265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c034690463616c6cc03c69066465706c6f7906c0bd8081bb02c0566f9b00e3019b03610469043f058305be0504067b06c0061b0727079e07e0072b0838089508aa08d3080d093b095909c709f609ab0a5a0b700b440c590c850ca40db10ddd0de20df90dfe0d030e080e110e2e0e8e0ede0ee30efc0e210f3d0f460f930fa00f01101a1041107c10aa10ca10381168111d129612ac1285139213c313e814f6141f1525153d15431549154f1559157715e5154a1650166b169116ae16b816071714172e175d176d178b17c517d517f3172d183d185b189518a518c318fd180d192b19631973199119cc19e319ee19141a991a9f1add1a0f1b391ba41bdc1bfd1b5b1c691c9f1ccc1c901d831e901eaa1ef51efb1e341f551f9e1fe71f2220b720e220282132216f2179219921cf2101220a222622c322cd2205232d235f2368239a23a423c023f2239a240c2519252f257a258025cb256e26aa26fe2604270a2772277827c227c827e52708284f2859287328bf28c928e028e6280629292961296b298529e429ea29072a2a2aa32aad2ae32a062b772b842ba22bce2be32bed2b8b2c982cfc2c4f2d762dc02d2a2e672e772e1f2f952fae2fbb30fc3029318d31e431fa320c331c339e33ab33163466347334bb3424352a356f357f353a366c36f536303791379e37ce3730385c38d1383939b939f639453a573aad3a183b223b713b813b4f3c603c7d3cb83ccd3cd73c8e3d983de53deb3d2a3e343e5d3e583f6d3f773f943fb13f6140ce40db407a418f4199410b423d42434280420b43154352435c4378439643dc43e64330445d44b244bf4416452b453545af45bc45d6451946274647468a466447c54739486448a848ca48d548f94803494e497d49b649c049d949064a1c4a564a634a8a4a2f4b814b6c4c794cd14cd74c0b4d3f4d0d4ea34e744f814fd94fdf4f2450a050d550db50fc5041515e518c519251b35102527552ca524a53c8530d544954ba5410555f55a7556956795697562f579157bb571d5832583c585e589658c8582c5972598f59cd59dd59fb59665a835aca5ae75a2f5b3f5b635b6e5bab5bc05bca5be75b105c415cac5c0c5d385d835dc05dd45d765ed35e465f545f615fd25f466056605c6065608060866096609c60a560ba608161ae61bc61d561f961686276628d62b162f0623663d363f06332643b645564dc64f96475657e65b465dd65fa6535663e665666c166ce66e46615678867c967e667296846689368b968e2680f693c694569aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f032003908f0000251086219330720010383770a0d2855199511f07b10087b156489647533082064975010025a047c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100412036f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a07821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a0e9551a0821058821550951160320082186f888219086f99821a106faa821b186fbb7b1b587b1a507b19487b18408218206f888219286f99821a306faa821b386fbb7b1b787b1a707b19687b18608379836a8317403308020a06955160ff8210980082159000821688009511a0003200951120ff7b10d8007b15d0007b16c8009515e0008411e082bc7b1c4082bc087b1c4882bc107b1c5082bb187b1b5833020882ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19104911382033000a2892007b183850100a8c006f687b187882186f887b18708218086f887b18688218106f887b18608218186f887b1898008218206f887b1890008218286f887b1888008218306f887b1880008218406f887b18b8008218486f887b18b0008218506f887b18a8008218586f887b18a0008379811a388317603308030a06955120ff8210d8008215d0008216c8009511e00032008b7910520931c8780883881f8488e05638000001253309ec0002390aec0002ae8a093d08ec00020133080001028377c887073200009511f07b10087b158475010a03013d07e8000251050750100c4833000e951110fe7b10e8017b15e0017b16d8019515f001951110e28411e0641695697818492920014929180149290801800033074095688019492910013300d200283ffc951120f8951700077b70d8007b75d0007b76c8009515e0078411e064164926980549269005492680058000330740956880054926880550101006fc4926b8054926b0054926a8054926a0058367a0050a0f01956b000582b7b00082b8b80082b9a80082baa000d49808d4a707d48707510706283e119567600533084050101286fa82637805826b7005826c6805826460058e378eb8db37088ec78849c0859901dbc709d43b077b671801db7809510906280f11954740d84708c88c09d8c90ada880ac8ba0ad8ba08c88302956800057b87407b89487b8a50330740956840057b6258057b63a0007b6b98007b6ca8007b64b00050101449fb8267b00082699800d4970b8268a000826aa800d4a808d48b0b98bb20d49808978820d4b808510806288f1049263805492630054926280595682005492620051950101604fb8269b0001407e0ffffff00000000d879078268a80094878268180194875207062852108397203a0a0000023a080800023a09100002956b00057bba187bb8107bb9081409000000000000006e956800057bb97b67d000501018a9fa9567e00433084050101a63f98264f80495680004828cf000828be8008287e0008e498ec8db49088eba8879c0859901dbba09d44c0a7b6a1801dba809510906285010957340d87308c88b09d8b90ada880ac8ca0ad8ca087b678000c884027b63c0047b69c8047b6ad0043307409568c0047b62d8047b6c707b6b787b646850101c26fa82678000826970d4970a826878826b68d4b808d48a0a98aa20d49808978820d4a808510806286f0f4926b8044926b0044926a8049568a0044926a0040450101ee4f9826980001407e0ffffff00000000d87907826878948782681801948752070628330f8397204926900449268804492680041409000000005458524e956880047b6998047b671850102099f9956760048268b00050102252f895670004827a788278708279688ea78e8bdba70b7b69c8008e977b68587b6ac000d4a8087b67507b6b88007b68b800db8b0751070628a50f826760047b67604926d8054926d0054926c8054926c00503956740049568c00550102421fa956b000482b75082b84882b94082ba58501226196288920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479aa920628af0f50122895628267608877207b679000510aff017b6bf0007b60f8007b6c00017b641001492638044926300449262804956820044926200403330750102ab7f83908ec000256181f0b2003ec000220019517e08479e07b690801649133070001028377839933082033002c0a080182676095781fd87807826cc800c87c09d8c90ada770a826b5850122e17618268900094c8826ab80094a8948b9487c87402d84207c8790cc8cb0b7b6b1801d39b0cd89b0adac70a7b6ae0008267f80095701fd8700b826af000c8ba07d8a70cdabb0c82631001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b67f800d8470764245012306362826758d87b07826ac000c8a70798ba05977b3bd4ba0a826b080182b282bb08987705948a94876fb86f2b501232bc62c8a70282671001d87307826a0001c8a707983a05977c3bd4ca0a987705c8b707826b1801c88a0ad88a08c88707c8a9097b69e800d8a908c887077b67e0009517e08473e064317b63d800018267f800d874078269f000d39b08d89b09da8709826ce800d8c007826ae000d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a5f4926f8054926f0054926e8054926e0059568e00564377b6410017b6b18017b6208017b6000015010348cf88263d80082620801826b180182641001954401884701c87b0bd4b40788770182680001c88707d88708c8820264702868ff82679000857701826bc800826850dbb807826888008269b800db98078263c000d43b0282685898893f7b695097330198bc3f978401826a6098a03f97bb0197a9017b69407b63387b60307b6c287b6448510715027b6288007b6b2084aae07b6a90004926f8034926f0034926e8039568e0034926e0030333075010366af69517e08477e07b67f8006471330820330750103885f99518e08488e07b68f0006481837783893308200a08492618012033024926100149260801330b330c330049260001826af00082a71882a81082a90882a36f776f886f9a6f3364348269f8007b93187b6ad0007b9a107b68f0007b9808647a7b97017b64e80064a3826790007b6be000d87b07857b017b6cd80094cb01956c000182c7d47007947b018268b00082c718c87808826aa800c82a0a8269980082c710c879098267a00082640801c8740482678800520b4b0182671801d8780bc8ba0a6427d32a027b67c000d87a0cda2b0c50123a555e7b63c8005207ea0a956720027b60b80050103c31f4956b000282b73882b83082b92882ba20956b00067bb7187bb8107bb9087bba956800068267f80050103eb2f68264c8009544018847018262f000c87202d424078877018268d000c87803d883088267e800c88707826818019589207b69e800d8890a8268c000c8a8097b69c800d8890bdaaa0b82681001c8b800d8800b82680801c8b8087b6808018268e000958b20d88b0c8269d800c8c908d89809dacc09826ab800c8a909d8a90c826a0001c8ca0a7b6a0001642a7b6af000826cf8007bca08644a7bc47bc31064747bc7187b63d0008267e8007b6718018262c8007b601001648c64902893fe826950d48a07d4270752073401492600014926f8004926080149261001826338826230826828826c48285a016420826360826b9000d33b0b826c58d4cb0bd47b0b826220826c48510bad0082671801d8780bc8ba0ad30a02d80a0cda2b0c501240f55c52078e099567c003501042d9f2956800038287d8007b6710018287d0007b6708018287c8007b6700018287c0007b67f000826760501244665e501046965f7b67e8007b68d0003307ff3308ff82691801501048595f50124a5b5e50104c4f5f50124edd5b82690001501250df5e956b00067bba387bb9307bb8287bb720956820068267f80050105209f5826c4882622001826750826838d48707826828d4c808826930d49209826a4095aa01492658064926500649264806956c0006491c40037bca607bc9687bc8707bc778956740069568600633006228b7f4956700048268d0007b6b20501054fcf1826c48826b20826828826230826338826950826a60826718047b671001826710047b670801826708047b67f800826700047b67000101d48c077b67f000d493077b67e800d42b077b67e000501256ec5d501058955e7b67c0007b68d8008267608a79033307ff3308ff50105a565e7b67d0007b68c8008268c000d487077b67c000826718018379803307ff3308ff50105c315e826b180188b98000826ac000db9a07826cc800826ad80050125ea05d826bd000501260a25b826b40d4b707826be000d4b808826be800d4ba0a826bf000d4b909956c0006492c8000037bc9b0007bcab8007bc8a8007bc7a000492698064926900649268806956780069568a006501062a4f39567a00382688000501064eaf095670003827ab8008279b0008278a8008ea78e9bdba70b7b6898008e877b6990007b6a8800d4a9097b67b8007b6bc0007b69d000db9b0752070b098267a0037b67a0004926d8064926d0064926c8064926c00604956780039568c006501066b5f2956b000382b7900082b8880082b9800082ba9800501268a95a88920184807fd27c04d23c0bdb9800880820d2ac0c648994b9d4c4079479ab92100950126a275b8267a0008877207b67c800510a02027b6bf0007b60f8007b6c00017b641001492678034926700349266803956860034926600304330750106c48f13908ec000256181f0b2003ec000220019517e08479e07b690801649133070001028377839933082033006e0a08018267a00095781fd87807826c9800c87c09d8c90ada770a826b9000501270a6598268c80094c8826ad00094a8948b9487c87402d84207c8790cc8cb0b7b6b1801d39b0cd89b0adac70a7b6ae0008267f80095701fd8700b826af000c8ba07d8a70cdabb0c82631001c8c303973b3b987a05d4ba0a97773b980b05d4b707c847077b67f800d847076424501272f25a82679000d87b07826a8800c8a70798ba05977b3bd4ba0a826b080182b282bb08987705948a94876fb86f2b5012744a5bc8a70282671001d87307826a0001c8a707983a05977c3bd4ca0a987705c8b707826b1801c88a0ad88a08c88707c8a9097b69e800d8a908c887077b67e0009517e08473e064317b63d800018267f800d874078269f000d39b08d89b09da8709826ce800d8c007826ae000d3a208d8a20ada870ad3c007d48707da790a7b347b3b087b30107b3218510a5f4926f8064926f0064926e8064926e0069568e00664377b6410017b6b18017b6208017b6000015010761af18263d80082620801826b180182641001954401884701c87b0bd4b40788770182680001c88707d88708c8820264702868ff8267c800857701826998008268b800db98078268c000826ad000dba807510710028267a0008477e07b67a80049263803492630034926280395682003492620030433075010782eef9517e08477e07b6700016471330820330750107a49f29518e08488e07b68f8006481837783893308200a084926180120330c4926080149261001330b330a330933038267f80082721882781082700882777b67f0006f277b67f8006f846f028267f0006f786480826700017b781864287b68b8007b781064487b68e8007b78088268f8007b78017b60e0008267a8007b6bd000d87b07857b017b6ac80094ab017b63f0007b69d800d43907947b018267800082681801c87808826a787b6cc000c8ca0282647082690801c84909826368826c1001c8c303520b3a01d87800c8020bd3ab02d8ab0cda200c50127c83575207ad039567c00250107ef8ec956b000282b7d80082b8d00082b9c80082bac000956b00077bb7187bb8107bb9087bba95680007826700015020800075ef8260f800950001880701826ae800c87a0ad4a0078877018268b800c88707d887088262e000c88202826818019589207b69e000d889088269c000c8890b7b6bb000d89b0bda880b82680801c8b804d8840b82681001c8b8087b6810018268d000958b20d88b0c8269c800c8c908d89809dacc09826cd800c8c909d8c90c8263f000c8c3037b6ae800826c00017bca08640a7b6af8007bca7bc71064207bc2187b67b8008267e0007b671801826cb0007b640801648a28a5fe826aa000826b9000d4ba07826c8800d4c908d4870752074801492600014926f8004926080149261001287201826ba800826ca000d3cb0b82609000d40b0b7b6b1801826c9800826b8800d4bc0c826b1801d4cb0b510bad00d87800c8020bd3ab02d8ab0cda200c50228200215652074a02956700035020840095eb956800038287187b6710018287107b6708018287087b67f80082877b67f0008267a0005022860025575020880054587b67e8007b68d0003307ff3308ff8269180150208a00165850228c00175750208e000a585022900097548269f800502292009857956b00077bba387bb9307bb8287bb720956820078267000150209400c1ed826090000198073f82688800978801d48707826a980098a83f970901d49808826ba00098b93f97aa01d4a90997ba0195aa01492658074926500749264807956c0007491c40047bca607bc9687bc8707bc77895674007956860073300a400285ded9567400382681850209600a6ea826c8800826b900082699800826aa000956800038287587b6710018287507b6708018287487b67f8008287407b6700010198973f97b801d487077b67f00098b73f97c801d487077b67e80098a73f979801d487077b67e00097a7017b67d80050229800815650209a0029577b67b8007b68d0008267a0008a79033307ff3308ff50209c00e8567b67c8007b68c0008268b800d487077b67b800826718018379803307ff3308ff50209e00c256826b180188b98000826ab800db9a07826cc000826ad0005022a0003056826bc8005022a2003154826bd800d4b707826be000d4b808826be800d4ba0a826bf000d4b909956c0007492c8000047bc9b0007bcab8007bc8a8007bc7a000492698074926900749268807956780079568a0075020a40031ec9567e0023308405020a60077e9956b000282baf80082b8f00082b9e80082b7e0005022a800015451089402003308000102838833070133090a0c014926500149264801492640013302aa00140700000000717b484e01956840017b67580133075020ac0058ea4926380149263001492620014133070495682001492628015020ae003aea3908ec000256183f122003ec0002403308000102280e0233080001022806024926900149268801492680013302b000140700000000717b484e01956880017b67980133075020b200f0e94926780149267001492660014133070495686001492668015020b400d2e93908ec000256183f122003ec000240330800010228a6013308000102289e014926d0014926c8014926c0013302b600140700000000717b484e019568c0017b67d80133075020b80088e94926b8014926b0014926a001413307049568a0014926a8015020ba006ae93908ec000256183f122003ec0002403308000102283e0133080001022836014926100249260802492600023302bc00140700000000717b484e01956800027b67180233075020be0020e94926f8014926f0014926e001223307049568e0014926e8015020c00002e93908ec000256183f122003ec000240330800010228d600330800010228ce004926700249266802492660023302c200140700000000717b484e01956860027b67780233075020c400b8e84926580249265002492640024133070495684002492648025020c6009ae83908ec000256183f112003ec0002403308000102286e330800010228674926b0024926a8024926a0023302c800140700000000717b484e019568a0027b67b80233075020ca0052e84926980249269002492680022233070495688002492688025020cc0034e83908ec000256183f112003ec0002403308000102280833080001020183883307013309240a0c7b6718013300ce002831eb7b6718015020ce002aeb8377330833090a01289ce68267180133085020d00013eb8378330733090a0c2857fd3307e800027b67f8003907e8000255170407288d3b956700208377a0f933083300d4000a020195697818819744015247419bd8950a28d72b5147bb9c05a90a0352473eed62dd0a28ad2d514703defd061d0b5247b3a75e090a28d12752478bc549120a2852235147dd0d1618e8015147dd72b8232305514767e53c316c0452473182a070530c49298003492978034929700349296803956700208377e0fb3300d6000a0f3302d8002833515022d800305182b77882b8800082b97082ba68d49808d4a707d4870751070628f33a8267f8008177330823ac780628f43a9567ff079577e1023300da0033021203283f52956aff0795aa7995ab000282b76882b87080a97802492a60027bb9587bb8509568ff079588c1027bb74833075020dc00b6e69567ff0795777949274002492738024927300264793307209568ff079588a102492928025020de008ce63908ec000256183f0b2003ec000240019517e08479e07b69f80064913307000102837783993308400a08826af80082a71882a81082a90882aa6f776f886f996faa956b781895bc00037bcaa0007bc998007bc890007bc788009567ff07957781029568001c5020e00013e79568ff07958879958900028297207b67f8008297187b67f0008297107b67e8008297087b67e0009567ff07957761023308405020e200afe4956aff0795aa7982a7000295ac000182c8f80082c9f00082cbe8005022e40017505107062892348267e00095a900017b97c8008267e8007b97d0008267f0007b97d8009568ff07958841028267f8007b97e00064b77b6bf80033006e022886e54929c0024929b8024929b0024929a80295670020837720fb3300e6000a0f01956a781895ab00025022e8009b50510706285f398267f800817756170307286239956878184928e0024928d8024928d0024928c802029567e0069568401b5020ea0018e68267f8067b67f8008267f0067b67f0008267e8067b67e8008267e0067b67e0009567c0063308405020ec00bfe3956b000682b7d80082b8d00082b9c80082bac000d49707d48a09d47909989920d48707977720d49707510706289a338267e000956900067b97a0008267e8007b97a8008267f0007b97b0009568a0068267f8007b97b80064a77b6af80033006e022892e4492900074929f8064929f0064929e80695670020837760ff0a0f01956a781895ab000682b7f80082a8000782b9f00082bae800d49808d4a707d48707510706282e388267f8008177330843ac7806281f38956740183300ee0033021203288c4f95687810958900078297c8007b67f8008297d0007b67f0008297d8007b67e8008297e0007b67e000956700208377803308240a0295677818957900078298087b68d8008298107b68d0008298187b68c8008297207b67c00033070001037b67b80083770a048269b80082970881981082996f77977a206f88988820d4a8089877206f99979a20d4a707989920956a7810826bc00095ac00077bcb8000826bc8007bcb78826bd0007bcb70826bd8007bcb68826be0007bcba000826be8007bcb9800826bf0007bcb9000826bf8007bcb88007bc9b8007bc7b0007bc8a80095672018956800189569e017492ac0075020f000b9449567c0173308405020f200fbe1956a781095ac000782cb6082c85882c95082c7485022f400324d51080628e531492a4007492a3807492a2807019568a017492a30077b67f80033006e0228f2e249296003492958034929500349294803956700208377c0fb3300f6000a0f3302f80028d74c5022f800d44c82b75882b86082b95082ba48d49808d4a707d4870751070628d8368267f80081775617030728db369567ff07957721023308405020fa0057e1956aff0795aa7995ac000182cbc00082c8b80082c9b00082c7a8005022fc00874c510806283a31492aa001492a9801492a8801129568ff0795880102492a90017b67f80033006e022843e2492900034929f8024929f0024929e80295670020837760fb3300fe000a0f01956a781895ab000282b7f80082a8000382b9f00082bae800d49808d4a707d487075107062849368267f8008177330863ac7806284a369567ff079577e101330000013302120328354d9568ff0795887995890001829780007b67a8008297787b67b8008297707b67f8008297687b67f0009567ff079577c1013300020133021c0328fa4c9568ff07958879958900018297607b67a0008297587b6798008297507b6790008297487b67880095670020837780fb3308440a0295677818957900038298207b68e8008298187b68d8008298107b68c8008297087b67d0008267b8009777209877209569ff07959979492940017b6778959a00017ba7388267f8007ba7309568ff079588a1018267f0007ba7283307502004010ee19568ff079588794928200149281801492808010164893307209568ff07958881014929100150200601e3e03308ec00023907ec000256173f0b2003ec000240019517e08479e07b69b00064913307000102837783997b68c0003308407b67e000330008010a08826ab00033020a0128194c826ab00050220a01124c7b67686f877b67606f977b67586fa77b67509517e08477e07b6770647133070001037b67b00083777b67800033000c010a048269b00033020e012806488269b00050220e01ff47492900017b98f8007b97f0009568ff07958861017b9ae8003307502010012ce08267509568ff079588797b87e0008267587b87d8008267607b87d000648a3307209568ff07958841018269687ba9c80050201201f6df8268c000818756173f08480840019517e08477e07b6768647183793308408267e000330014010a08826a6833021601282a48826a685022160124488268707b8a187b89107b8b087b879567ff07957721015020180191e09567ff079577798274c000827ab800827bb0008272a800d24b07d2a208d287075117ff54028267d000d872038268c800d38b07d88b0cda730c8269d800d89a008268e800d38407d88408da7008d3a909d49707da7c087b62707b6b687b64607b6a5851080628e7387b60407b6c487b63508267f000826878d487078268f800d4870752070628c8398267800033001a010a048269b00033021c0128dd498269b00050221c01d649520706280d3a9569ff079599794929a0008267f0007b9788008267f8007b9790009568ff07958801018267787b979800330750201e01c0de9568ff07958879492880004918784918680164893307209568ff079588e1004919705020200198de8268c000818756173f08480840019517e08477e07b6778647183793308408267e000330022010a08826a783302240128e249826a7850222401dc497b67386f877b67306f977b67286fa77b67209517e08477e07b6778647182678000330026010a048269b0003302280128db458269b00050222801d4454919607b98587b97509568ff079588c1007b9a48330750202a0105de8267209568ff079588797b87408267287b87388267307b8730648a3307209568ff079588a1008269387ba92850202c01d3dd8268c000818756173f08480840019517e08477e07b67c000647183793308408267e0000a088267d800826858c97807826948c99708d897078269e800826a60c99a09826a40c9a909c979098267c800826a68c97a07826a50c9a707956a781895ac00037bc9407bc8387bc730826bc00082b78268d000826970c989087bc82882b8086f798267787b791882ba1082b9186f887b78106fa87b78086f987b789568a01b50202e019ede8267d0007b674007826788007b6760078267f0007b6780078267c8007b674807826790007b6768078267f8007b6788078267d8007b675007826798007b6770078267b8007b6790078267e8007b6758078267a0007b677807956780079568600795694007826aa8007b6a980750203001303e956720073308405020320172db956b000782ba3882b83082b92882b72050223401004651080628602b4926180749261007492608079568000749260007017b67f80033006e02286ddc49296001492958014929500149294801956700208377c0f9330036010a0f3302380128ba4750223801b74782b75882b86082b95082ba48d49808d4a707d487075107062894308267f8008178561803072898309568781849288001492878014928700149286801039567c0029568e01950203a01ecdc956800028289d000828ac800828cd8008287c000979b3f98a801d4b80297c83f7b69f000989901d498087b6ae00097a93f987a01d49a0b7b6ce80098c3017b67d000847c019acad28a04d22a09d23a0a84b77f7b67d800dac70b88b7209497d4a40894877b6cf80088c801aa78062815307b6bb800956c00027bcba0007b69a8007bc9a8007b64b0007b64b002330780009568a0027b6aa0007bcab80050203c0157db8267f80051070628f8238267d000847700ff8268e000956900027b98287b97208267f0007b97308267e8007b97383307a0009568200250203e011bdb330833073302330ac0008269d800939aa0002859257b62b0007b6cb8007b6bc0007b6ac80051474356137b0a28b72e4929c0034929b8034929b0034929a80395670020837720fc330040010a0f3302420128ce4450224201cb4450224401fa4551070628ad2f8267f80081775617630728b12f95670020837740fc3308040a0201956a781882a7d80382a8e003857901d489098877019487939752070628952f82a7d0037b67f80082a7c8037b67f00095670020837760fc330824330046010a0233024801285a4450224801574482b7f80082a8000482b9f00082bae800d498087b6a70d47a09d48909989920d48707977720d49707510706284a2f33070001037b67e80083777b67e00033004a010a0433024c0128864150224c01834149292005959b00057bb8187bb710956880157bba08330750204e01e0d995677810492700054927f8044927f0046479330720956860154929e80450205001bdd93307ec00027b67d8003907ec000256173f0c8268d800480840019517e08479e07b69a80064913307000102837783993308407b67d000330052010a08826aa80033025401287741826aa8005022540170417bca207bc9187bc8107bc708956740159568801c5020560144da956a781095ab000482b7d00082b8e00082b9c80082bad800826cf800d3c70bd8c707826cf000d8c909dbb709d4a808948951090628572e8267e000330058010a048269e80033025a0128e1438269e80050225a01da4352070628922e8267e00033005c010a0433025e0128684050225e0165404929c004959b00047bb8b8007bb7b000956820157bbaa800330750206001bfd8956778104927a004492798044927900464793307209568001549298804502062019cd88267d800817756173f0c8268d800480840019517e08477e07b67a800647183793308408267d000330064010a08826aa80033026601286540826aa800502266015e407bca407bc9387bc8307bc7289567e0149568a01c5020680132d99567781095780004828a70828b8000828968828c788268f800d38a077b6aa000d88a0a8268f0007b69a800d889087b688800da780a7b6b98007b6c9000d4bc077b6a800064a89478510806281a2e8267e00033006a010a0433026c0128643f50226c01613f49296004959b00047bb8587bb7509568c0147bba48330750206e01bed79567781049274004492738044927300464793307209568a01449292804502070019bd78267900082688000c987097b6978d8870782689800c978087b6898008267d80081778268f8008269a000c9890882698800c998087b68a0008269f000826aa800c99a0a7b6aa80056173f0c8268d800480840019517e08477e07b679000647183793308408267d000330072010a08826a90003302740128233f826a9000502274011c3f7bca607bc9587bc8507bc748826798007bc780008267787bc7788267a0007bc7708267a8007bc7689567c01c9568e01c5020760155d8956778184927a00449279804492790044927880402956780149568001d50207801b1d795687810828710048282200482830804828418048269f800d3970bd8970c826af000d8a308dab80cd8c40bc9b20bc9c40cc99707c98707956978184929a80402c9a308959a00047ba8c8007ba7d0007bacd8007babe0004929c0044929b8044929b0049567201d9568401d50207a01c1d79567601433084050207c0107d5956a781082ab000495ac000382c8f80082c9f00082c7e80050227e013a4051080628ed24492ae003492ad8038268f0007ba8c803956840148269f8007ba9d0037b67a80050208001f7d58267e000330082010a048269e8003302840128343e8269e800502284012d3ed4780298aa206f98978920d4a9039888209567781049278003956778104927780395677810492770039567781049276803956778104927a0033a0a3800023a0b4000023a0c4800023a07500002956978107b9ac003956978107b9bb803956978107b9cb003956978107b97a803956778107b789803956778107b73900333082095692014956a0014956be013956778107b7288038267a8005020860177d79567c01333084050208801f3d3956978108292600395980003828a58828c50828748d42c0bd4a708d4b808988820d4ab0b97bb20d4b80851080628cd23492938034929300349292803140b000000002e1b05149568a0137b9b40037b6ab8007b62b0007b6cc0007b67c80050208a01c9d48267b8008268b000d4870a140900000000010000001407fcffffff000000008268c800d878078268c000948794a75207062865237b69a000330900e1f5058267f0008268f8007b6aa80033008c01330b284d408269c800839904956a7810492a2003492a18037ba81003956880137ba70803649750208e014fd4826aa8008269c8008267a0009577dcd879078268c000948794a752070628ff2282677097772098782083972495697810492900034929f8027b98e802956860134929f0025020900105d495670020837760fd3308440a0201826cc8001407bcffffff00000000d87c078268c00094878268a800948752070628a422956778188272e8048278f004827af804827b000583c74495697810959c00027bcbe0007bcad8007bc8d000956840137b92c802502092019bd30a093a075800023a086000028269e8007b97087b984819108f126c6495677818492720054927180549271005492708053308648267c800502094018fd67b67a8008267c8003308502096017fd69569781848292805959a0005491a60ff491a58ff491a50ff491a48ff8268e800978820988920140800000000080000007b69a000d489029568801d9788209888209569c01d979920d4890a8268a80097882098882014090000000064000000d4980b9777209877209568a01d978820d4780c3308ff3309ff7b62a80064270a015107062899210a0b016478987720510706288a2183877b6790008267c8007b68980050209801d7d595687818826998007a898805837795680020838800fe33090a0a01956778188177880582689000ae8706284921956a7810492a8002492a7802492a70028267980095ab00027bb7688267c8007bb788008267c0007bb790008267b8007bb79800956700139568e0128269b0007bb9a00050209a012b318268980056181f0728632e9567c0128268c80050209c01ddd0956878108282600282875802828950027b678000d4270a889b0194ab520b0628332e828a4802826cc800c8ca08d8a80a8260c000c8090bc8ab03d3930bd89307daba077b67880082679800c8c707d8c70b958c1f7b689000d88c047b679800d87c0cc8b009c8430ad39a07d89a08db780c7b6978d80907dabb078268b800c87800d88007826bb000c87b09c8b202826b8000c88b07d8b708c82808826b8800c87b0bd87b07c87802d83a07da4407c8b707d8b708c82808d398047b698800d89808d8070ada4a08d30707d44707db780c520c06287f2d82699000d4b907d42308d48707987720d4b808978820d4870751070628f21f64987b60207b62287b6b307b63389567a01250209e01d0cf956b781095bc000282c74082c83882c93082ca287b67707bc77b686895bc00017bc8f8007b69607bc9f00095678012956860127b6a80007bcae8005020a001033195687810958900028297087b67588297107b67508297187b67488297207b6740956740123308405020a20162cf956778108278e0017b68b0008279d8017b69b800827bd0017b6bc000827cc8017b6cc800826a407b7aa001826a487b7a9801826a507b7a9001826a587b7a8801957a00017ba8c0007ba9b8007babb000647995672012956800127b9ca8015020a401332f8267c8008268b0008269c000d48909826ab800d4a708d49808988820d4a909979920d4980851080628dd1e9569781082688000959b00017bb8688268607bb8708268687bb8789568e011826a707bba80005020a601e1cf82679000826a8000c87a0a6474d87a09826838826760c88707c89707d3870bd88703dab903826930826068c8900095ac20d8ac02c8270b82689800d8c80c826878d38b0ad8b808dba80cd89008826a28826970c89a0ac8a808c80303d80309c89808d87b07da2207c83707d83709c89808826a8800d3a809d88a08826b20d87b0ada9a08d3b707d49707db780c510c06288c2b8267b8008268b000d478081407e0ffffff000000008269c800d87909826ac00094a9948952090628f41d826830826928d49808d874078269389497948752070628db1d82696882678000d49707826870826a60d4a808d48707987720d49808978820d4870751070628b31d8267c8008377208348207b689800826880005020a801fcd17b67900082679800826880005020aa01ead1647882679000826980005020ac01eacc8267c80082628000c87202d87208826bc000826960c8b909c88909d3b90ad8b90bdaa80b826ab800826868c8a808d8a80a826cb000826770c87c0cc8ca0ac88b0bd88b08c8a808d4b808140ae0ffffff00000000d8a20a949a948a520a0628181d832720956978104929600149295801492950019568c011492948015020ae0127ce9567a0113308405020b001e0cc956a781095ab000182b74082b93882b83082ba287b6790007b688000d487077b6a9800d49a08d478089888207b698800d49707977720d4870751070628ab1c95697810492918014929100149290801140700000000230c4047956880117b972001826798005020b201afcd8267900082688800d487071408fcffffff0000000082699800d88908826980009498947852080628551c8267980083770495697810492900014929f8004929e80020956860114929f0005020b4015fcd826898009587245022b601d336956878107b8990007b8788008267b0007b87c0008267b8007b87b8008267c0007b87b0008267c8007b87a8007b8a9800648a9567401195682011956900117baba0005020b8015929956878108287d0008282e0008283c800828ad80082688000d3870bd8870c648082649800d84308dab80c82698800c99a0bd89a0a82699000c99209c9a909d8cb0ac9a9097b6970c9cb0b7b6b68c90707c987077b6760c943077b67783300ba010a093302bc012891365022bc018e364929c0054929b8054929b005826778647a826b68d4b707826870826c60d4c808d48707987720d4b808978820d487074929a80551070628321b8267980064a85020be0187cf7b6768330840826798005020c00177cf95697818491670404829c8054049290006ff959a0005492af800ff492af000ff492ae800ff9568201e9788209888209569601e979920d4890a826868978820988820826b7897bb20d48b0b9777209877209568401e978820d4780c3308ff3309ff8267a8000a0151070628681b0a0b015517400a0a0b7b677001956978108267707b9728826798007b97484926a800491930826780007b9750491938826788007b97584919409567c0109568a010826a90007b9a605020c201862a826aa8008ea7826870888840858801dba7088ea78ea9daa709d4aa07da7809520906283427956780103308405020c4011fca95687810828720828c18828a108289088e7b8ec8db7b088eab7b69a8008899c08599017b6a78dbab096472d4c7077b6760db780951090628f9268268a800958740d88708826a78c88a09d8a90ada880a7b6c70c8ca0ad8ca087b6268c8820b9568ff07958879958c00077bc7e8007bc9f0007bcaf80033074095686010956978107b9b5020c601d0ca826790009568ff07958879958900077b97c000826788007b97b800826780007b97b000648a9567401095682010826998007ba9a8075020c801872b8267a800826970d49707826878826a68d4a808d48707987720d49808978820d48707510706283d19956bff0795bb7995bc000782c7e00082c8d80082c9d00082cac8007bca88007bc990007bc89800956800107bc7a0008267a8005020ca0134ca826898009587205022cc01a8339568ff07958879958c00077bca587bc9507bc74864899567ff079577e1079568ff079588c1077b9b60075020ce01e92a1407e0ffffff000000008268a800d878078268789487826860948752070628a618956bff0795bb7982b2800782b8780782b9700782ba6807826ca80083c72095bc00077bca287bc9307bc8389568ff079588a1077bb240077b6788005020d00195c98268e8004918084908481810000a8267e0000a050152070628b8259567ff07957781073308405020d2012fc89567ff07957779957c000782c82082c91882ca1082cb087b6898007b6ad000d48a077b6bd800d49b08d478089888207b699000d49707977720d4870751070628f7179569ff079599794929f8064929f0064929e8061407000000004de0b7d39568ff07958861077b9700078267d8005020d401f4c88267980082689000d47809140700000000010000007b67781407fcffffff000000008268d800d878078268d00094877b69800094975207062889178267d8008377049569ff079599794929e0064929d8064929c806609568ff07958841074929d0065020d6018cc88268d800958764d88708826ad000c88a09d8a90ada880a82689000c88a0ad88a08826b9800c88b0b9568ff07958879958c00067bc9707bc7688267b0007bc7a0008267b8007bc798008267c0007bc790008267c8007bc788007bca78648a9567ff07957721079568ff07958801079569ff079599e1067bab80065020d8015b249568ff07958879958900068297c0007b67b8008297b8007b67b0008297b0007b67c0008297a8007b67c8009567ff079577c1068268a8005020da0195c68267789577dc8268d800d878078268d00094878268800094875207062880169569ff07959979829848068267d80083772449294006492938067b9828069568ff079588a106492930065020dc0180c79567ff0795778106826888005020de0134c61407bcffffff000000008268d800d878078268d0009487826880009487520706281b169569ff07959979829708068478ff8267d800837744492900064929f8057b98e8059568ff07958861064929f0055020e00118c78262c8008260d800d80203826cd0008268c000d3c80ad8c809daa309826a9000826bb000c9ab07d8ab04826b9800826ab800c9ba0bc94b0bd8970ac9ab0b7b6bb800c997077b67b000c9c808c938077b67c000c902077b67c8003300e2010a097b67a8003302e401289d307b67a8005022e40196304929400649293806492930068267c800647a826bb000d4b7078268b800826cc000d4c808d48707987720d4b808978820d487074929280651070628361564a883a77b67b8008267d8005020e60185c97b67c0008267d80033085020e80175c9956a7818482a48068268b8008e88826ba8008eb9fc08d498089a8995ab00067bb980007bb9787bb9707bb9689788238269a000d498029568a01e9788209888209569e01e979920d4890a8268c000978820988820826bc80097bb20d48b0b9777209877209568c01e978820d4780c3308ff3309ff64270a0151070628dc159568ff07958879492840044928380449283004492828048267d800958900047b97488267d0007b9750826790007b9758648a9567ff079577c1049568ff079588a104826998007ba960045020ea0171249567ff07957781043308405020ec012bc4956aff0795aa7995ac000482c72082c81882c91082cb085022ee01972f51070628121464ba9569ff07959979492900044929f8038267f0007b97e8039568ff07958861048267f8007b97f00364b77b6ad8005020f0010dc58267e0003300f2010a048269e8003302f401284a2d8269e8005022f401432dd4780298aa206f98978920d4a9099888203a0a6800029567ff079577797b7ae0033a0a7000023a0b7800023a0c8000027b7ad803957a00037babd0004927c0037bacc8007ba8b8007ba9b0003308209569ff0795994104956aff0795aa21047b72a8038267d8003300f601951160ff7b1098007b1590007b1688009515a0008411e082ab7b1b3882ab087b1b3082ab107b1b2882aa187b1a20829a7b1a18829a087b1a10829a107b1a088299187b1964863300062865c7330733085020f8015ec78378330733090a0c28fd177b62b0007b6cb8007b6bc0007b6ac8008267f80081775617030728381b4929e0014929d8014929d0014929c80195670020837740fa3300fa010a0f3302fc01284f2f5022fc014c2f82b7d80082b8e00082b9d00082bac800d49808d4a707d4870752070628ff1a33070001037b67f00083777b67e0003300fe010a048269f0003302000228762e8269f000502200026f2e52070628151b95687818492800024928f8014928f0014928e80102956780069568601a502002025ac495680006828798007b67d000828790007b67f800828780007b67a800828788007b67e8009517e08477e07b67d8006471956778184927200249271802492710024927080295670020837780fa0a0f0195677818957a000282a91082a8088272200282ab18826ce800c89c0c8267a800c87803d88308c88c0cd39c0ad89c09daa8098268f800c8b8088260d000c80202d8b80ac82a0ac88909d88908c88a04826ae800d3ca08d8ac0bd87307db8b07826af800d8a902d3400bd80408dab208d39a0ad4ba0adba8078268d8007b837b8c087b89107b8418510706287c1a9569781849294002492938024929300249292802029567a01a50200402e0c38267e000330006020a048269f0003302080228342a8269f000502208022d2a49267806956900067b98707b9768956860067b9a60330750200a0231c2492658064926500649264806330720956840064926400650200c0214c29517e08477e07b67f80064713908ec000256183f0b2003ec000240019517e08479e07b69e80064913307000102837783993308407b67a0000a08826ae80082a71882a81082a90882aa6f776f886f996faa826bf8007bba187bb9107bb8087bb79567781849276002492758024927500249274802956700208377c0fa0a0f95677818957900028298607b68e8008298587b68d8008298487b68d0008297507b67a800956720068268f80050200e0256c2826728068268200682623806826a3006826ba800c87b0b826cd000c88c0cd88c08c88b0bd37b09d87b07da98078268d800c8a808c88707d887038269e800c89202d8a808c82808c8380895697818959a00027bac687bab707ba7787ba880009568e01a8267f800502010026ac29567000633084050201202b0bf956800068287187b67e8008287107b67d8008287087b67d00082877b67f800956778184927a00249279802492790024927880295670020837700fb0a0f018267e8008268d000d487078268f800648b8269d800d49808d47808988820d49707977720d48707510706284f0f956a781895ac000282c7880082c8900082c9980082caa0007b6af8057b69f0057b68e8059568e0057b67e00564b7502014024bc08267e000330016020a048269f000330218022888288269f000502218028128d4780298aa206f99979820d4a808989920492698054926b8054926b0054926a8054926a0053a0a3800023a0b4000023a0c4800023a075000027b6ad805956a00057babd0007bacc8007ba7c0007ba990007ba888003308209569c005956aa005956b80057b6280058267f80050201a02f7c133078268a00033090a0c2888134929a00149299801492990014929880195670020837700fa33001c020a0f33021e0228f72a50221e02f42a82b7980082b8a00082b9900082ba8800d49808d4a707d4870751070628bf178267f8008177330843ac780628c1179567c0043300200233021203289c2a956800048287d0007b67d8008287c8007b67f0008287c0007b67f8009517e08477e07b67e000647195670020837720fa3308240a0295677818957b000182b8c00082b9b80082bab00082b7a8007b689000826be0007bb8187b6988007bb9107b6a80007bba087b67787bb733070001037b67e80083777b67d000330022020a048269e800330224022895298269e800502224028e295207062828178267d8009777209878208267f0008269f800d497077b68d800d48707520706286a178267d000330026020a048269e80033022802284f268269e8005022280248264926b8047b68b0047b67a8049568a0047b6aa004330750202a024dbe49269804492690044926800401330720956880044926880450202c022fbe3308ec00023907ec000256173f0b2003ec000240019517e08479e07b69b80064913307000102837783997b68c8003308407b67c00033002e020a08826ab80033023002286529826ab800502230025e297b67b0006f877b67a8006f977b67a0006fa77b6798009517e08477e07b67b8006471492678048267d8007b6770048267f0007b676804956860048267f8007b67600433075020320295bd82679800956a00047ba7588267a0007ba7508267a8007ba748330720956840048269b0007ba9405020340268bd8268c800818756173f08480840019517e08477e07b67c800647183793308408267c0000a08826ac80082a71882a81082a90882aa6f7b6f886f996faa8267b8007b7a187b79107b78087b7b8268e0005020360286be9567200433084050203802ccbb956b000482b73882b83082b92882ba20d49707d48a09d47909989920d48707977720d497075207ae0b826778956900047b97826780007b9708826788007b971095680004826790007b971864a77b6ae00050203a02afbc8267d00033003c020a048269e80033023e0228ec248269e80050223e02e524d4780298aa206f99979820d4a8089899204926b8038267d8007b67b0038267f0007b67a8038267f8007b67a0034926d8033a0a8800023a0b9000023a0c9800023a07a000027b6af8037b6bf0037b6ce8037b67e0037b69d0037b68c8033308209569e003956ac003956ba0037b62c0038267e0005020400253be9567800333084050204202cfba956b000382ba980082b8900082b9880082b780005022440259255208bc0a4926780349267003492668039568600349266003017b67f80033006e0228c8bb4929c0064929b8064929b0064929a80695670020837720ff330046020a0f01956a781895ab000650224802dd2651070628730f8267f80081775617030728660f9567801733084050204a0244ba95687810958900078297207b67588297187b67608297107b67688297087b6770956878184928e0064928d8064928d0064928c80604956760179568401f50204c022dbc956778108274f8068270f00682730007827be80697473f980801d4870797383f984901d4980897093f98ba01d49a0c9839017b6be80084bb019abad2a808d27a02d2a90984c77f7b67f000dab70c7b6cb80088c7207b62a80094277b68b0007b69a000d4980894877b6bf80088b801aa7806281414826960826a70d49a07826868826b58d4b808d48707987720d49808978820d478085208720964a77b60d0007b64d8007b63e0008268b800956a781095ab00067bb8c8008268a8007bb8d0008268b0007bb8d800956840178269a0007bb9e00050204e0261ba8267f8005207b605826760826858d487071408e0ffffff00000000826a70d88a0882696894989478510806098267e800847800ff83a720956a78108269d00095ab00067bb9507bb8488268d8007bb8589568c0168269e0007bb9605020500200ba956b7810826c703304330333028267f0008e779777057b67f80028450749294007492938074929300749292807956700208377a00a0f01956a781895ab000782b73882b84082b93082ba28d49808d4a707d487075207840d8267f8008177330843ae78770d95676019330052023302120328e324956878188287e8007b67e8008287f0007b67d8008087f8007b67d000956740193300540233021c0328b824956778188278c8007b68f8008278d0007b68f0008078d8007b68e0004927c0008268d0007b78b8008268d8007b78b000956820198269e8007b79a8003307502056021db9956978184929a000492998004929880001330720956800194929900050205802fbb8330840330750205a0221bc9518e08488e07b68e80064818377838933084033005c020a08826ae80033025e02284824826ae80050225e0241247b67d8006f877b67d0006f977b67c8006fa77b67c0009517e08477e07b67e800647195697818492980008267e0007b97788267f0007b97709568e0188267f8007b976833075020600277b88267c000956878187b87608267c8007b87588267d0007b8750648a3307209568c0188269d8007ba9485020620248b83908ec00025518400b2003ec000240019517e08479e07b69f8006491330700010283778399330840330064020a08826af80033026602287520826af800502266026e208268e8007b8a187b89107b8b087b879567a01850206802deb8956878188287407b67f8008287387b67f0008287307b67e8008287287b67e0009567801833084050206a0285b6956a781882a72082a81882a91082ab0850226c02f82152077606956778108268e000957900077b98e8008268e8007b98f0008268f0007b98f800956860188267f8007ba764b77b6bf80050206e026fb73308208267f8005020700293ba837833092033070a0c014926980249269002492688029568800249268002033307502072023bb79517e08478e064814926f800330c330433033a02a800023a09b000023a00b800023a07c000027b82187b69d0007b89107b800864797b87140760ffffff000000007b6798007b689000017b69d8008267b8008269f800d879078269a800d39c0a7b6cf000d89c09daa709826bb000d8b407826aa000d3a30cd8a30adac70ad3b407d4c707da790a510ae200956760027b63e8007b62c8007b64e0007b60c0005020740288b7826ce0008267e800d4c7078268f80082699800d898088269f00094989478510845058262780295690002829870829a68829b608267f8008377a0007b9b407b9a487b9850956840027b6258025020760244b68263e800826cd80095cc0188c7018260c000c87000d40c078877018268d000c88707d88708826ac800c88a0a8268f800958220d88209826bf000c89b04d8b40bda990b8268e000c88b0bd88b09c89303826890007b800864c97b8c7b87107b8a187b67d0007b62f800644c64b464a228e4fe8267f800957aa000d87a078269f000c87908d89809da7709c89407d84702c832020195ab80d8ab0ac8a80c95ccffd38c09d88c08da9a089579ffc89808d89809887701c97207c879094926180249261002492608024926000280007b6be0017b6ce8017b68f001956700029568e0017b69f8015020780254149567c00133084050207a0212b495680001828bd800828cd000828ac8008287c000d4ba09d4c708d49808988820d4c909979920d498085208f0034926b8014926b0014926a8019568a0014926a001207b67f8007b6ae0007b6bf0007b6ce80050207c02f4b450227e026c1d7b6948017b6740014926780149267001492668014926600180007b6a50019567800195686001956940017b6b5801502080020911826888018262980182638001826a9001281e03956978104929c0064929b8064929b006956820174929a8060433075020820286b49517e0847be064b14926f8003304330333023a001800023a0a2000028268709587207b679800d88707826868c878097b699000d88908da77083a0c2800023a073000027bb0187b6ac0007bba107b6cd0007bbc0864bc64797bb7826760c878087b688800d87807826858c887077b6780007b6b78017b69c8007b60d8008267b8008268f800d878078269a800d39408d89409da8709826bb000d8b307826aa000d3a208d8a20ada870ad3b307d48707da790a510a2b019567001764c87b62f0007b63e8007b64e00050208402aab48264f8008263e0008260e80082689800c84807d88708826b9000c83b09c88909d3b90cd8b90bdac80b826c8800c80c08d8c802826cf000826a8000c8ac0cc82c0cc88b0bd88b08c8c808d49808d4b709d48909d4b808989920978820d4980852082602956c781082c2a00695ca000682a8980082a9900082ab88007bab687ba9707ba8789568e0167bc280067b64f8005020860222b38262f000826ac80095aa0188a7018260d000c87000d40a078877018268c000c87804d884088267d800c887078268f800958320d88309826be000c89b08d8b80bda990b8269e800c89b0bd89b09c8920264097b69d000826c787bc90864a97bca644a7bca1064707bc7187b6ac0007b63f800648464b3289bfe956b7810826c70018268f800958720d88708c88409d8490ada880ac83a0ad83a08c8820295b800067b8c287b87088267687b87308267607b87387b89108267587b87407b8a189567a016956880167bb22006502088024c119567601633084050208a020ab1956b781082ba000682bcf80582b2f00582b7e805d4a209d4c708d49808988820d4c909979920d498085208e800492be005492bd805492bd0057b6af00095684016492bc805207b67f8007b62e0007b6ce80050208c02ecb150228e02641a95687810958c00057bc9707bc7688267587bc7a0008267607bc798008267687bc790008267707bc788007bca78648a95672016956800169569e0157bab800550209002f00d956778108278b0058272c0058273a805827ab805018267e000d3780bd8780c64708267f800d87304dab40c8267e800c97a0bd87a0a8267f000c97209c9a909d8cb0ac9a9098267f800c9cb0bc90808c9480ac97308d4a909d4b80ad49a0ad4b90998aa20979920d4a9095109eb0c009567201333084050209202ebaf95677810957900028298c0007b68f0008298b8007b68e8008298b0007b68e0008297a8007b67f800330094020a0b3302960228a41b50229602a11b5208b764799877205207af83977b67f0008267f80064987b69e80050209802fab3956878188269e8007a8968058377956800208388e0fd33090a0a9567781881776805018268f000ac876fff0a0b016478987720520763ff8267f8007b68f00050209a02b5b383788169f0003307010a0c0a0b288c029567e01033084050209c022daf95677810827880007b68f0008278787b68e8008278707b68e0008277687b67f80033009e020a0b3302a00228ed1a5022a002ea1a520800ff9878205208f9fe64787b67e80083777b67f0008267f8005020a20243b3956878188269e8007a890806837795680020838880fe33090a0a9567781881770806284aff0a0b015207fc014926f0004926e8004926e0004926f80060019567ff07957781053308405020a40289ae9567ff07957779957c000582ca2082cb1882c91082c8087b69d0007b6ac800d4a9077b68d800d4b808d478089888207b6bc000d4b707977720d48707520754fe9569ff079599794929f8044929f0044929e804140700000000fe37917d9568ff07958861057b9700058267d8005020a60250af8267c8008268c000d487071408fcffffff000000008269d800d889088269d000949894785108f9fd8267d8008377049569ff079599794929e0044929d8044929c804209568ff07958841054929d0045020a802fbae8268d800958724d88708826ad000c88a09d8a90ada880a8268c000c88a0ad88a08826bc800c88b0b9568ff07958879958c00047bc9707bc7688267e0007bc7a0008267e8007bc798008267f0007bc790008267f8007bc788007bca78648a9567ff07957721059568ff07958801059569ff079599e1047bab80045020aa02ca0a9568ff079588798287b0048282c0048283a804828ab8048268d000d3870bd8870c64808264d800d84308dab80c8269c000c99a0bd89a0a8269c800c99209c9a909d8cb0ac9a909c9cb0bc90707c98707c94308d497076489d4b808d47808d4b707988820977720d487075207defc8267d80064987b69f8005020ac022eb183788169f8003307010a0c0a0b28050a0b016479956aff0795aa79492ac005492ab805492ab0059567ff07957741069568ff07958821067b69b8007ba9a8055020ae02f20d9567ff07957779957900058298c8007b68d8008298d0007b68d0008298d8007b68c8008298e0007b68c0009567ff07957701063308405020b00242ac9567ff079577798278a0057b68e000827998057b69e800827c90057b6cf000827b88057b6bf800826ac0007b7a6005826ac8007b7a5805826ad0007b7a5005826ad8007b7a4805957a00057ba880007ba9787bac7064799567ff079577e1059568ff079588c1057b9b68055020b202060c8267e0008268f000d487078269e8008268f800d49808d47808988820d49707977720d487075207b3fb9567ff079577794927400549273805492730059568ff079588a1058269b8007b7928058267f8005020b402b5ac0a0b018268e8008269e000d498081409e0ffffff00000000826af800d89a09826af00094a9948951095bfb6478987720520752fb8267f80083772064897b68d00083887b68d80064985020b60297af956878188269d0007a898806837795680020838800ff33090a0a0195677818817788068268d800ac870cfb2867fc330800010283880133070133090a0c01330733085020b8024faf837828ec3308000102838833070133090a0c28e43308000102838833070133090a0c28d43308000102838833070133090a0c28c43308000102838833070133090a0c28b43308000102838833070133090a0c28a43308000102838833070133090a0c28943308000102838833070133090a0c28843308000102838833070133090a0c2874ff3308000102838833070133090a0c2863ff3308000102838833070133090a0c2852ff4926300149262801492620013302ba02140700000000717b484e01956820017b67380133075020bc024cab4926180149261001492600012233070495680001492608015020be022eab3908ec000256183f142003ec00024033080001028388285a04330800010283882850043308000102838833070133090a0c28d5fe3308000102838833070133090a0c28c4fe3308000102838833070133090a0c28b3fe3308000102838833070133090a0c28a2fe9569ff079599794929980249299002140700000000b78066357b97a0029568ff07958801034929880233075020c00296aa8267d800817756171f1a8268d8004808203307013309048268d0000a0c28a9013307013309048268d0000a0c289a019567ff079577794927d8024927d0024927c80264791407000000001efdc6969568ff07958841037b97e00233075020c20234aa9567ff079577794927c0024927b8024927b00264793307049568ff07958821034929a8025020c4020aaa8267d800817756173f1a8268d8004808403307013309248268d0000a0c281d013307013309248268d0000a0c280e019567ff0795777949275803492750034927480364791407000000008cd350e49568ff079588c1037b97600333075020c602a8a98267e0003300c8020a048269e8003302ca022843118269e8005022ca023c1149294003959b00037bb8387bb7303307049568ff079588a1037bba285020cc0267a982679800956aff0795aa7995ab00037bb720826790007bb7188267a0007bb7103307249568ff07958881038269a8007bb9085020ce022fa99568ff07958879492800038267f8007b87f0028267f0007b87e80264893307449568ff07958861034929f8025020d002fda88267d800817756177f1a8268d800480880003307013309648268d0000a0c280f3307013309648268d0000a0c013308000102838833070133090a0c289afc4926f0044926e8044926e0041407000000003c2bce9d9568e0047b67f80433075020d20299a83908ec000256181f0b2003ec00022001330800010283883307013309040a0c01492630054926280549262005140700000000052f44ec956820057b67380533075020d40253a849261805492610054926080533070495680005492600055020d60236a83908ec000256183f142003ec00024033080001028388286201330800010283882858014926700549266805492660053302d802140700000000717b484e01956860057b67780533075020da02e8a74926580549265005492640051133070495684005492648055020dc02caa73908ec000256183f142003ec0002403308000102838828f6003308000102838828ec003308000102838833070133090a0c2871fb3308000102838833070133090a0c2860fb49261003492608034926000314070000000005df02e6956800037b67180333075020de025fa74926f8024926f0024926e8023307049568e0024926e0025020e00242a73908ec000256183f132003ec00024033080001028388286e330800010283882865492650034926480349264003140700000000620d2894956840037b67580333075020e202fba649263803492630034926280333070495682003492620035020e402dea63908ec000256183f132003ec00024033080001028388280a33080001028388013307013309240a0c01956978104929580549295005492948053302e602140700000000717b484e019568c0157b97600533075020e80286a6956878104928400549283805492828052264893307049568a015492930055020ea0262a633082433075020ec0288a98378289795670010492710f895670010492708f895670010492700f8140700000000b2418ffb9568ff07958801956900107b9718f833075020ee021aa6826780003300f0020a048269b0003302f20228e10d8269b0005022f202da0d4926f8077b68f0077b67e8073307049568e0077b6ae0075020f402dea58267607b67d8078267587b67d0078267687b67c8073307249568c0078269707b69c0075020f602b5a58267e800956a00077ba7b8008267d8007ba7b0008267c8007ba7a8003307449568a0078269d0007ba9a0005020f80284a58267c000817756177f158268c00048088000330701330964280f013307013309648268e0000a0c7b68f800330000032880a895670010492750f895670010492748f895670010492740f814070000000005df02e69568ff07958841956900107b9758f833075020fa0219a595670010492738f895670010492730f895670010492728f83307049568ff0795882195690010492920f83300fe0228e5a49567ff079577794917184917104917086479140700000000620d28949568ff07958881007b972033075020fc02b9a49567ff0795777949074917f895670010492768f83307049568ff0795886195690010492960f85020fe028da48267c000817756173f138268c00048084033070133092428193307013309248268e0000a0c7b68f80033000003288ba78268e0000a0c7b68f80033000003287aa77b68f8005020000373a783788169f80033070a0c28e0ec3307018268d0000a0c285cfb9567ff07957779492798034927900349278803647933020203140700000000717b484e019568ff07958801047b97a003330750200403f1a39568ff079588794928800349287803492868034164893307049568ff079588e103492970033300c40228c2a33307018268d00033090a0c2892f7951110ff7b10e8007b15e0007b16d8009515f0008411f0828c10828b18828a0882887b1a287b1b18d4ab0bd4c80ad4ba0a98aa207b1c20d4cb0b97bb20d4ba0a520af7017b17088297187b17688296108297087b176082977b17589517b0007b18105020060315a2821758d46709821868821a60d4a808d489099899207b1650d46808978820d498085208ae018219c800821ac000821bb8008218b0007b18307b1890007b1b387b1b98007b1a407b1aa000951890007b19487b19a800647650200803f2a2821768821850d478081407e0ffffff00000000d87609821a6094a9948951095501821820821918d49808821910d87907821a2894a7948751073b01646c821630821a40d4a607821848821b38d4b808d48707987720d4a808978820d487075207140183c7208398207b1828646850200a03b0a57b1720821728646850200c03a2a56478821720646950200e03a5a0821758c86707d86708821960821b38c8b909c88909d3b90ad8b90bdaa80b821850821a40c8a808d8a80a821c68821648c86c0cc8ca0ac88b0bd88b08c8a808d4b808140ae0ffffff00000000d8a70a949a948a510a9100837720492188004921800049117895187049117050201003f3a182163095661f1407e0ffffff01000000d26707821858c88707d88708821a60c88a09d8a90ada880a821850c88a0ad88a08821b68c8b808957b20d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b8718955110ff8210e8008215e0008216d8009511f000320000330804330014030a023302160328240b50221603210b510a0b502218038e0b320033080001028388330701330933001a030a0c33021c03289c0c50221c03990c33082433001e030a023302200328e40a50222003e10a510a0b502222034e0b3200330800010283883307013309330024030a0c01951170ff7b1088007b1580007b1678951590008411f064728289827408828c088273959a1fd89a00c80c0984aae07b1308c8a303d8a30bc8490ac8ba0ad39a06d89a07da6b07822b18d8c90c828610822210828818da000cc86c0cd86c06c82c09c89707d8c90cd89709c8b808c86808c8c808c8980c8ec88e79dbc809d4c7088ea6db8906520657821808d88308d34a09d84a06da9806d82708d3bc09d8bc0bda980bd32708d49808da860b520b307b13507b1a587b17603307409518507b1c685020260344a0955170ff821088008215800082167895119000320049114049113849113033022803140700000000717b484e019518307b1748330750202a0309a04911284911204911104133070495181049111850202c03f09f3908ec000256183f0b2003ec000240013308000102838833070133092433002e030a0c01828a18828b108282088eac8eb9dbac09d4ba0a8e2bdba90b520b30828895891fd88908c828088488018499e0959a20d89a09c8980bd88b08da99084917187b7a7b7b087b781032009511b07b10487b15409515508411f049113049112849112033023003140700000000717b484e019518207b17383307502032034f9f491118491110490141330704641849110850203403389f3908ec000256183f0b2003ec0002400133080001028388330701330924330036030a0c019511c07b10387b15307b16289515408411f0828910828a18828b088288d4ba0ad4980bd4ab0b98bb20d4a909979920d4b90952093f64766417502038039b9d821718821810821908d4780a889b0194ab510b22821a7b6a7b69087b68107b67189551c082103882153082162895114032000033080001028388330701330933003a030a0c01951120fc951a00037ba0d8007ba5d0007ba6c8009515e0038411e06416807410827a827b08d44a07d4b707510742048282108283088280140cffffffff000000008438ff8407ffd2c20c7b67487b6c38d4c7077b6840d48707510774048297187b6798008297107b6788008297087b67800082977b679000492638037b6a607b6a20037b6b587b6b2803956820037b64507b643003330750203c03f29d492618034926100349260803330720956800034926000350203e03d59d3309ec00023907ec000256173f0b2003ec000240017b69709517e08479e07b696864913307000102837783993308407b6778330040030a08826a6833024203286a07826a685022420364077bba587bb9507bb8487bb7409567e0029568400350204403629e956800028289f8008287f000828ce800828be00082689800d389037b6928d8890882698800d8970a7b6a10da3a08826a8000d3ac027b6c30d8ac0c826a90007b6b68d8ab0a7b6a18da2a0c7b6720d37909d439077b6c08da7c085208be034926d802826760956900027b97c0008267587b97c8009568c0028267507b97d000330750204603e99c4926b8024926b0024926a8023307209568a0024926a00250204803cc9c82678800826820c97807826908c997087b6820d8970782689800826928c98908826910c99808c978087b6828826970819782688000826a30c98a08826a18c9a8087b683082689000826a68c98a0a7b6a6856173f08480940019517e08477e07b67186471837933084082677833004a030a08826a1833024c03282706826a1850224c0321067bba787bb9707bb8687bb7608267287bb798008267207bb790008267307bb788008267687bb78000956760039568800350204e03849d49269802826738956900027b9790008267407b978800956880028267487b978000330750205003e89b492678024926700249266802330720956860024926600250205203cb9b8268709517e08477e07b67686471818756173f08480840019517e08477e07b677064718379330840826778330054030a08826a703302560328f603826a7050225603f0038268687b8a187b89107b8b087b879567400250205803619c826748028268400282625802826a5002826b8000c87b0b826c9000c88c0cd88c08c88b0bd37b09d87b07da980782688800c8a80882699800c89202d8a809c82909c88707d88708c89808956900037b9ca0007b9ba8007b97b0007b98b8009568a00382676850205a03779c9567200233084050205c03bd99956b000282ba3882b83082b92882b72050225e034b045208be0082689000956a00027ba8826880007ba808826888007ba81095680002826998007ba9187b67980050206003b09a4926b801826738956c00017bc7b0008267407bc7a8008267487bc7a0004926d8018267507bc7d0008267587bc7c8003a07c800023a08d000023a09d80002826a607bcac0007bc7f8007bc8f0007bc9e8003a07e000023308209569e001956ac001956ba0017bc7e00082679800502062037a9c955120fc951700038270d8008275d0008276c8009511e0033200004926d0004926c8004926c0001407000000001efdc6969568c0007b67d800330750206403fc994926b8004926b0004926a8003307049568a0004926a00050206603df993908ec000256183f112003ec0002403308000102286833080001022861492610014926080149260001140700000000052f44ec956800017b6718013307502068039c994926f8004926f0004926e8003307049568e0004926e00050206a037f993908ec000256183f112003ec0002403308000102280833080001020183883307013309240a0c014926900149268801492680011407000000008cd350e4956880017b679801330750206c033299492678018267507b6770018267587b676801330704956860018269607b69600150206e030c998267287b6758018267207b6750018267307b674801330724956840018269687b69400150207003e39882679800956a00017ba738826788007ba730826780007ba72833074495682001826990007ba92050207203b698826770817756177f0c82687048088000013307013309648268780a0c33073300740328f49b330750207403ef9b33070150207603e69b8269e80082970881981082996f77977a206f88988820d48a0a9877206f98978920d4970798882095697810320282970881981082996f77977a206f88988820d48a0a9877206f98978920d497079888209569ff07959979320282970881981082996f77977a206f88988820d48a0a9877206f98978920d49707988820320282a71882a81082a90882aa6f776f886f996faa956b781895bc00043202826b180188b98000826ad000db9a08826cd800826ae800d4ca0ada970a93b8ff93baff826be000939b939c8267f000e0a707320282970881981082996f7a97a7206f88988820320282a71882a81082a90882aa6f776f8b6f996faa32028267f8009577208268f800d88708826ae000c88a09d8a90ada880a8268e800c88a0ad88a08826bf000c88b0b3202c8ba0a7b6ae80097aa3b989b05d4ab0b8267080182731897993b827a10988805d498076f346fa93202c89c0cd89c0b82671001d87909c89407c8b707d4c809d4a707d47909989920d4c707977720d497073202977b3f988c01d4bc0397ac3f987701d4c70797883f989c01d4c80898aa018499019a9c3202939b8268f800e0a80882690001e0790782690801e0b909826a1001e0ca0a3202c89c0cd89c0ad84909c89307c8a707d4c809d4b707d47909989920d4c707977720d497073202d49a0ad48709d4a909989920d4a808978820d498083202d88708826a8000c88a09d8a90ada880a82688800c88a0ad88a08826b9000c88b0b32028eb9858801dbb9088e498ecadac90ada780a320282171082181814090000000001000000d37909d48909987a2088aa01948a939a320282a71882a81082a90882aa6f776f886f996faa956b000332028268e8004918084908481810000a33077818c87609320233077818c8760a95ab00033202d49b0bd48709d4b909989920d4b808978820d4980832028219821a087b697b6a087b67107b68189551c08210388215308216289511403202d49707d48b09d47909989920d48707977720d497073202c8790bc8ab0bd39b0a7b6bf000d89b09daa709826be800320297773b9878387b6818019a8980003307ff3308ff32027b67d8007b68e0008267d000d487077b67d000826718019579803307ff3308ff32028268f0008269e000d49808826ae8008269f800d4a909d48909989920d4a808978820d4980832028097108298829908d48707d497073202c8b707c88a0ad88a0cc8c7078260e000c8a000d8a00a320297a8037b6818018d8980003307ff3308ff3202d4ca0ada980a3308ffdab807dab80a939c3202e0890882690801e0c909826a1001e0ba0a320282b7b80082b8c00082b9b00082baa800d49808d4a707d4870732029511c07b10387b15307b16289515408411e064768317320233077818c8760a95ab0001320282a71882a81082a90882aa6f773202849a40520a195109148d9a40cfa80ad09808d09707d4a707320032009597c0d0780733083200849a40520a195109148d9a40d0a70acf9707cf9808d4a808320032009598c0cf870833073200510816888c520c1a9511d07b10287b15207b16182816887c00e1f505510cec3304330333073308288fbf491108554800e1f505be00330b251409000000000020bcbe978825987c0198cadad4a80897772514000020bcbe00000000330c987320977720987720cb0802ca020ac9a806280ec80606986a209522ff520a159825205205f1cac205976a20d43a0aac5ae5978820d48308ca920ac9a808cb0804ca04067b1810c9680a280ec80a0a98a8209544ff5208159848205208f1cac40897a520d47506ac86e53303821810978820d47808ca9409c99808d0b809972220c82404821b08520bc10028c300cb9803963400e1f505330025c948041409000000000020bcbe974825987c0198cadad4a804977725649c14090020bcbe0000000064cb330c987520977720987820cb9402ca9206c9640a280ec89a0a98a7209522ff5207159827205207f1cac20797a620d45606ac76e5974420d44507cab20ac9a705cb9504ca9407c97506280ec896069867209544ff5207159847205207f1cac407976a20d48a0aac7ae5975520d45808cab407c97808d00809972220c82404821b08510b09491b087bb90182102882152082161895113064476438320049922425494b2a252da9944c4949214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a92284925495592922425494a5292aaaa242549492a49aa945292a494529254524444141111294992a42449524a9248124a252525458a142952a44891a2244544444992208484a134290d89444444a488081211898888481141224244443422229224911011512949224992244924494444448848449224494444081140a2284908219204104588848888a89424912449924422221149422449922449444408114052942422028848880891a41225928824918808112192242449924a49482222222222422144308942254d124912a2a89224924424912492244922852492244aaa42229124492449249114239124124992942411115144448888489244921289242291244992244912914444442824510a49542914514524a9aa482452a38824122591442289484424259210111122492249112192481249241289441249242289249144a288544a4444549244444492a4449224114992101122222222222144241142081122492242324992241111912411494442922489888888984824428848921011894812222211214212894422444444444488081111952822119188888810112222222449924a11221111111111a110229844a19246124922445125492489482249244992440a91489228a90a8944922491249144528c4492482449529244444411112122224912494a24221189484444844212a590449542115591a4282a2a52a44834229248441291441249249224212244444424292288249244128944229144128948224924918814a54444448948241111918844222291489204114124128922822022892008820822492282984822492449222222492222912022221289446292481249221104119124888844240922221141049148241221222222228248101111410ca546440430a2202224220811848444440430a2202224220811848444440430a2202224220811848444440430a2202224220811848444440430a220222422081184421111018c28880889084204a1b0a48844509528a84a881089281a11484020018104121010101011111145824492248992444424124944129182484494880842049328548a2455454444444410894422918848108988882089888888888822121111118d08922812111122828888888848101111499224898888888828221111118d88884892444922221111111111911491482412212a924a494a1211118944222222222222222288041149122411212222111111512448922449148948108988882089081111918888886844444492244a121191484424128988884422914824225244229148441289442211918248442811118410c1240a1589282211a49492a410451491082222220a128944a244248228324925a24412244911412422224988449248244992244992482249441189208944444444a22012891291208a4c528928910429a52429a28844902422058924494a441244914954a2489244922492242249144952929452114444444444444444444444444444100922498224222244242222228a04499224892211112122888888248924924422254924a5481211111111114124111149241211541191888840222222a24810245124228d882495444444248a0411114992244988228a041149a42022a244042142442651a8441491089224228888888824929444149108928822414444444144448908a2884ca2125144224892882022914422118944242a89281244249182888812114424894414914844242232894a44118920492292482422888808114144444412499224422222222222824810111111241111111141441189202949444444444408214444444444442422222288041191244992241111404444441091000288442511444494484444444144245149924444440411690490284a222222111111111442a440444424828882888888882480482491441240924892e8a4252922828828a24644121111918888888888202211414444242511492449229244224992249144124922499224912449124992242949228848929488444444109124491209222222222291482422228a88202212499224119124894410919224499224892449922449922492244992880410894a9224952492244992441211444450441091449224912492244900a924111111412488489288449248924444041011414402884425918808114124888888888888282222888888488a24924892244992281244444a922449228982248288102284104924499224912471d22823894422892422124449524992481049522992a424492449922489444424a2202211111145440491244992249188888888880822412492141111410091949248444424924444049142348948108924894824892449242202888808221240028844511289448488082289249144229144444444a48888880822111111111111411289a22412918888882022820022519444229188888820221149229288248944128928221144441489489224928a08220a22a2881491249148228924922492a493484444442291222222828804914892202912111111510411452482a42421122184888888484444444444444a9224254952490555898888221111115124888848928428a288449044448488202222222292282222221a9144229124492492248924892449122549222242041145248288245210118908922844308942258a24554592222222a28844229188082222229124492489248948121141248844225144444444231245922449444444444414441491089292444444082144444444222222282a11111151248888489244492222111111914411292222222291480a51441189208924229124a28844101111051121114108114ca25091882212411445914411111111051189441291208a4ca2124592aa2249114482489224491289229188144144118920294944444444082144444424222282481011114144448488444444442382248a44828824499288881011444444922449122949229128224592244992245144444444444444109124802415118988241291205245894444441a912449224a4444222222222212111111111111110511111211a420892a51442288a2289228221289484144229112912044308942258a480491a40822914824224124491011111111111541222835222214244515420889a402881811894412892449222222828844242a2292442489082292481249249248124922954454894824493249922449121141444444100922222249924444448888088288880822222288884844448482a4a84248224924212412a99248121911914812892449228a88202222892449241149922449121111114922228848224924914822492429922a25a212194992249124499244441009222222499244444484880882882491482452444410111123299248224922499224498c04111111111151244849114510114554c4889688088a54224144241289281244a228228888222a228d88082312442249221249224944222280888820220144a2221289081111441249228944228988888848111111114422222229924822499224254912510445aa1689888888882012111111111109221111111111111111114911111144242249928844444444048d480091a82811298a828828a246442434b5820aa50aa50aa50aa50aa50aa50aa50aa5124a25944a444400230a22422282104128a1845209a5124a25944a24228088888228224994244a24220a20220a22115122228822924449a24422a20022a220a288441091242241442291482222412422224a4404514424514934944a440410511022184a1a1101441444442282104128a144440430a220222422081184124a2895502a11114044414424220811840a1511014414444422821041a8d0a4111111c088828808252248414544440410892888282211444422824422914804111111918808a28848924411898888082012511011119148442492a4002252102911894404514492922822514422282a8912898822801151108908252222894a44442449499224492449522241922449928888482412912848124052912449454992244922494152500a9224499224499224092015894812240124499224499224495292888868a24890a0508a2241a24890a0508a46442295942449922449922449922495942449922449922409222251920860529044922044309444935452529224499292922449228049419294204430944493244952922449054992524992240da5684444444a49222980244992482412452412912888884404214430490a95448924489288202222224924892491244992884424225110118908224992489224459224924426a9244a244192241289444410894844a22022121124494526a9244a244192144144442492248944922411111109224124491011452211892012914844221142484444484444041111118d8800220a222211418820148a8800220a22221141882014963422028828884422910812894422114424124944821489492a529020924a494a12259592942452522949494a52554411918824898a94544a49aa2a12892491444a24892449954492244952922449922a1289444a92244992922449892491442aa9a4248024a9925415450a9122519224a9942449529224294924511291141189485244229224292529492229114949924a24524444929224a92251922a4992a4924a9224a9a45292a420554940024892045092242549922449922425499224254992249220092049520095244949922449922429499224499224499a241500"
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint()": "1249c58b",
              "name()": "06fdde03",
              "redeem(uint128,uint32,bytes32)": "7b135643",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/NotReallyACrossChainToken.sol\"\nobject \"NotReallyACrossChainToken_958\" {\n    code {\n        {\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 25)\n            mstore(add(memPtr_1, 32), \"NotReallyACrossChainToken\")\n            let memPtr_2 := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let memPtr_3 := mload(64)\n            let newFreePtr_1 := add(memPtr_3, 64)\n            if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr_1)\n            memPtr_2 := memPtr_3\n            mstore(memPtr_3, 4)\n            mstore(add(memPtr_3, 32), \"NRXT\")\n            let newLen := mload(memPtr_1)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n            }\n            let _1 := sload(/** @src 1:1648:1661  \"_name = name_\" */ 0x03)\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            length := shr(1, _1)\n            let outOfPlaceEncoding := and(_1, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _2 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(memPtr_1, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr_1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:1648:1661  \"_name = name_\" */ 0x03, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:1648:1661  \"_name = name_\" */ 0x03, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr_1, srcOffset))\n                }\n                sstore(/** @src 1:1648:1661  \"_name = name_\" */ 0x03, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 1:1648:1661  \"_name = name_\" */ 0x03, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(memPtr_3)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n            }\n            let _3 := sload(4)\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding_1 := and(_3, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _4 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _4) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_3, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_3, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 1:1648:1661  \"_name = name_\" */ 0x03, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(4, add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr_3, srcOffset_1))\n                }\n                sstore(4, or(and(value_1, not(shr(shl(/** @src 1:1648:1661  \"_name = name_\" */ 0x03, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            let _5 := mload(64)\n            let _6 := datasize(\"NotReallyACrossChainToken_958_deployed\")\n            codecopy(_5, dataoffset(\"NotReallyACrossChainToken_958_deployed\"), _6)\n            return(_5, _6)\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 4:\"@openzeppelin/contracts/utils/Context.sol\", 5:\"contracts/NotReallyACrossChainToken.sol\"\n    object \"NotReallyACrossChainToken_958_deployed\" {\n        code {\n            {\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := 0\n                        let slotValue := sload(/** @src 1:1837:1842  \"_name\" */ 0x03)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, 32), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 1:1837:1842  \"_name\" */ 0x03)\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(_1, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(_1, i), 32)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(64)\n                        mstore(memPos, 32)\n                        return(memPos, sub(abi_encode_string(_1, add(memPos, 32)), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value := calldataload(36)\n                        /// @src 1:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 1:9794:9813  \"owner == address(0)\" */ iszero(/** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 1:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 36)\n                        }\n                        let _3 := and(/** @src 1:9892:9913  \"spender == address(0)\" */ value0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                        /// @src 1:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 1:9892:9913  \"spender == address(0)\" */ iszero(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _3)\n                        /// @src 1:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 4:735:745  \"msg.sender\" */ caller())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 1:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                        mstore(0, _3)\n                        mstore(0x20, /** @src 1:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        dataSlot_1 := keccak256(0, 0x40)\n                        sstore(/** @src 1:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ value)\n                        /// @src 1:10066:10097  \"Approval(owner, spender, value)\"\n                        let _4 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                        mstore(_4, value)\n                        /// @src 1:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_4, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32, /** @src 1:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 4:735:745  \"msg.sender\" */ caller(), /** @src 1:10066:10097  \"Approval(owner, spender, value)\" */ _3)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x1249c58b {\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 5:1083:1123  \"if (msg.value == 0) revert NoValueSent()\"\n                        if /** @src 5:1087:1101  \"msg.value == 0\" */ iszero(/** @src 5:1087:1096  \"msg.value\" */ callvalue())\n                        /// @src 5:1083:1123  \"if (msg.value == 0) revert NoValueSent()\"\n                        {\n                            /// @src 5:1110:1123  \"NoValueSent()\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1110:1123  \"NoValueSent()\" */ shl(226, 0x27738acf))\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 4)\n                        }\n                        /// @src 1:7509:7530  \"account == address(0)\"\n                        let _5 := iszero(/** @src 5:1139:1149  \"msg.sender\" */ caller())\n                        /// @src 1:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 1:7509:7530  \"account == address(0)\" */ _5\n                        /// @src 1:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 1:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 1:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 36)\n                        }\n                        let _6 := sload(/** @src 1:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let sum := add(_6, /** @src 5:1087:1096  \"msg.value\" */ callvalue())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        if gt(_6, sum)\n                        {\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, shl(224, 0x4e487b71))\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ 0x11)\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ 0x24)\n                        }\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        sstore(/** @src 1:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sum)\n                        /// @src 1:6624:7049  \"if (to == address(0)) {...\"\n                        _5 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                        mstore(0, /** @src 5:1139:1149  \"msg.sender\" */ caller())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        mstore(0x20, 0)\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, add(sload(/** @src 1:7002:7024  \"_balances[to] += value\" */ dataSlot_2), /** @src 5:1087:1096  \"msg.value\" */ callvalue()))\n                        /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                        let _7 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                        mstore(_7, /** @src 5:1087:1096  \"msg.value\" */ callvalue())\n                        /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_7, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32, /** @src 1:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1139:1149  \"msg.sender\" */ caller())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        return(0, 0)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _8 := sload(/** @src 1:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _8)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_5324()\n                        let value_1 := calldataload(68)\n                        let _9 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _9)\n                        mstore(32, 1)\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 1:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_4 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                        mstore(0, and(/** @src 4:735:745  \"msg.sender\" */ caller(), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:3638:3656  \"_allowances[owner]\" */ dataSlot_3)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        dataSlot_4 := keccak256(0, 0x40)\n                        let _10 := sload(/** @src 1:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_4)\n                        /// @src 1:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 1:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_10, /** @src 1:10580:10597  \"type(uint256).max\" */ not(0))\n                        /// @src 1:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 1:10613:10743  \"if (currentAllowance < value) {...\"\n                            if /** @src 1:10617:10641  \"currentAllowance < value\" */ lt(_10, value_1)\n                            /// @src 1:10613:10743  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 1:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                mstore(4, /** @src 4:735:745  \"msg.sender\" */ caller())\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                mstore(36, _10)\n                                mstore(68, value_1)\n                                /// @src 1:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 100)\n                            }\n                            /// @src 1:9790:9879  \"if (owner == address(0)) {...\"\n                            if /** @src 1:9794:9813  \"owner == address(0)\" */ iszero(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _9)\n                            /// @src 1:9790:9879  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                mstore(4, 0)\n                                /// @src 1:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 36)\n                            }\n                            /// @src 1:9888:9978  \"if (spender == address(0)) {...\"\n                            if /** @src 1:9892:9913  \"spender == address(0)\" */ iszero(/** @src 4:735:745  \"msg.sender\" */ caller())\n                            /// @src 1:9888:9978  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                mstore(4, 0)\n                                /// @src 1:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 36)\n                            }\n                            mstore(0, _9)\n                            mstore(32, 1)\n                            let dataSlot_5 := keccak256(0, 64)\n                            /// @src 1:9987:10014  \"_allowances[owner][spender]\"\n                            let dataSlot_6 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                            mstore(0, and(/** @src 4:735:745  \"msg.sender\" */ caller(), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 1:9987:10005  \"_allowances[owner]\" */ dataSlot_5)\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            dataSlot_6 := keccak256(0, 0x40)\n                            sstore(/** @src 1:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_6, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(/** @src 1:10809:10833  \"currentAllowance - value\" */ _10, value_1))\n                        }\n                        /// @src 1:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_1)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, /** @src 1:2761:2763  \"18\" */ 0x12)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _11 := sload(keccak256(0, 64))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _11)\n                        return(memPos_5, 32)\n                    }\n                    case 0x7b135643 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value_2 := calldataload(4)\n                        let _12 := and(value_2, 0xffffffffffffffffffffffffffffffff)\n                        if iszero(eq(value_2, _12)) { revert(0, 0) }\n                        let value_3 := calldataload(36)\n                        let _13 := and(value_3, 0xffffffff)\n                        if iszero(eq(value_3, _13)) { revert(0, 0) }\n                        mstore(0, /** @src 5:1275:1285  \"msg.sender\" */ caller())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        mstore(32, 0)\n                        /// @src 5:1261:1323  \"if (balanceOf(msg.sender) < amount) revert InsufficientFunds()\"\n                        if /** @src 5:1265:1295  \"balanceOf(msg.sender) < amount\" */ lt(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sload(keccak256(0, 64)), /** @src 5:1265:1295  \"balanceOf(msg.sender) < amount\" */ _12)\n                        /// @src 5:1261:1323  \"if (balanceOf(msg.sender) < amount) revert InsufficientFunds()\"\n                        {\n                            /// @src 5:1304:1323  \"InsufficientFunds()\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1304:1323  \"InsufficientFunds()\" */ shl(224, 0x356680b7))\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 4)\n                        }\n                        /// @src 1:8035:8056  \"account == address(0)\"\n                        let _14 := iszero(/** @src 5:1275:1285  \"msg.sender\" */ caller())\n                        /// @src 1:8031:8120  \"if (account == address(0)) {...\"\n                        if /** @src 1:8035:8056  \"account == address(0)\" */ _14\n                        /// @src 1:8031:8120  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 1:8079:8109  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:8079:8109  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            mstore(4, 0)\n                            /// @src 1:8079:8109  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 36)\n                        }\n                        /// @src 1:6074:6614  \"if (from == address(0)) {...\"\n                        _14 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                        mstore(0, /** @src 5:1275:1285  \"msg.sender\" */ caller())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        mstore(32, 0)\n                        let _15 := sload(keccak256(0, 64))\n                        /// @src 1:6317:6432  \"if (fromBalance < value) {...\"\n                        if /** @src 1:6321:6340  \"fromBalance < value\" */ lt(_15, _12)\n                        /// @src 1:6317:6432  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            mstore(4, /** @src 5:1275:1285  \"msg.sender\" */ caller())\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            mstore(36, _15)\n                            mstore(68, _12)\n                            /// @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, 100)\n                        }\n                        mstore(0, /** @src 5:1275:1285  \"msg.sender\" */ caller())\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        mstore(32, 0)\n                        sstore(keccak256(0, 64), sub(/** @src 1:6570:6589  \"fromBalance - value\" */ _15, _12))\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        sstore(/** @src 1:6791:6812  \"_totalSupply -= value\" */ 0x02, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(sload(/** @src 1:6791:6812  \"_totalSupply -= value\" */ 0x02), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _12))\n                        /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                        let _16 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                        mstore(_16, _12)\n                        /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_16, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32, /** @src 1:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 5:1275:1285  \"msg.sender\" */ caller(), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0)\n                        /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                        let _17 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                        /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                        mstore(_17, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ shl(225, 0x0a028d97))\n                        mstore(/** @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\" */ add(_17, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4), and(/** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ div(_12, /** @src 5:1462:1465  \"1e8\" */ 0x05f5e100), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0xffffffffffffffffffffffffffffffff))\n                        /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                        mstore(add(/** @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\" */ _17, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 36), _13)\n                        mstore(/** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ add(/** @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\" */ _17, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 68), calldataload(68))\n                        /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                        let _18 := call(gas(), /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ 0x624d7e5d9f6e02e2b67a6be9db161d5e8f126c64, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\" */ _17, 100, _17, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0)\n                        /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                        if iszero(_18)\n                        {\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            let pos := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            returndatacopy(pos, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                        let expr_mpos := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                        /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                        if _18\n                        {\n                            let _19 := returndatasize()\n                            returndatacopy(_17, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\" */ _19)\n                            finalize_allocation(_17, _19)\n                            let _20 := add(_17, _19)\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            if slt(sub(_20, _17), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32)\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            {\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            let offset := mload(_17)\n                            if gt(offset, 0xffffffffffffffff)\n                            {\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            let _21 := add(_17, offset)\n                            if iszero(slt(add(_21, 0x1f), _20))\n                            {\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            let length_1 := mload(_21)\n                            let _22 := array_allocation_size_bytes(length_1)\n                            let memPtr := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            finalize_allocation(memPtr, _22)\n                            mstore(memPtr, length_1)\n                            if gt(add(add(_21, length_1), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32), /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ _20)\n                            {\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                revert(0, 0)\n                            }\n                            mcopy(/** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ add(memPtr, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32), /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ add(_21, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32), length_1)\n                            mstore(add(add(/** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ memPtr, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ length_1), 32), 0)\n                            /// @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\"\n                            expr_mpos := memPtr\n                        }\n                        /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                        let _23 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                        /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                        mstore(_23, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ shl(224, 0x47400c23))\n                        /// @src 5:157:173  \"address(0xA0000)\"\n                        mstore(/** @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\" */ add(_23, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4), 32)\n                        /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                        let _24 := call(gas(), /** @src 5:165:172  \"0xA0000\" */ 0x0a0000, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\" */ _23, sub(/** @src 5:157:173  \"address(0xA0000)\" */ abi_encode_string(expr_mpos, add(/** @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\" */ _23, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 36)), /** @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\" */ _23), _23, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 64)\n                        /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                        if iszero(_24)\n                        {\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            let pos_1 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            returndatacopy(pos_1, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                        let expr_mpos_1 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                        /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                        if _24\n                        {\n                            let _25 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 64\n                            /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                            if gt(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 64, /** @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\" */ returndatasize()) { _25 := returndatasize() }\n                            finalize_allocation(_23, _25)\n                            /// @src 5:157:173  \"address(0xA0000)\"\n                            let _26 := slt(sub(/** @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\" */ add(_23, _25), /** @src 5:157:173  \"address(0xA0000)\" */ _23), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 64)\n                            /// @src 5:157:173  \"address(0xA0000)\"\n                            if _26\n                            {\n                                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                                revert(0, 0)\n                            }\n                            /// @src 5:157:173  \"address(0xA0000)\"\n                            _26 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            let memPtr_1 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                            let newFreePtr := add(memPtr_1, 64)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 36)\n                            }\n                            mstore(64, newFreePtr)\n                            /// @src 5:157:173  \"address(0xA0000)\"\n                            mstore(memPtr_1, abi_decode_uint64_fromMemory(_23))\n                            mstore(add(memPtr_1, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32), /** @src 5:157:173  \"address(0xA0000)\" */ abi_decode_uint64_fromMemory(add(_23, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32)))\n                            /// @src 5:1526:1576  \"IXcm(XCM_PRECOMPILE_ADDRESS).weighMessage(message)\"\n                            expr_mpos_1 := memPtr_1\n                        }\n                        /// @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\"\n                        if iszero(extcodesize(/** @src 5:165:172  \"0xA0000\" */ 0x0a0000))\n                        /// @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\"\n                        {\n                            /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\"\n                        let _27 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                        /// @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\"\n                        mstore(_27, /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ shl(224, 0xd3b7e04d))\n                        /// @src 5:157:173  \"address(0xA0000)\"\n                        mstore(/** @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\" */ add(_27, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4), 96)\n                        /// @src 5:157:173  \"address(0xA0000)\"\n                        let tail := abi_encode_string(expr_mpos, add(/** @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\" */ _27, /** @src 5:1392:1487  \"ICrossChainTransfers(CROSS_CHAIN_TRANSFERS_ADDRESS).teleport(amount / 1e8, paraId, beneficiary)\" */ 100))\n                        /// @src 5:157:173  \"address(0xA0000)\"\n                        mstore(add(/** @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\" */ _27, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 36), /** @src 5:157:173  \"address(0xA0000)\" */ and(mload(expr_mpos_1), 0xffffffffffffffff))\n                        mstore(add(/** @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\" */ _27, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 68), /** @src 5:157:173  \"address(0xA0000)\" */ and(mload(add(expr_mpos_1, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32)), /** @src 5:157:173  \"address(0xA0000)\" */ 0xffffffffffffffff))\n                        /// @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\"\n                        let trySuccessCondition := call(gas(), /** @src 5:165:172  \"0xA0000\" */ 0x0a0000, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0, /** @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\" */ _27, sub(tail, _27), _27, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0)\n                        /// @src 5:1591:1644  \"IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight)\"\n                        if trySuccessCondition\n                        {\n                            finalize_allocation(_27, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0)\n                            _2 := 0\n                        }\n                        /// @src 5:1587:1789  \"try IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight) {...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 {\n                            /// @src 5:1664:1697  \"RedeemSuccess(msg.sender, amount)\"\n                            let _28 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                            mstore(_28, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _12)\n                            /// @src 5:1664:1697  \"RedeemSuccess(msg.sender, amount)\"\n                            log2(_28, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32, /** @src 5:1664:1697  \"RedeemSuccess(msg.sender, amount)\" */ 0x872717deb9fe44de9e827e6810e66a226c9deb394feffa4652f6d1ed5f6ad800, /** @src 5:1275:1285  \"msg.sender\" */ caller())\n                        }\n                        default /// @src 5:1587:1789  \"try IXcm(XCM_PRECOMPILE_ADDRESS).execute(message, weight) {...\"\n                        {\n                            /// @src 5:1709:1789  \"catch (bytes memory reason) {...\"\n                            let data := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _2\n                            /// @src 5:157:173  \"address(0xA0000)\"\n                            switch returndatasize()\n                            case 0 {\n                                data := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 96\n                            }\n                            default /// @src 5:157:173  \"address(0xA0000)\"\n                            {\n                                let _29 := returndatasize()\n                                let _30 := array_allocation_size_bytes(_29)\n                                /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                                let memPtr_2 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                                /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                                finalize_allocation(memPtr_2, _30)\n                                /// @src 5:157:173  \"address(0xA0000)\"\n                                mstore(memPtr_2, _29)\n                                data := memPtr_2\n                                returndatacopy(add(memPtr_2, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32), _2, /** @src 5:157:173  \"address(0xA0000)\" */ returndatasize())\n                            }\n                            /// @src 5:1758:1778  \"RedeemFailed(reason)\"\n                            let _31 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                            /// @src 5:1758:1778  \"RedeemFailed(reason)\"\n                            mstore(_31, shl(225, 0x3ec89bff))\n                            /// @src 5:157:173  \"address(0xA0000)\"\n                            mstore(/** @src 5:1758:1778  \"RedeemFailed(reason)\" */ add(_31, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 4), 32)\n                            /// @src 5:1758:1778  \"RedeemFailed(reason)\"\n                            revert(_31, sub(/** @src 5:157:173  \"address(0xA0000)\" */ abi_encode_string(data, add(/** @src 5:1758:1778  \"RedeemFailed(reason)\" */ _31, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 36)), /** @src 5:1758:1778  \"RedeemFailed(reason)\" */ _31))\n                        }\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        return(_2, _2)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPtr_3 := mload(64)\n                        let ret_1 := _2\n                        let slotValue_1 := sload(4)\n                        let length_2 := _2\n                        length_2 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_2 := and(length_2, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_2, 32))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(_2, 0x24)\n                        }\n                        mstore(memPtr_3, length_2)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_3, 32), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_3, shl(5, iszero(iszero(length_2)))), 32)\n                        }\n                        case 1 {\n                            mstore(_2, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _2\n                            for { } lt(i_1, length_2) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr_3, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_1 := add(add(memPtr_3, i_1), 32)\n                        }\n                        finalize_allocation(memPtr_3, sub(ret_1, memPtr_3))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, 32)\n                        return(memPos_6, sub(abi_encode_string(memPtr_3, add(memPos_6, 32)), memPos_6))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value0_2 := abi_decode_address()\n                        /// @src 1:3440:3445  \"value\"\n                        fun_transfer(/** @src 4:735:745  \"msg.sender\" */ caller(), /** @src 1:3440:3445  \"value\" */ value0_2, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ calldataload(36))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value0_3 := abi_decode_address()\n                        let value1_1 := abi_decode_address_5324()\n                        mstore(_2, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 1:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let dataSlot_7 := keccak256(_2, 64)\n                        /// @src 1:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x40)\n                        let _32 := sload(/** @src 1:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _32)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_5324() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\"\n                size := add(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ and(add(length, 31), not(31)), /** @src 5:224:266  \"0x624d7E5D9F6E02E2b67a6bE9DB161d5e8f126C64\" */ 0x20)\n            }\n            /// @src 5:157:173  \"address(0xA0000)\"\n            function abi_decode_uint64_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n            }\n            /// @ast-id 381 @src 1:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                let _1 := and(/** @src 1:5457:5475  \"from == address(0)\" */ var_from, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _1)\n                /// @src 1:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 1:5457:5475  \"from == address(0)\" */ _2\n                /// @src 1:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 1:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 1:8079:8109  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                    mstore(/** @src 1:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 1:5473:5474  \"0\" */ 0x00)\n                    /// @src 1:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 36)\n                }\n                let _3 := and(/** @src 1:5552:5568  \"to == address(0)\" */ var_to, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _3)\n                /// @src 1:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 1:5552:5568  \"to == address(0)\" */ _4\n                /// @src 1:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 1:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 1:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                    mstore(/** @src 1:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 1:5473:5474  \"0\" */ 0x00)\n                    /// @src 1:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 36)\n                }\n                /// @src 1:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 1:5473:5474  \"0\" */ 0x00\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                mstore(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 1:5473:5474  \"0\" */ 0x00)\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                let _5 := sload(keccak256(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x40))\n                /// @src 1:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 1:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 1:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                    mstore(/** @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 1:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 100)\n                }\n                mstore(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _1)\n                mstore(0x20, /** @src 1:5473:5474  \"0\" */ 0x00)\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                sstore(keccak256(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x40), sub(/** @src 1:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 1:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 1:5473:5474  \"0\" */ 0x00\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                mstore(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ _3)\n                mstore(0x20, /** @src 1:5473:5474  \"0\" */ 0x00)\n                /// @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\"\n                let dataSlot := keccak256(/** @src 1:5473:5474  \"0\" */ 0x00, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 1:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ var_value))\n                /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ mload(64)\n                mstore(_6, var_value)\n                /// @src 1:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 5:759:1797  \"contract NotReallyACrossChainToken is ERC20 {...\" */ 32, /** @src 1:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207188c34e1d5e89b5da40219bfe5e146f67b12189bd14df0339dad9da9924f47f64736f6c634300081c0033\"\n    }\n}\n",
          "hash": "70678df6ca421dbe8f4ba35dc3c60104f498fd262869895f9c5fe8844f4e27cb",
          "factoryDependencies": {}
        }
      }
    }
  }
}